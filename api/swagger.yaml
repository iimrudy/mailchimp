---
swagger: "2.0"
info:
  version: "3.0.55"
  title: "Mailchimp Marketing API"
  contact:
    name: "Mailchimp API Support"
    email: "apihelp@mailchimp.com"
  x-permalink: "https://github.com/mailchimp/mailchimp-client-lib-codegen/blob/main/spec/marketing.json"
host: "server.api.mailchimp.com"
basePath: "/3.0"
schemes:
- "https"
consumes:
- "application/json"
produces:
- "application/json"
- "application/problem+json"
security:
- basicAuth: []
paths:
  /:
    get:
      tags:
      - "root"
      summary: "List api root resources"
      description: "Get links to all other resources available in the API."
      operationId: "getRoot"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/API Root"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_root"
        methodNameCamel: "getRoot"
  /activity-feed/chimp-chatter:
    get:
      tags:
      - "activityFeed"
      summary: "Get latest chimp chatter"
      description: "Return the Chimp Chatter for this account ordered by most recent."
      operationId: "getActivityFeedChimpChatter"
      parameters:
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "ChimpChatter Collection"
          schema:
            $ref: "#/definitions/inline_response_200"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_chimp_chatter"
        methodNameCamel: "getChimpChatter"
  /account-exports:
    get:
      tags:
      - "accountExports"
      summary: "List account exports"
      description: "Get a list of account exports for a given account."
      operationId: "getAccountExports"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_1"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "list_account_exports"
        methodNameCamel: "listAccountExports"
    post:
      tags:
      - "accountExports"
      summary: "Add export"
      description: "Create a new account export in your Mailchimp account."
      operationId: "postAccountExport"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Create an account export"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_1_exports"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "create_account_export"
        methodNameCamel: "createAccountExport"
  /account-exports/{export_id}:
    get:
      tags:
      - "accountExport"
      summary: "Get account export info"
      description: "Get information about a specific account export."
      operationId: "getAccountExportId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "export_id"
        in: "path"
        description: "The unique id for the account export."
        required: true
        type: "string"
        x-title: "Export ID"
        x-exportParamName: "ExportId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_1_exports"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_account_exports"
        methodNameCamel: "getAccountExports"
  /authorized-apps:
    get:
      tags:
      - "authorizedApps"
      summary: "List authorized apps"
      description: "Get a list of an account's registered, connected applications."
      operationId: "getAuthorizedApps"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_2"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "list"
        methodNameCamel: "list"
  /authorized-apps/{app_id}:
    get:
      tags:
      - "authorizedApps"
      summary: "Get authorized app info"
      description: "Get information about a specific authorized application."
      operationId: "getAuthorizedAppsId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "app_id"
        in: "path"
        description: "The unique id for the connected authorized application."
        required: true
        type: "string"
        x-title: "App ID"
        x-exportParamName: "AppId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_2_apps"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get"
        methodNameCamel: "get"
  /automations:
    get:
      tags:
      - "automations"
      summary: "List automations"
      description: "Get a summary of an account's classic automations."
      operationId: "getAutomations"
      parameters:
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "before_create_time"
        in: "query"
        description: "Restrict the response to automations created before this time.\
          \ Uses the ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        type: "string"
        format: "date-time"
        x-title: "Before Create Time"
        x-exportParamName: "BeforeCreateTime"
        x-optionalDataType: "Time"
      - name: "since_create_time"
        in: "query"
        description: "Restrict the response to automations created after this time.\
          \ Uses the ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        type: "string"
        format: "date-time"
        x-title: "Since Create Time"
        x-exportParamName: "SinceCreateTime"
        x-optionalDataType: "Time"
      - name: "before_start_time"
        in: "query"
        description: "Restrict the response to automations started before this time.\
          \ Uses the ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        type: "string"
        format: "date-time"
        x-title: "Before Start Time"
        x-exportParamName: "BeforeStartTime"
        x-optionalDataType: "Time"
      - name: "since_start_time"
        in: "query"
        description: "Restrict the response to automations started after this time.\
          \ Uses the ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        type: "string"
        format: "date-time"
        x-title: "Since Start Time"
        x-exportParamName: "SinceStartTime"
        x-optionalDataType: "Time"
      - name: "status"
        in: "query"
        description: "Restrict the results to automations with the specified status."
        required: false
        type: "string"
        enum:
        - "save"
        - "paused"
        - "sending"
        x-title: "Status"
        x-exportParamName: "Status"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_3"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "list"
        methodNameCamel: "list"
    post:
      tags:
      - "automations"
      summary: "Add automation"
      description: "Create a new classic automation in your Mailchimp account."
      operationId: "postAutomations"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Automation Workflow_1"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Automation Workflow"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "create"
        methodNameCamel: "create"
  /automations/{workflow_id}:
    get:
      tags:
      - "automations"
      summary: "Get automation info"
      description: "Get a summary of an individual classic automation workflow's settings\
        \ and content. The `trigger_settings` object returns information for the first\
        \ email in the workflow."
      operationId: "getAutomationsId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "workflow_id"
        in: "path"
        description: "The unique id for the Automation workflow."
        required: true
        type: "string"
        x-exportParamName: "WorkflowId"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Automation Workflow"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get"
        methodNameCamel: "get"
  /automations/{workflow_id}/actions/pause-all-emails:
    post:
      tags:
      - "automations"
      summary: "Pause automation emails"
      description: "Pause all emails in a specific classic automation workflow."
      operationId: "postAutomationsIdActionsPauseAllEmails"
      parameters:
      - name: "workflow_id"
        in: "path"
        description: "The unique id for the Automation workflow."
        required: true
        type: "string"
        x-exportParamName: "WorkflowId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "pause_all_emails"
        methodNameCamel: "pauseAllEmails"
  /automations/{workflow_id}/actions/start-all-emails:
    post:
      tags:
      - "automations"
      summary: "Start automation emails"
      description: "Start all emails in a classic automation workflow."
      operationId: "postAutomationsIdActionsStartAllEmails"
      parameters:
      - name: "workflow_id"
        in: "path"
        description: "The unique id for the Automation workflow."
        required: true
        type: "string"
        x-exportParamName: "WorkflowId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "start_all_emails"
        methodNameCamel: "startAllEmails"
  /automations/{workflow_id}/actions/archive:
    post:
      tags:
      - "automations"
      summary: "Archive automation"
      description: "Archiving will permanently end your automation and keep the report\
        \ data. You’ll be able to replicate your archived automation, but you can’\
        t restart it."
      operationId: "archiveAutomations"
      parameters:
      - name: "workflow_id"
        in: "path"
        description: "The unique id for the Automation workflow."
        required: true
        type: "string"
        x-exportParamName: "WorkflowId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "archive"
        methodNameCamel: "archive"
  /automations/{workflow_id}/emails:
    get:
      tags:
      - "automations"
      summary: "List automated emails"
      description: "Get a summary of the emails in a classic automation workflow."
      operationId: "getAutomationsIdEmails"
      parameters:
      - name: "workflow_id"
        in: "path"
        description: "The unique id for the Automation workflow."
        required: true
        type: "string"
        x-exportParamName: "WorkflowId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Automation Emails"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "list_all_workflow_emails"
        methodNameCamel: "listAllWorkflowEmails"
  /automations/{workflow_id}/emails/{workflow_email_id}:
    get:
      tags:
      - "automations"
      summary: "Get workflow email info"
      description: "Get information about an individual classic automation workflow\
        \ email."
      operationId: "getAutomationsIdEmailsId"
      parameters:
      - name: "workflow_id"
        in: "path"
        description: "The unique id for the Automation workflow."
        required: true
        type: "string"
        x-exportParamName: "WorkflowId"
      - name: "workflow_email_id"
        in: "path"
        description: "The unique id for the Automation workflow email."
        required: true
        type: "string"
        x-exportParamName: "WorkflowEmailId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Automation Workflow Email"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_workflow_email"
        methodNameCamel: "getWorkflowEmail"
    delete:
      tags:
      - "automations"
      summary: "Delete workflow email"
      description: "Removes an individual classic automation workflow email. Emails\
        \ from certain workflow types, including the Abandoned Cart Email (abandonedCart)\
        \ and Product Retargeting Email (abandonedBrowse) Workflows, cannot be deleted."
      operationId: "deleteAutomationsIdEmailsId"
      parameters:
      - name: "workflow_id"
        in: "path"
        description: "The unique id for the Automation workflow."
        required: true
        type: "string"
        x-exportParamName: "WorkflowId"
      - name: "workflow_email_id"
        in: "path"
        description: "The unique id for the Automation workflow email."
        required: true
        type: "string"
        x-exportParamName: "WorkflowEmailId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "delete_workflow_email"
        methodNameCamel: "deleteWorkflowEmail"
    patch:
      tags:
      - "automations"
      summary: "Update workflow email"
      description: "Update settings for a classic automation workflow email.  Only\
        \ works with workflows of type: abandonedBrowse, abandonedCart, emailFollowup,\
        \ or singleWelcome."
      operationId: "patchAutomationEmailWorkflowId"
      parameters:
      - name: "workflow_id"
        in: "path"
        description: "The unique id for the Automation workflow."
        required: true
        type: "string"
        x-exportParamName: "WorkflowId"
      - name: "workflow_email_id"
        in: "path"
        description: "The unique id for the Automation workflow email."
        required: true
        type: "string"
        x-exportParamName: "WorkflowEmailId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Update information about a specific workflow email"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Automation Workflow Email"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "update_workflow_email"
        methodNameCamel: "updateWorkflowEmail"
  /automations/{workflow_id}/emails/{workflow_email_id}/queue:
    get:
      tags:
      - "automations"
      summary: "List automated email subscribers"
      description: "Get information about a classic automation email queue."
      operationId: "getAutomationsIdEmailsIdQueue"
      parameters:
      - name: "workflow_id"
        in: "path"
        description: "The unique id for the Automation workflow."
        required: true
        type: "string"
        x-exportParamName: "WorkflowId"
      - name: "workflow_email_id"
        in: "path"
        description: "The unique id for the Automation workflow email."
        required: true
        type: "string"
        x-exportParamName: "WorkflowEmailId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_4"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_workflow_email_subscriber_queue"
        methodNameCamel: "getWorkflowEmailSubscriberQueue"
    post:
      tags:
      - "automations"
      summary: "Add subscriber to workflow email"
      description: "Manually add a subscriber to a workflow, bypassing the default\
        \ trigger settings. You can also use this endpoint to trigger a series of\
        \ automated emails in an API 3.0 workflow type."
      operationId: "postAutomationsIdEmailsIdQueue"
      parameters:
      - name: "workflow_id"
        in: "path"
        description: "The unique id for the Automation workflow."
        required: true
        type: "string"
        x-exportParamName: "WorkflowId"
      - name: "workflow_email_id"
        in: "path"
        description: "The unique id for the Automation workflow email."
        required: true
        type: "string"
        x-exportParamName: "WorkflowEmailId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Subscriber in Automation Queue_1"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Subscriber in Automation Queue_2"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "add_workflow_email_subscriber"
        methodNameCamel: "addWorkflowEmailSubscriber"
  /automations/{workflow_id}/emails/{workflow_email_id}/queue/{subscriber_hash}:
    get:
      tags:
      - "automations"
      summary: "Get automated email subscriber"
      description: "Get information about a specific subscriber in a classic automation\
        \ email queue."
      operationId: "getAutomationsIdEmailsIdQueueId"
      parameters:
      - name: "workflow_id"
        in: "path"
        description: "The unique id for the Automation workflow."
        required: true
        type: "string"
        x-exportParamName: "WorkflowId"
      - name: "workflow_email_id"
        in: "path"
        description: "The unique id for the Automation workflow email."
        required: true
        type: "string"
        x-exportParamName: "WorkflowEmailId"
      - name: "subscriber_hash"
        in: "path"
        description: "The MD5 hash of the lowercase version of the list member's email\
          \ address."
        required: true
        type: "string"
        x-title: "Subscriber Hash"
        x-exportParamName: "SubscriberHash"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Subscriber in Automation Queue_2"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_workflow_email_subscriber"
        methodNameCamel: "getWorkflowEmailSubscriber"
  /automations/{workflow_id}/emails/{workflow_email_id}/actions/pause:
    post:
      tags:
      - "automations"
      summary: "Pause automated email"
      description: "Pause an automated email."
      operationId: "postAutomationsIdEmailsIdActionsPause"
      parameters:
      - name: "workflow_id"
        in: "path"
        description: "The unique id for the Automation workflow."
        required: true
        type: "string"
        x-exportParamName: "WorkflowId"
      - name: "workflow_email_id"
        in: "path"
        description: "The unique id for the Automation workflow email."
        required: true
        type: "string"
        x-exportParamName: "WorkflowEmailId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "pause_workflow_email"
        methodNameCamel: "pauseWorkflowEmail"
  /automations/{workflow_id}/emails/{workflow_email_id}/actions/start:
    post:
      tags:
      - "automations"
      summary: "Start automated email"
      description: "Start an automated email."
      operationId: "postAutomationsIdEmailsIdActionsStart"
      parameters:
      - name: "workflow_id"
        in: "path"
        description: "The unique id for the Automation workflow."
        required: true
        type: "string"
        x-exportParamName: "WorkflowId"
      - name: "workflow_email_id"
        in: "path"
        description: "The unique id for the Automation workflow email."
        required: true
        type: "string"
        x-exportParamName: "WorkflowEmailId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "start_workflow_email"
        methodNameCamel: "startWorkflowEmail"
  /automations/{workflow_id}/removed-subscribers:
    get:
      tags:
      - "automations"
      summary: "List subscribers removed from workflow"
      description: "Get information about subscribers who were removed from a classic\
        \ automation workflow."
      operationId: "getAutomationsIdRemovedSubscribers"
      parameters:
      - name: "workflow_id"
        in: "path"
        description: "The unique id for the Automation workflow."
        required: true
        type: "string"
        x-exportParamName: "WorkflowId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Removed Subscribers"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "list_workflow_email_subscribers_removed"
        methodNameCamel: "listWorkflowEmailSubscribersRemoved"
    post:
      tags:
      - "automations"
      summary: "Remove subscriber from workflow"
      description: "Remove a subscriber from a specific classic automation workflow.\
        \ You can remove a subscriber at any point in an automation workflow, regardless\
        \ of how many emails they've been sent from that workflow. Once they're removed,\
        \ they can never be added back to the same workflow."
      operationId: "postAutomationsIdRemovedSubscribers"
      parameters:
      - name: "workflow_id"
        in: "path"
        description: "The unique id for the Automation workflow."
        required: true
        type: "string"
        x-exportParamName: "WorkflowId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Subscriber in Automation Queue_3"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Subscriber Removed from Automation Workflow"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "remove_workflow_email_subscriber"
        methodNameCamel: "removeWorkflowEmailSubscriber"
  /automations/{workflow_id}/removed-subscribers/{subscriber_hash}:
    get:
      tags:
      - "automations"
      summary: "Get subscriber removed from workflow"
      description: "Get information about a specific subscriber who was removed from\
        \ a classic automation workflow."
      operationId: "getAutomationsIdRemovedSubscribersId"
      parameters:
      - name: "workflow_id"
        in: "path"
        description: "The unique id for the Automation workflow."
        required: true
        type: "string"
        x-exportParamName: "WorkflowId"
      - name: "subscriber_hash"
        in: "path"
        description: "The MD5 hash of the lowercase version of the list member's email\
          \ address."
        required: true
        type: "string"
        x-title: "Subscriber Hash"
        x-exportParamName: "SubscriberHash"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Subscriber Removed from Automation Workflow"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_removed_workflow_email_subscriber"
        methodNameCamel: "getRemovedWorkflowEmailSubscriber"
  /batches:
    get:
      tags:
      - "batches"
      summary: "List batch requests"
      description: "Get a summary of batch requests that have been made."
      operationId: "getBatches"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Batch Operations"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "list"
        methodNameCamel: "list"
    post:
      tags:
      - "batches"
      summary: "Start batch operation"
      description: "Begin processing a batch operations request."
      operationId: "postBatches"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Batch"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "start"
        methodNameCamel: "start"
  /batches/{batch_id}:
    get:
      tags:
      - "batches"
      summary: "Get batch operation status"
      description: "Get the status of a batch request."
      operationId: "getBatchesId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "batch_id"
        in: "path"
        description: "The unique id for the batch operation."
        required: true
        type: "string"
        x-exportParamName: "BatchId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Batch"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "status"
        methodNameCamel: "status"
    delete:
      tags:
      - "batches"
      summary: "Delete batch request"
      description: "Stops a batch request from running. Since only one batch request\
        \ is run at a time, this can be used to cancel a long running request. The\
        \ results of any completed operations will not be available after this call."
      operationId: "deleteBatchesId"
      parameters:
      - name: "batch_id"
        in: "path"
        description: "The unique id for the batch operation."
        required: true
        type: "string"
        x-exportParamName: "BatchId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "delete_request"
        methodNameCamel: "deleteRequest"
  /batch-webhooks:
    get:
      tags:
      - "batchWebhooks"
      summary: "List batch webhooks"
      description: "Get all webhooks that have been configured for batches."
      operationId: "getBatchWebhooks"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Batch Webhooks"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "list"
        methodNameCamel: "list"
    post:
      tags:
      - "batchWebhooks"
      summary: "Add batch webhook"
      description: "Configure a webhook that will fire whenever any batch request\
        \ completes processing.  You may only have a maximum of 20 batch webhooks."
      operationId: "postBatchWebhooks"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Batch Webhook_1"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Batch Webhook"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "create"
        methodNameCamel: "create"
  /batch-webhooks/{batch_webhook_id}:
    get:
      tags:
      - "batchWebhooks"
      summary: "Get batch webhook info"
      description: "Get information about a specific batch webhook."
      operationId: "getBatchWebhook"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "batch_webhook_id"
        in: "path"
        description: "The unique id for the batch webhook."
        required: true
        type: "string"
        x-exportParamName: "BatchWebhookId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Batch Webhook"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get"
        methodNameCamel: "get"
    delete:
      tags:
      - "batchWebhooks"
      summary: "Delete batch webhook"
      description: "Remove a batch webhook. Webhooks will no longer be sent to the\
        \ given URL."
      operationId: "deleteBatchWebhookId"
      parameters:
      - name: "batch_webhook_id"
        in: "path"
        description: "The unique id for the batch webhook."
        required: true
        type: "string"
        x-exportParamName: "BatchWebhookId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "remove"
        methodNameCamel: "remove"
    patch:
      tags:
      - "batchWebhooks"
      summary: "Update batch webhook"
      description: "Update a webhook that will fire whenever any batch request completes\
        \ processing."
      operationId: "patchBatchWebhooks"
      parameters:
      - name: "batch_webhook_id"
        in: "path"
        description: "The unique id for the batch webhook."
        required: true
        type: "string"
        x-exportParamName: "BatchWebhookId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Batch Webhook_2"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Batch Webhook"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "update"
        methodNameCamel: "update"
  /template-folders:
    get:
      tags:
      - "templateFolders"
      summary: "List template folders"
      description: "Get all folders used to organize templates."
      operationId: "getTemplateFolders"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Template Folders"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "list"
        methodNameCamel: "list"
    post:
      tags:
      - "templateFolders"
      summary: "Add template folder"
      description: "Create a new template folder."
      operationId: "postTemplateFolders"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Template Folder_1"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Template Folder"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "create"
        methodNameCamel: "create"
  /template-folders/{folder_id}:
    get:
      tags:
      - "templateFolders"
      summary: "Get template folder"
      description: "Get information about a specific folder used to organize templates."
      operationId: "getTemplateFoldersId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "folder_id"
        in: "path"
        description: "The unique id for the template folder."
        required: true
        type: "string"
        x-exportParamName: "FolderId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Template Folder"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get"
        methodNameCamel: "get"
    delete:
      tags:
      - "templateFolders"
      summary: "Delete template folder"
      description: "Delete a specific template folder, and mark all the templates\
        \ in the folder as 'unfiled'."
      operationId: "deleteTemplateFoldersId"
      parameters:
      - name: "folder_id"
        in: "path"
        description: "The unique id for the template folder."
        required: true
        type: "string"
        x-exportParamName: "FolderId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "remove"
        methodNameCamel: "remove"
    patch:
      tags:
      - "templateFolders"
      summary: "Update template folder"
      description: "Update a specific folder used to organize templates."
      operationId: "patchTemplateFoldersId"
      parameters:
      - name: "folder_id"
        in: "path"
        description: "The unique id for the template folder."
        required: true
        type: "string"
        x-exportParamName: "FolderId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Template Folder_2"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Template Folder"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "update"
        methodNameCamel: "update"
  /campaign-folders:
    get:
      tags:
      - "campaignFolders"
      summary: "List campaign folders"
      description: "Get all folders used to organize campaigns."
      operationId: "getCampaignFolders"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Campaign Folders"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "list"
        methodNameCamel: "list"
    post:
      tags:
      - "campaignFolders"
      summary: "Add campaign folder"
      description: "Create a new campaign folder."
      operationId: "postCampaignFolders"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Campaign Folder_1"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Campaign Folder"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "create"
        methodNameCamel: "create"
  /campaign-folders/{folder_id}:
    get:
      tags:
      - "campaignFolders"
      summary: "Get campaign folder"
      description: "Get information about a specific folder used to organize campaigns."
      operationId: "getCampaignFoldersId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "folder_id"
        in: "path"
        description: "The unique id for the campaign folder."
        required: true
        type: "string"
        x-exportParamName: "FolderId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Campaign Folder"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get"
        methodNameCamel: "get"
    delete:
      tags:
      - "campaignFolders"
      summary: "Delete campaign folder"
      description: "Delete a specific campaign folder, and mark all the campaigns\
        \ in the folder as 'unfiled'."
      operationId: "deleteCampaignFoldersId"
      parameters:
      - name: "folder_id"
        in: "path"
        description: "The unique id for the campaign folder."
        required: true
        type: "string"
        x-exportParamName: "FolderId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "remove"
        methodNameCamel: "remove"
    patch:
      tags:
      - "campaignFolders"
      summary: "Update campaign folder"
      description: "Update a specific folder used to organize campaigns."
      operationId: "patchCampaignFoldersId"
      parameters:
      - name: "folder_id"
        in: "path"
        description: "The unique id for the campaign folder."
        required: true
        type: "string"
        x-exportParamName: "FolderId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Campaign Folder_2"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Campaign Folder"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "update"
        methodNameCamel: "update"
  /campaigns:
    get:
      tags:
      - "campaigns"
      summary: "List campaigns"
      description: "Get all campaigns in an account."
      operationId: "getCampaigns"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "type"
        in: "query"
        description: "The campaign type."
        required: false
        type: "string"
        enum:
        - "regular"
        - "plaintext"
        - "absplit"
        - "rss"
        - "variate"
        x-title: "Campaign Type"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "status"
        in: "query"
        description: "The status of the campaign."
        required: false
        type: "string"
        enum:
        - "save"
        - "paused"
        - "schedule"
        - "sending"
        - "sent"
        x-title: "Status"
        x-exportParamName: "Status"
        x-optionalDataType: "String"
      - name: "before_send_time"
        in: "query"
        description: "Restrict the response to campaigns sent before the set time.\
          \ Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        type: "string"
        format: "date-time"
        x-title: "Before Send Time"
        x-exportParamName: "BeforeSendTime"
        x-optionalDataType: "Time"
      - name: "since_send_time"
        in: "query"
        description: "Restrict the response to campaigns sent after the set time.\
          \ Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        type: "string"
        format: "date-time"
        x-title: "Since Send Time"
        x-exportParamName: "SinceSendTime"
        x-optionalDataType: "Time"
      - name: "before_create_time"
        in: "query"
        description: "Restrict the response to campaigns created before the set time.\
          \ Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        type: "string"
        format: "date-time"
        x-title: "Before Create Time"
        x-exportParamName: "BeforeCreateTime"
        x-optionalDataType: "Time"
      - name: "since_create_time"
        in: "query"
        description: "Restrict the response to campaigns created after the set time.\
          \ Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        type: "string"
        format: "date-time"
        x-title: "Since Create Time"
        x-exportParamName: "SinceCreateTime"
        x-optionalDataType: "Time"
      - name: "list_id"
        in: "query"
        description: "The unique id for the list."
        required: false
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
        x-optionalDataType: "String"
      - name: "folder_id"
        in: "query"
        description: "The unique folder id."
        required: false
        type: "string"
        x-title: "Folder ID"
        x-exportParamName: "FolderId"
        x-optionalDataType: "String"
      - name: "member_id"
        in: "query"
        description: "Retrieve campaigns sent to a particular list member. Member\
          \ ID is The MD5 hash of the lowercase version of the list member’s email\
          \ address."
        required: false
        type: "string"
        x-title: "Member ID"
        x-exportParamName: "MemberId"
        x-optionalDataType: "String"
      - name: "sort_field"
        in: "query"
        description: "Returns files sorted by the specified field."
        required: false
        type: "string"
        enum:
        - "create_time"
        - "send_time"
        x-title: "Sort By Field"
        x-exportParamName: "SortField"
        x-optionalDataType: "String"
      - name: "sort_dir"
        in: "query"
        description: "Determines the order direction for sorted results."
        required: false
        type: "string"
        enum:
        - "ASC"
        - "DESC"
        x-title: "Sort Direction"
        x-exportParamName: "SortDir"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_5"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "list"
        methodNameCamel: "list"
    post:
      tags:
      - "campaigns"
      summary: "Add campaign"
      description: "Create a new Mailchimp campaign."
      operationId: "postCampaigns"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Campaign_1"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Campaign"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "create"
        methodNameCamel: "create"
  /campaigns/{campaign_id}:
    get:
      tags:
      - "campaigns"
      summary: "Get campaign info"
      description: "Get information about a specific campaign."
      operationId: "getCampaignsId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "campaign_id"
        in: "path"
        description: "The unique id for the campaign."
        required: true
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Campaign"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get"
        methodNameCamel: "get"
    delete:
      tags:
      - "campaigns"
      summary: "Delete campaign"
      description: "Remove a campaign from your Mailchimp account."
      operationId: "deleteCampaignsId"
      parameters:
      - name: "campaign_id"
        in: "path"
        description: "The unique id for the campaign."
        required: true
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "remove"
        methodNameCamel: "remove"
    patch:
      tags:
      - "campaigns"
      summary: "Update campaign settings"
      description: "Update some or all of the settings for a specific campaign."
      operationId: "patchCampaignsId"
      parameters:
      - name: "campaign_id"
        in: "path"
        description: "The unique id for the campaign."
        required: true
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Campaign_2"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Campaign"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "update"
        methodNameCamel: "update"
  /campaigns/{campaign_id}/actions/cancel-send:
    post:
      tags:
      - "campaigns"
      summary: "Cancel campaign"
      description: "Cancel a Regular or Plain-Text Campaign after you send, before\
        \ all of your recipients receive it. This feature is included with Mailchimp\
        \ Pro."
      operationId: "postCampaignsIdActionsCancelSend"
      parameters:
      - name: "campaign_id"
        in: "path"
        description: "The unique id for the campaign."
        required: true
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-pro-required: true
      x-custom-config:
        methodNameSnake: "cancel_send"
        methodNameCamel: "cancelSend"
  /campaigns/{campaign_id}/actions/replicate:
    post:
      tags:
      - "campaigns"
      summary: "Replicate campaign"
      description: "Replicate a campaign in saved or send status."
      operationId: "postCampaignsIdActionsReplicate"
      parameters:
      - name: "campaign_id"
        in: "path"
        description: "The unique id for the campaign."
        required: true
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Campaign_3"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "replicate"
        methodNameCamel: "replicate"
  /campaigns/{campaign_id}/actions/send:
    post:
      tags:
      - "campaigns"
      summary: "Send campaign"
      description: "Send a Mailchimp campaign. For RSS Campaigns, the campaign will\
        \ send according to its schedule. All other campaigns will send immediately."
      operationId: "postCampaignsIdActionsSend"
      parameters:
      - name: "campaign_id"
        in: "path"
        description: "The unique id for the campaign."
        required: true
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "send"
        methodNameCamel: "send"
  /campaigns/{campaign_id}/actions/schedule:
    post:
      tags:
      - "campaigns"
      summary: "Schedule campaign"
      description: "Schedule a campaign for delivery. If you're using Multivariate\
        \ Campaigns to test send times or sending RSS Campaigns, use the send action\
        \ instead."
      operationId: "postCampaignsIdActionsSchedule"
      parameters:
      - name: "campaign_id"
        in: "path"
        description: "The unique id for the campaign."
        required: true
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_1"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "schedule"
        methodNameCamel: "schedule"
  /campaigns/{campaign_id}/actions/unschedule:
    post:
      tags:
      - "campaigns"
      summary: "Unschedule campaign"
      description: "Unschedule a scheduled campaign that hasn't started sending."
      operationId: "postCampaignsIdActionsUnschedule"
      parameters:
      - name: "campaign_id"
        in: "path"
        description: "The unique id for the campaign."
        required: true
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "unschedule"
        methodNameCamel: "unschedule"
  /campaigns/{campaign_id}/actions/test:
    post:
      tags:
      - "campaigns"
      summary: "Send test email"
      description: "Send a test email."
      operationId: "postCampaignsIdActionsTest"
      parameters:
      - name: "campaign_id"
        in: "path"
        description: "The unique id for the campaign."
        required: true
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_2"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "send_test_email"
        methodNameCamel: "sendTestEmail"
  /campaigns/{campaign_id}/actions/pause:
    post:
      tags:
      - "campaigns"
      summary: "Pause rss campaign"
      description: "Pause an RSS-Driven campaign."
      operationId: "postCampaignsIdActionsPause"
      parameters:
      - name: "campaign_id"
        in: "path"
        description: "The unique id for the campaign."
        required: true
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "pause"
        methodNameCamel: "pause"
  /campaigns/{campaign_id}/actions/resume:
    post:
      tags:
      - "campaigns"
      summary: "Resume rss campaign"
      description: "Resume an RSS-Driven campaign."
      operationId: "postCampaignsIdActionsResume"
      parameters:
      - name: "campaign_id"
        in: "path"
        description: "The unique id for the campaign."
        required: true
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "resume"
        methodNameCamel: "resume"
  /campaigns/{campaign_id}/actions/create-resend:
    post:
      tags:
      - "campaigns"
      summary: "Resend campaign"
      description: "Creates a Resend to Non-Openers version of this campaign. We will\
        \ also check if this campaign meets the criteria for Resend to Non-Openers\
        \ campaigns."
      operationId: "postCampaignsIdActionsCreateResend"
      parameters:
      - name: "campaign_id"
        in: "path"
        description: "The unique id for the campaign."
        required: true
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Campaign_3"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-pro-required: true
      x-custom-config:
        methodNameSnake: "create_resend"
        methodNameCamel: "createResend"
  /campaigns/{campaign_id}/content:
    get:
      tags:
      - "campaigns"
      summary: "Get campaign content"
      description: "Get the the HTML and plain-text content for a campaign."
      operationId: "getCampaignsIdContent"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "campaign_id"
        in: "path"
        description: "The unique id for the campaign."
        required: true
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Campaign Content"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_content"
        methodNameCamel: "getContent"
    put:
      tags:
      - "campaigns"
      summary: "Set campaign content"
      description: "Set the content for a campaign."
      operationId: "putCampaignsIdContent"
      parameters:
      - name: "campaign_id"
        in: "path"
        description: "The unique id for the campaign."
        required: true
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Campaign Content_1"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Campaign Content"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "set_content"
        methodNameCamel: "setContent"
  /campaigns/{campaign_id}/feedback:
    get:
      tags:
      - "campaigns"
      summary: "List campaign feedback"
      description: "Get team feedback while you're working together on a Mailchimp\
        \ campaign."
      operationId: "getCampaignsIdFeedback"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "campaign_id"
        in: "path"
        description: "The unique id for the campaign."
        required: true
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Campaign Reports"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_feedback"
        methodNameCamel: "getFeedback"
    post:
      tags:
      - "campaigns"
      summary: "Add campaign feedback"
      description: "Add feedback on a specific campaign."
      operationId: "postCampaignsIdFeedback"
      parameters:
      - name: "campaign_id"
        in: "path"
        description: "The unique id for the campaign."
        required: true
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Campaign Feedback_1"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Campaign Feedback_2"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "add_feedback"
        methodNameCamel: "addFeedback"
  /campaigns/{campaign_id}/feedback/{feedback_id}:
    get:
      tags:
      - "campaigns"
      summary: "Get campaign feedback message"
      description: "Get a specific feedback message from a campaign."
      operationId: "getCampaignsIdFeedbackId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "campaign_id"
        in: "path"
        description: "The unique id for the campaign."
        required: true
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
      - name: "feedback_id"
        in: "path"
        description: "The unique id for the feedback message."
        required: true
        type: "string"
        x-title: "Feedback ID"
        x-exportParamName: "FeedbackId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Campaign Feedback_2"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_feedback_message"
        methodNameCamel: "getFeedbackMessage"
    delete:
      tags:
      - "campaigns"
      summary: "Delete campaign feedback message"
      description: "Remove a specific feedback message for a campaign."
      operationId: "deleteCampaignsIdFeedbackId"
      parameters:
      - name: "campaign_id"
        in: "path"
        description: "The unique id for the campaign."
        required: true
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
      - name: "feedback_id"
        in: "path"
        description: "The unique id for the feedback message."
        required: true
        type: "string"
        x-title: "Feedback ID"
        x-exportParamName: "FeedbackId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "delete_feedback_message"
        methodNameCamel: "deleteFeedbackMessage"
    patch:
      tags:
      - "campaigns"
      summary: "Update campaign feedback message"
      description: "Update a specific feedback message for a campaign."
      operationId: "patchCampaignsIdFeedbackId"
      parameters:
      - name: "campaign_id"
        in: "path"
        description: "The unique id for the campaign."
        required: true
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
      - name: "feedback_id"
        in: "path"
        description: "The unique id for the feedback message."
        required: true
        type: "string"
        x-title: "Feedback ID"
        x-exportParamName: "FeedbackId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Campaign Feedback_3"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Campaign Feedback_2"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "update_feedback_message"
        methodNameCamel: "updateFeedbackMessage"
  /campaigns/{campaign_id}/send-checklist:
    get:
      tags:
      - "campaigns"
      summary: "Get campaign send checklist"
      description: "Review the send checklist for a campaign, and resolve any issues\
        \ before sending."
      operationId: "getCampaignsIdSendChecklist"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "campaign_id"
        in: "path"
        description: "The unique id for the campaign."
        required: true
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Send Checklist"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_send_checklist"
        methodNameCamel: "getSendChecklist"
  /connected-sites:
    get:
      tags:
      - "connectedSites"
      summary: "List connected sites"
      description: "Get all connected sites in an account."
      operationId: "getConnectedSites"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Connected Sites"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "list"
        methodNameCamel: "list"
    post:
      tags:
      - "connectedSites"
      summary: "Add connected site"
      description: "Create a new Mailchimp connected site."
      operationId: "postConnectedSites"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Connected Site_1"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Connected Site"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "create"
        methodNameCamel: "create"
  /connected-sites/{connected_site_id}:
    get:
      tags:
      - "connectedSites"
      summary: "Get connected site"
      description: "Get information about a specific connected site."
      operationId: "getConnectedSitesId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "connected_site_id"
        in: "path"
        description: "The unique identifier for the site."
        required: true
        type: "string"
        x-title: "Connected Site Foreign ID"
        x-exportParamName: "ConnectedSiteId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Connected Site"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get"
        methodNameCamel: "get"
    delete:
      tags:
      - "connectedSites"
      summary: "Delete connected site"
      description: "Remove a connected site from your Mailchimp account."
      operationId: "deleteConnectedSitesId"
      parameters:
      - name: "connected_site_id"
        in: "path"
        description: "The unique identifier for the site."
        required: true
        type: "string"
        x-title: "Connected Site Foreign ID"
        x-exportParamName: "ConnectedSiteId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "remove"
        methodNameCamel: "remove"
  /connected-sites/{connected_site_id}/actions/verify-script-installation:
    post:
      tags:
      - "connectedSites"
      summary: "Verify connected site script"
      description: "Verify that the connected sites script has been installed, either\
        \ via the script URL or fragment."
      operationId: "postConnectedSitesIdActionsVerifyScriptInstallation"
      parameters:
      - name: "connected_site_id"
        in: "path"
        description: "The unique identifier for the site."
        required: true
        type: "string"
        x-title: "Connected Site Foreign ID"
        x-exportParamName: "ConnectedSiteId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-pro-required: true
      x-custom-config:
        methodNameSnake: "verify_script_installation"
        methodNameCamel: "verifyScriptInstallation"
  /conversations:
    get:
      tags:
      - "conversations"
      summary: "List conversations"
      description: "Get a list of conversations for the account. Conversations has\
        \ been deprecated in favor of Inbox and these endpoints don't include Inbox\
        \ data. Past Conversations are still available via this endpoint, but new\
        \ campaign replies and other Inbox messages aren’t available using this endpoint."
      operationId: "getConversations"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "has_unread_messages"
        in: "query"
        description: "Whether the conversation has any unread messages."
        required: false
        type: "string"
        enum:
        - "true"
        - "false"
        x-title: "Has Unread Messages"
        x-exportParamName: "HasUnreadMessages"
        x-optionalDataType: "String"
      - name: "list_id"
        in: "query"
        description: "The unique id for the list."
        required: false
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
        x-optionalDataType: "String"
      - name: "campaign_id"
        in: "query"
        description: "The unique id for the campaign."
        required: false
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
        x-optionalDataType: "String"
      deprecated: true
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Tracked Conversations"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "list"
        methodNameCamel: "list"
  /conversations/{conversation_id}:
    get:
      tags:
      - "conversations"
      summary: "Get conversation"
      description: "Get details about an individual conversation. Conversations has\
        \ been deprecated in favor of Inbox and these endpoints don't include Inbox\
        \ data. Past Conversations are still available via this endpoint, but new\
        \ campaign replies and other Inbox messages aren’t available using this endpoint."
      operationId: "getConversationsId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "conversation_id"
        in: "path"
        description: "The unique id for the conversation."
        required: true
        type: "string"
        x-title: "Conversation ID"
        x-exportParamName: "ConversationId"
      deprecated: true
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Conversation"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get"
        methodNameCamel: "get"
  /conversations/{conversation_id}/messages:
    get:
      tags:
      - "conversations"
      summary: "List messages"
      description: "Get messages from a specific conversation. Conversations has been\
        \ deprecated in favor of Inbox and these endpoints don't include Inbox data.\
        \ Past Conversations are still available via this endpoint, but new campaign\
        \ replies and other Inbox messages aren’t available using this endpoint."
      operationId: "getConversationsIdMessages"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "conversation_id"
        in: "path"
        description: "The unique id for the conversation."
        required: true
        type: "string"
        x-title: "Conversation ID"
        x-exportParamName: "ConversationId"
      - name: "is_read"
        in: "query"
        description: "Whether a conversation message has been marked as read."
        required: false
        type: "string"
        enum:
        - "true"
        - "false"
        x-title: "Is Read"
        x-exportParamName: "IsRead"
        x-optionalDataType: "String"
      - name: "before_timestamp"
        in: "query"
        description: "Restrict the response to messages created before the set time.\
          \ Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        type: "string"
        format: "date-time"
        x-title: "Before Timestamp"
        x-exportParamName: "BeforeTimestamp"
        x-optionalDataType: "Time"
      - name: "since_timestamp"
        in: "query"
        description: "Restrict the response to messages created after the set time.\
          \ Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        type: "string"
        format: "date-time"
        x-title: "Since Timestamp"
        x-exportParamName: "SinceTimestamp"
        x-optionalDataType: "Time"
      deprecated: true
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Collection of Conversation Messages"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_conversation_messages"
        methodNameCamel: "getConversationMessages"
  /conversations/{conversation_id}/messages/{message_id}:
    get:
      tags:
      - "conversations"
      summary: "Get message"
      description: "Get an individual message in a conversation. Conversations has\
        \ been deprecated in favor of Inbox and these endpoints don't include Inbox\
        \ data. Past Conversations are still available via this endpoint, but new\
        \ campaign replies and other Inbox messages aren’t available using this endpoint."
      operationId: "getConversationsIdMessagesId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "conversation_id"
        in: "path"
        description: "The unique id for the conversation."
        required: true
        type: "string"
        x-title: "Conversation ID"
        x-exportParamName: "ConversationId"
      - name: "message_id"
        in: "path"
        description: "The unique id for the conversation message."
        required: true
        type: "string"
        x-title: "Message ID"
        x-exportParamName: "MessageId"
      deprecated: true
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Conversation Message"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_conversation_message"
        methodNameCamel: "getConversationMessage"
  /customer-journeys/journeys/{journey_id}/steps/{step_id}/actions/trigger:
    post:
      tags:
      - "customerJourneys"
      summary: "Customer Journeys API trigger for a contact"
      description: "A step trigger in a Customer Journey. To use it, create a starting\
        \ point or step from the Customer Journey builder in the app using the Customer\
        \ Journeys API condition. We’ll provide a url during the process that includes\
        \ the {journey_id} and {step_id}. You’ll then be able to use this endpoint\
        \ to trigger the condition for the posted contact."
      operationId: "postCustomerJourneysJourneysIdStepsIdActionsTrigger"
      parameters:
      - name: "journey_id"
        in: "path"
        description: "The id for the Journey."
        required: true
        type: "integer"
        x-title: "Journey ID"
        x-exportParamName: "JourneyId"
      - name: "step_id"
        in: "path"
        description: "The id for the Step."
        required: true
        type: "integer"
        x-title: "Step ID"
        x-exportParamName: "StepId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Subscriber in Customer Journeys audience"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "204":
          description: "An empty response"
          schema:
            description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "trigger"
        methodNameCamel: "trigger"
  /file-manager/files:
    get:
      tags:
      - "fileManager"
      summary: "List stored files"
      description: "Get a list of available images and files stored in the File Manager\
        \ for the account."
      operationId: "getFileManagerFiles"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "type"
        in: "query"
        description: "The file type for the File Manager file."
        required: false
        type: "string"
        x-title: "File Type"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "created_by"
        in: "query"
        description: "The Mailchimp account user who created the File Manager file."
        required: false
        type: "string"
        x-title: "Created By"
        x-exportParamName: "CreatedBy"
        x-optionalDataType: "String"
      - name: "before_created_at"
        in: "query"
        description: "Restrict the response to files created before the set date.\
          \ Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        type: "string"
        x-title: "Before Created At"
        x-exportParamName: "BeforeCreatedAt"
        x-optionalDataType: "String"
      - name: "since_created_at"
        in: "query"
        description: "Restrict the response to files created after the set date. Uses\
          \ ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        type: "string"
        x-title: "Since Created At"
        x-exportParamName: "SinceCreatedAt"
        x-optionalDataType: "String"
      - name: "sort_field"
        in: "query"
        description: "Returns files sorted by the specified field."
        required: false
        type: "string"
        enum:
        - "added_date"
        - "name"
        - "size"
        x-title: "Sort By Field"
        x-exportParamName: "SortField"
        x-optionalDataType: "String"
      - name: "sort_dir"
        in: "query"
        description: "Determines the order direction for sorted results."
        required: false
        type: "string"
        enum:
        - "ASC"
        - "DESC"
        x-title: "Sort Direction"
        x-exportParamName: "SortDir"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/File Manager"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "files"
        methodNameCamel: "files"
    post:
      tags:
      - "fileManager"
      summary: "Add file"
      description: "Upload a new image or file to the File Manager."
      operationId: "postFileManagerFiles"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Gallery File_1"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Gallery File"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "upload"
        methodNameCamel: "upload"
  /file-manager/files/{file_id}:
    get:
      tags:
      - "fileManager"
      summary: "Get file"
      description: "Get information about a specific file in the File Manager."
      operationId: "getFileManagerFilesId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "file_id"
        in: "path"
        description: "The unique id for the File Manager file."
        required: true
        type: "string"
        x-title: "File ID"
        x-exportParamName: "FileId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Gallery File"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_file"
        methodNameCamel: "getFile"
    delete:
      tags:
      - "fileManager"
      summary: "Delete file"
      description: "Remove a specific file from the File Manager."
      operationId: "deleteFileManagerFilesId"
      parameters:
      - name: "file_id"
        in: "path"
        description: "The unique id for the File Manager file."
        required: true
        type: "string"
        x-title: "File ID"
        x-exportParamName: "FileId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "delete_file"
        methodNameCamel: "deleteFile"
    patch:
      tags:
      - "fileManager"
      summary: "Update file"
      description: "Update a file in the File Manager."
      operationId: "patchFileManagerFilesId"
      parameters:
      - name: "file_id"
        in: "path"
        description: "The unique id for the File Manager file."
        required: true
        type: "string"
        x-title: "File ID"
        x-exportParamName: "FileId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Gallery File_2"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Gallery File"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "update_file"
        methodNameCamel: "updateFile"
  /file-manager/folders:
    get:
      tags:
      - "fileManager"
      summary: "List folders"
      description: "Get a list of all folders in the File Manager."
      operationId: "getFileManagerFolders"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "created_by"
        in: "query"
        description: "The Mailchimp account user who created the File Manager file."
        required: false
        type: "string"
        x-title: "Created By"
        x-exportParamName: "CreatedBy"
        x-optionalDataType: "String"
      - name: "before_created_at"
        in: "query"
        description: "Restrict the response to files created before the set date.\
          \ Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        type: "string"
        x-title: "Before Created At"
        x-exportParamName: "BeforeCreatedAt"
        x-optionalDataType: "String"
      - name: "since_created_at"
        in: "query"
        description: "Restrict the response to files created after the set date. Uses\
          \ ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        type: "string"
        x-title: "Since Created At"
        x-exportParamName: "SinceCreatedAt"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/File Manager Folders"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "list_folders"
        methodNameCamel: "listFolders"
    post:
      tags:
      - "fileManager"
      summary: "Add folder"
      description: "Create a new folder in the File Manager."
      operationId: "postFileManagerFolders"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Gallery Folder_1"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Gallery Folder"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "create_folder"
        methodNameCamel: "createFolder"
  /file-manager/folders/{folder_id}:
    get:
      tags:
      - "fileManager"
      summary: "Get folder"
      description: "Get information about a specific folder in the File Manager."
      operationId: "getFileManagerFoldersId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "folder_id"
        in: "path"
        description: "The unique id for the File Manager folder."
        required: true
        type: "string"
        x-title: "Folder ID"
        x-exportParamName: "FolderId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Gallery Folder"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_folder"
        methodNameCamel: "getFolder"
    delete:
      tags:
      - "fileManager"
      summary: "Delete folder"
      description: "Delete a specific folder in the File Manager."
      operationId: "deleteFileManagerFoldersId"
      parameters:
      - name: "folder_id"
        in: "path"
        description: "The unique id for the File Manager folder."
        required: true
        type: "string"
        x-title: "Folder ID"
        x-exportParamName: "FolderId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "delete_folder"
        methodNameCamel: "deleteFolder"
    patch:
      tags:
      - "fileManager"
      summary: "Update folder"
      description: "Update a specific File Manager folder."
      operationId: "patchFileManagerFoldersId"
      parameters:
      - name: "folder_id"
        in: "path"
        description: "The unique id for the File Manager folder."
        required: true
        type: "string"
        x-title: "Folder ID"
        x-exportParamName: "FolderId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Gallery Folder_2"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Gallery Folder"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "update_folder"
        methodNameCamel: "updateFolder"
  /file-manager/folders/{folder_id}/files:
    get:
      tags:
      - "fileManager"
      summary: "List stored files"
      description: "Get a list of available images and files stored in this folder."
      operationId: "getFileManagerFoldersFiles"
      parameters:
      - name: "folder_id"
        in: "path"
        description: "The unique id for the File Manager folder."
        required: true
        type: "string"
        x-title: "Folder ID"
        x-exportParamName: "FolderId"
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "type"
        in: "query"
        description: "The file type for the File Manager file."
        required: false
        type: "string"
        x-title: "File Type"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "created_by"
        in: "query"
        description: "The Mailchimp account user who created the File Manager file."
        required: false
        type: "string"
        x-title: "Created By"
        x-exportParamName: "CreatedBy"
        x-optionalDataType: "String"
      - name: "before_created_at"
        in: "query"
        description: "Restrict the response to files created before the set date.\
          \ Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        type: "string"
        x-title: "Before Created At"
        x-exportParamName: "BeforeCreatedAt"
        x-optionalDataType: "String"
      - name: "since_created_at"
        in: "query"
        description: "Restrict the response to files created after the set date. Uses\
          \ ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        type: "string"
        x-title: "Since Created At"
        x-exportParamName: "SinceCreatedAt"
        x-optionalDataType: "String"
      - name: "sort_field"
        in: "query"
        description: "Returns files sorted by the specified field."
        required: false
        type: "string"
        enum:
        - "added_date"
        - "name"
        - "size"
        x-title: "Sort By Field"
        x-exportParamName: "SortField"
        x-optionalDataType: "String"
      - name: "sort_dir"
        in: "query"
        description: "Determines the order direction for sorted results."
        required: false
        type: "string"
        enum:
        - "ASC"
        - "DESC"
        x-title: "Sort Direction"
        x-exportParamName: "SortDir"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/File Manager"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "folders_files"
        methodNameCamel: "foldersFiles"
  /lists:
    get:
      tags:
      - "lists"
      summary: "Get lists info"
      description: "Get information about all lists in the account."
      operationId: "getLists"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "before_date_created"
        in: "query"
        description: "Restrict response to lists created before the set date. Uses\
          \ ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        type: "string"
        x-title: "Before Date Created"
        x-exportParamName: "BeforeDateCreated"
        x-optionalDataType: "String"
      - name: "since_date_created"
        in: "query"
        description: "Restrict results to lists created after the set date. Uses ISO\
          \ 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        type: "string"
        x-title: "Since Date Created"
        x-exportParamName: "SinceDateCreated"
        x-optionalDataType: "String"
      - name: "before_campaign_last_sent"
        in: "query"
        description: "Restrict results to lists created before the last campaign send\
          \ date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        type: "string"
        x-title: "Before Campaign Last Sent"
        x-exportParamName: "BeforeCampaignLastSent"
        x-optionalDataType: "String"
      - name: "since_campaign_last_sent"
        in: "query"
        description: "Restrict results to lists created after the last campaign send\
          \ date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        type: "string"
        x-title: "Since Campaign Last Sent"
        x-exportParamName: "SinceCampaignLastSent"
        x-optionalDataType: "String"
      - name: "email"
        in: "query"
        description: "Restrict results to lists that include a specific subscriber's\
          \ email address."
        required: false
        type: "string"
        x-title: "Subscriber Email"
        x-exportParamName: "Email"
        x-optionalDataType: "String"
      - name: "sort_field"
        in: "query"
        description: "Returns files sorted by the specified field."
        required: false
        type: "string"
        enum:
        - "date_created"
        x-title: "Sort By Field"
        x-exportParamName: "SortField"
        x-optionalDataType: "String"
      - name: "sort_dir"
        in: "query"
        description: "Determines the order direction for sorted results."
        required: false
        type: "string"
        enum:
        - "ASC"
        - "DESC"
        x-title: "Sort Direction"
        x-exportParamName: "SortDir"
        x-optionalDataType: "String"
      - name: "has_ecommerce_store"
        in: "query"
        description: "Restrict results to lists that contain an active, connected,\
          \ undeleted ecommerce store."
        required: false
        type: "boolean"
        x-title: "Has Ecommerce Store"
        x-exportParamName: "HasEcommerceStore"
        x-optionalDataType: "Bool"
      - name: "include_total_contacts"
        in: "query"
        description: "Return the total_contacts field in the stats response, which\
          \ contains an approximate count of all contacts in any state."
        required: false
        type: "boolean"
        x-title: "Include Total Contacts"
        x-exportParamName: "IncludeTotalContacts"
        x-optionalDataType: "Bool"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Subscriber Lists"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_all_lists"
        methodNameCamel: "getAllLists"
    post:
      tags:
      - "lists"
      summary: "Add list"
      description: "Create a new list in your Mailchimp account."
      operationId: "postLists"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Subscriber List_1"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Subscriber List"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "create_list"
        methodNameCamel: "createList"
  /lists/{list_id}:
    get:
      tags:
      - "lists"
      summary: "Get list info"
      description: "Get information about a specific list in your Mailchimp account.\
        \ Results include list members who have signed up but haven't confirmed their\
        \ subscription yet and unsubscribed or cleaned."
      operationId: "getListsId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "include_total_contacts"
        in: "query"
        description: "Return the total_contacts field in the stats response, which\
          \ contains an approximate count of all contacts in any state."
        required: false
        type: "boolean"
        x-title: "Include Total Contacts"
        x-exportParamName: "IncludeTotalContacts"
        x-optionalDataType: "Bool"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Subscriber List"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_list"
        methodNameCamel: "getList"
    post:
      tags:
      - "lists"
      summary: "Batch subscribe or unsubscribe"
      description: "Batch subscribe or unsubscribe list members."
      operationId: "postListsId"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "skip_merge_validation"
        in: "query"
        description: "If skip_merge_validation is true, member data will be accepted\
          \ without merge field values, even if the merge field is usually required.\
          \ This defaults to false."
        required: false
        type: "boolean"
        x-title: "Skip Merge Validation"
        x-exportParamName: "SkipMergeValidation"
        x-optionalDataType: "Bool"
      - name: "skip_duplicate_check"
        in: "query"
        description: "If skip_duplicate_check is true, we will ignore duplicates sent\
          \ in the request when using the batch sub/unsub on the lists endpoint. The\
          \ status of the first appearance in the request will be saved. This defaults\
          \ to false."
        required: false
        type: "boolean"
        x-title: "Skip Duplicate Check"
        x-exportParamName: "SkipDuplicateCheck"
        x-optionalDataType: "Bool"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Members to SubscribeUnsubscribe tofrom a List in batch"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Batch update List members"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "batch_list_members"
        methodNameCamel: "batchListMembers"
    delete:
      tags:
      - "lists"
      summary: "Delete list"
      description: "Delete a list from your Mailchimp account. If you delete a list,\
        \ you'll lose the list history—including subscriber activity, unsubscribes,\
        \ complaints, and bounces. You’ll also lose subscribers’ email addresses,\
        \ unless you exported and backed up your list."
      operationId: "deleteListsId"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "delete_list"
        methodNameCamel: "deleteList"
    patch:
      tags:
      - "lists"
      summary: "Update lists"
      description: "Update the settings for a specific list."
      operationId: "patchListsId"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Subscriber List_2"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Subscriber List"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "update_list"
        methodNameCamel: "updateList"
  /lists/{list_id}/abuse-reports:
    get:
      tags:
      - "lists"
      summary: "List abuse reports"
      description: "Get all abuse reports for a specific list."
      operationId: "getListsIdAbuseReports"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Abuse Complaints"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_list_abuse_reports"
        methodNameCamel: "getListAbuseReports"
  /lists/{list_id}/abuse-reports/{report_id}:
    get:
      tags:
      - "lists"
      summary: "Get abuse report"
      description: "Get details about a specific abuse report."
      operationId: "getListsIdAbuseReportsId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "report_id"
        in: "path"
        description: "The id for the abuse report."
        required: true
        type: "string"
        x-exportParamName: "ReportId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Abuse Complaint"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_list_abuse_report_details"
        methodNameCamel: "getListAbuseReportDetails"
  /lists/{list_id}/activity:
    get:
      tags:
      - "lists"
      summary: "List recent activity"
      description: "Get up to the previous 180 days of daily detailed aggregated activity\
        \ stats for a list, not including Automation activity."
      operationId: "getListsIdActivity"
      parameters:
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/List Activity"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_list_recent_activity"
        methodNameCamel: "getListRecentActivity"
  /lists/{list_id}/clients:
    get:
      tags:
      - "lists"
      summary: "List top email clients"
      description: "Get a list of the top email clients based on user-agent strings."
      operationId: "getListsIdClients"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Email Clients"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_list_clients"
        methodNameCamel: "getListClients"
  /lists/{list_id}/growth-history:
    get:
      tags:
      - "lists"
      summary: "List growth history data"
      description: "Get a month-by-month summary of a specific list's growth activity."
      operationId: "getListsIdGrowthHistory"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "sort_field"
        in: "query"
        description: "Returns files sorted by the specified field."
        required: false
        type: "string"
        enum:
        - "month"
        x-title: "Sort By Field"
        x-exportParamName: "SortField"
        x-optionalDataType: "String"
      - name: "sort_dir"
        in: "query"
        description: "Determines the order direction for sorted results."
        required: false
        type: "string"
        enum:
        - "ASC"
        - "DESC"
        x-title: "Sort Direction"
        x-exportParamName: "SortDir"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Growth History"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_list_growth_history"
        methodNameCamel: "getListGrowthHistory"
  /lists/{list_id}/growth-history/{month}:
    get:
      tags:
      - "lists"
      summary: "Get growth history by month"
      description: "Get a summary of a specific list's growth activity for a specific\
        \ month and year."
      operationId: "getListsIdGrowthHistoryId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "month"
        in: "path"
        description: "A specific month of list growth history."
        required: true
        type: "string"
        x-exportParamName: "Month"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Growth History"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_list_growth_history_by_month"
        methodNameCamel: "getListGrowthHistoryByMonth"
  /lists/{list_id}/interest-categories:
    get:
      tags:
      - "lists"
      summary: "List interest categories"
      description: "Get information about a list's interest categories."
      operationId: "getListsIdInterestCategories"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "type"
        in: "query"
        description: "Restrict results a type of interest group"
        required: false
        type: "string"
        x-title: "Interest Group Type"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Interest Groupings"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_list_interest_categories"
        methodNameCamel: "getListInterestCategories"
    post:
      tags:
      - "lists"
      summary: "Add interest category"
      description: "Create a new interest category."
      operationId: "postListsIdInterestCategories"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Interest Category_1"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Interest Category"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "create_list_interest_category"
        methodNameCamel: "createListInterestCategory"
  /lists/{list_id}/interest-categories/{interest_category_id}:
    get:
      tags:
      - "lists"
      summary: "Get interest category info"
      description: "Get information about a specific interest category."
      operationId: "getListsIdInterestCategoriesId"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "interest_category_id"
        in: "path"
        description: "The unique ID for the interest category."
        required: true
        type: "string"
        x-title: "Interest Category ID"
        x-exportParamName: "InterestCategoryId"
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Interest Category"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_interest_category"
        methodNameCamel: "getInterestCategory"
    delete:
      tags:
      - "lists"
      summary: "Delete interest category"
      description: "Delete a specific interest category."
      operationId: "deleteListsIdInterestCategoriesId"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "interest_category_id"
        in: "path"
        description: "The unique ID for the interest category."
        required: true
        type: "string"
        x-title: "Interest Category ID"
        x-exportParamName: "InterestCategoryId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "delete_interest_category"
        methodNameCamel: "deleteInterestCategory"
    patch:
      tags:
      - "lists"
      summary: "Update interest category"
      description: "Update a specific interest category."
      operationId: "patchListsIdInterestCategoriesId"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "interest_category_id"
        in: "path"
        description: "The unique ID for the interest category."
        required: true
        type: "string"
        x-title: "Interest Category ID"
        x-exportParamName: "InterestCategoryId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Interest Category_2"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Interest Category"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "update_interest_category"
        methodNameCamel: "updateInterestCategory"
  /lists/{list_id}/interest-categories/{interest_category_id}/interests:
    get:
      tags:
      - "lists"
      summary: "List interests in category"
      description: "Get a list of this category's interests."
      operationId: "getListsIdInterestCategoriesIdInterests"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "interest_category_id"
        in: "path"
        description: "The unique ID for the interest category."
        required: true
        type: "string"
        x-title: "Interest Category ID"
        x-exportParamName: "InterestCategoryId"
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Interests"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "list_interest_category_interests"
        methodNameCamel: "listInterestCategoryInterests"
    post:
      tags:
      - "lists"
      summary: "Add interest in category"
      description: "Create a new interest or 'group name' for a specific category."
      operationId: "postListsIdInterestCategoriesIdInterests"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "interest_category_id"
        in: "path"
        description: "The unique ID for the interest category."
        required: true
        type: "string"
        x-title: "Interest Category ID"
        x-exportParamName: "InterestCategoryId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Interest_1"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Interest"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "create_interest_category_interest"
        methodNameCamel: "createInterestCategoryInterest"
  /lists/{list_id}/interest-categories/{interest_category_id}/interests/{interest_id}:
    get:
      tags:
      - "lists"
      summary: "Get interest in category"
      description: "Get interests or 'group names' for a specific category."
      operationId: "getListsIdInterestCategoriesIdInterestsId"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "interest_category_id"
        in: "path"
        description: "The unique ID for the interest category."
        required: true
        type: "string"
        x-title: "Interest Category ID"
        x-exportParamName: "InterestCategoryId"
      - name: "interest_id"
        in: "path"
        description: "The specific interest or 'group name'."
        required: true
        type: "string"
        x-title: "Interest ID"
        x-exportParamName: "InterestId"
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Interest"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_interest_category_interest"
        methodNameCamel: "getInterestCategoryInterest"
    delete:
      tags:
      - "lists"
      summary: "Delete interest in category"
      description: "Delete interests or group names in a specific category."
      operationId: "deleteListsIdInterestCategoriesIdInterestsId"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "interest_category_id"
        in: "path"
        description: "The unique ID for the interest category."
        required: true
        type: "string"
        x-title: "Interest Category ID"
        x-exportParamName: "InterestCategoryId"
      - name: "interest_id"
        in: "path"
        description: "The specific interest or 'group name'."
        required: true
        type: "string"
        x-title: "Interest ID"
        x-exportParamName: "InterestId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "delete_interest_category_interest"
        methodNameCamel: "deleteInterestCategoryInterest"
    patch:
      tags:
      - "lists"
      summary: "Update interest in category"
      description: "Update interests or 'group names' for a specific category."
      operationId: "patchListsIdInterestCategoriesIdInterestsId"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "interest_category_id"
        in: "path"
        description: "The unique ID for the interest category."
        required: true
        type: "string"
        x-title: "Interest Category ID"
        x-exportParamName: "InterestCategoryId"
      - name: "interest_id"
        in: "path"
        description: "The specific interest or 'group name'."
        required: true
        type: "string"
        x-title: "Interest ID"
        x-exportParamName: "InterestId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Interest_2"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Interest"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "update_interest_category_interest"
        methodNameCamel: "updateInterestCategoryInterest"
  /lists/{list_id}/segments:
    get:
      tags:
      - "lists"
      summary: "List segments"
      description: "Get information about all available segments for a specific list."
      operationId: "previewASegment"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "type"
        in: "query"
        description: "Limit results based on segment type."
        required: false
        type: "string"
        x-title: "Segment Type"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "since_created_at"
        in: "query"
        description: "Restrict results to segments created after the set time. Uses\
          \ ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        type: "string"
        x-title: "Since Created At"
        x-exportParamName: "SinceCreatedAt"
        x-optionalDataType: "String"
      - name: "before_created_at"
        in: "query"
        description: "Restrict results to segments created before the set time. Uses\
          \ ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        type: "string"
        x-title: "Before Created At"
        x-exportParamName: "BeforeCreatedAt"
        x-optionalDataType: "String"
      - name: "include_cleaned"
        in: "query"
        description: "Include cleaned members in response"
        required: false
        type: "boolean"
        x-example: false
        x-title: "Include Cleaned"
        x-exportParamName: "IncludeCleaned"
        x-optionalDataType: "Bool"
      - name: "include_transactional"
        in: "query"
        description: "Include transactional members in response"
        required: false
        type: "boolean"
        x-example: false
        x-title: "Include Transactional"
        x-exportParamName: "IncludeTransactional"
        x-optionalDataType: "Bool"
      - name: "include_unsubscribed"
        in: "query"
        description: "Include unsubscribed members in response"
        required: false
        type: "boolean"
        x-example: false
        x-title: "Include Unsubscribed"
        x-exportParamName: "IncludeUnsubscribed"
        x-optionalDataType: "Bool"
      - name: "since_updated_at"
        in: "query"
        description: "Restrict results to segments update after the set time. Uses\
          \ ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        type: "string"
        x-title: "Since Updated At"
        x-exportParamName: "SinceUpdatedAt"
        x-optionalDataType: "String"
      - name: "before_updated_at"
        in: "query"
        description: "Restrict results to segments update before the set time. Uses\
          \ ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        type: "string"
        x-title: "Before Updated At"
        x-exportParamName: "BeforeUpdatedAt"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Collection of Segments"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "list_segments"
        methodNameCamel: "listSegments"
    post:
      tags:
      - "lists"
      summary: "Add segment"
      description: "Create a new segment in a specific list."
      operationId: "postListsIdSegments"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/List_8"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/List_7"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "create_segment"
        methodNameCamel: "createSegment"
  /lists/{list_id}/segments/{segment_id}:
    get:
      tags:
      - "lists"
      summary: "Get segment info"
      description: "Get information about a specific segment."
      operationId: "getListsIdSegmentsId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "segment_id"
        in: "path"
        description: "The unique id for the segment."
        required: true
        type: "string"
        x-title: "Segment ID"
        x-exportParamName: "SegmentId"
      - name: "include_cleaned"
        in: "query"
        description: "Include cleaned members in response"
        required: false
        type: "boolean"
        x-example: false
        x-title: "Include Cleaned"
        x-exportParamName: "IncludeCleaned"
        x-optionalDataType: "Bool"
      - name: "include_transactional"
        in: "query"
        description: "Include transactional members in response"
        required: false
        type: "boolean"
        x-example: false
        x-title: "Include Transactional"
        x-exportParamName: "IncludeTransactional"
        x-optionalDataType: "Bool"
      - name: "include_unsubscribed"
        in: "query"
        description: "Include unsubscribed members in response"
        required: false
        type: "boolean"
        x-example: false
        x-title: "Include Unsubscribed"
        x-exportParamName: "IncludeUnsubscribed"
        x-optionalDataType: "Bool"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/List_7"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_segment"
        methodNameCamel: "getSegment"
    post:
      tags:
      - "lists"
      summary: "Batch add or remove members"
      description: "Batch add/remove list members to static segment"
      operationId: "postListsIdSegmentsId"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Members to addremove tofrom a static segment"
        x-exportParamName: "Body"
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "segment_id"
        in: "path"
        description: "The unique id for the segment."
        required: true
        type: "string"
        x-title: "Segment ID"
        x-exportParamName: "SegmentId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Batch addremove List members tofrom static segment"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "batch_segment_members"
        methodNameCamel: "batchSegmentMembers"
    delete:
      tags:
      - "lists"
      summary: "Delete segment"
      description: "Delete a specific segment in a list."
      operationId: "deleteListsIdSegmentsId"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "segment_id"
        in: "path"
        description: "The unique id for the segment."
        required: true
        type: "string"
        x-title: "Segment ID"
        x-exportParamName: "SegmentId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "delete_segment"
        methodNameCamel: "deleteSegment"
    patch:
      tags:
      - "lists"
      summary: "Update segment"
      description: "Update a specific segment in a list."
      operationId: "patchListsIdSegmentsId"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "segment_id"
        in: "path"
        description: "The unique id for the segment."
        required: true
        type: "string"
        x-title: "Segment ID"
        x-exportParamName: "SegmentId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/List_9"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/List_7"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "update_segment"
        methodNameCamel: "updateSegment"
  /lists/{list_id}/segments/{segment_id}/members:
    get:
      tags:
      - "lists"
      summary: "List members in segment"
      description: "Get information about members in a saved segment."
      operationId: "getListsIdSegmentsIdMembers"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "segment_id"
        in: "path"
        description: "The unique id for the segment."
        required: true
        type: "string"
        x-title: "Segment ID"
        x-exportParamName: "SegmentId"
      - name: "include_cleaned"
        in: "query"
        description: "Include cleaned members in response"
        required: false
        type: "boolean"
        x-example: false
        x-title: "Include Cleaned"
        x-exportParamName: "IncludeCleaned"
        x-optionalDataType: "Bool"
      - name: "include_transactional"
        in: "query"
        description: "Include transactional members in response"
        required: false
        type: "boolean"
        x-example: false
        x-title: "Include Transactional"
        x-exportParamName: "IncludeTransactional"
        x-optionalDataType: "Bool"
      - name: "include_unsubscribed"
        in: "query"
        description: "Include unsubscribed members in response"
        required: false
        type: "boolean"
        x-example: false
        x-title: "Include Unsubscribed"
        x-exportParamName: "IncludeUnsubscribed"
        x-optionalDataType: "Bool"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Segment Members"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_segment_members_list"
        methodNameCamel: "getSegmentMembersList"
    post:
      tags:
      - "lists"
      summary: "Add member to segment"
      description: "Add a member to a static segment."
      operationId: "postListsIdSegmentsIdMembers"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "segment_id"
        in: "path"
        description: "The unique id for the segment."
        required: true
        type: "string"
        x-title: "Segment ID"
        x-exportParamName: "SegmentId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/body_3"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/List Members_1"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "create_segment_member"
        methodNameCamel: "createSegmentMember"
  /lists/{list_id}/segments/{segment_id}/members/{subscriber_hash}:
    delete:
      tags:
      - "lists"
      summary: "Remove list member from segment"
      description: "Remove a member from the specified static segment."
      operationId: "deleteListsIdSegmentsIdMembersId"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "segment_id"
        in: "path"
        description: "The unique id for the segment."
        required: true
        type: "string"
        x-title: "Segment ID"
        x-exportParamName: "SegmentId"
      - name: "subscriber_hash"
        in: "path"
        description: "The MD5 hash of the lowercase version of the list member's email\
          \ address."
        required: true
        type: "string"
        x-title: "Subscriber Hash"
        x-exportParamName: "SubscriberHash"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "remove_segment_member"
        methodNameCamel: "removeSegmentMember"
  /lists/{list_id}/tag-search:
    get:
      tags:
      - "lists"
      summary: "Search for tags on a list by name."
      description: "Search for tags on a list by name. If no name is provided, will\
        \ return all tags on the list."
      operationId: "searchTagsByName"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "name"
        in: "query"
        description: "The search query used to filter tags.  The search query will\
          \ be compared to each tag as a prefix, so all tags that have a name starting\
          \ with this field will be returned."
        required: false
        type: "string"
        x-title: "Name"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Tag search results"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "tag_search"
        methodNameCamel: "tagSearch"
  /lists/{list_id}/members:
    get:
      tags:
      - "lists"
      summary: "List members info"
      description: "Get information about members in a specific Mailchimp list."
      operationId: "getListsIdMembers"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "email_type"
        in: "query"
        description: "The email type."
        required: false
        type: "string"
        x-title: "Email Type"
        x-exportParamName: "EmailType"
        x-optionalDataType: "String"
      - name: "status"
        in: "query"
        description: "The subscriber's status."
        required: false
        type: "string"
        enum:
        - "subscribed"
        - "unsubscribed"
        - "cleaned"
        - "pending"
        - "transactional"
        - "archived"
        x-title: "Subscriber Status"
        x-exportParamName: "Status"
        x-optionalDataType: "String"
      - name: "since_timestamp_opt"
        in: "query"
        description: "Restrict results to subscribers who opted-in after the set timeframe.\
          \ Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        type: "string"
        x-title: "Since Timestamp Opt"
        x-exportParamName: "SinceTimestampOpt"
        x-optionalDataType: "String"
      - name: "before_timestamp_opt"
        in: "query"
        description: "Restrict results to subscribers who opted-in before the set\
          \ timeframe. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        type: "string"
        x-title: "Before Timestamp Opt"
        x-exportParamName: "BeforeTimestampOpt"
        x-optionalDataType: "String"
      - name: "since_last_changed"
        in: "query"
        description: "Restrict results to subscribers whose information changed after\
          \ the set timeframe. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        type: "string"
        x-title: "Since Last Changed"
        x-exportParamName: "SinceLastChanged"
        x-optionalDataType: "String"
      - name: "before_last_changed"
        in: "query"
        description: "Restrict results to subscribers whose information changed before\
          \ the set timeframe. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        type: "string"
        x-title: "Before Last Changed"
        x-exportParamName: "BeforeLastChanged"
        x-optionalDataType: "String"
      - name: "unique_email_id"
        in: "query"
        description: "A unique identifier for the email address across all Mailchimp\
          \ lists."
        required: false
        type: "string"
        x-title: "Unique Email ID"
        x-exportParamName: "UniqueEmailId"
        x-optionalDataType: "String"
      - name: "vip_only"
        in: "query"
        description: "A filter to return only the list's VIP members. Passing `true`\
          \ will restrict results to VIP list members, passing `false` will return\
          \ all list members."
        required: false
        type: "boolean"
        x-title: "VIP Only"
        x-exportParamName: "VipOnly"
        x-optionalDataType: "Bool"
      - name: "interest_category_id"
        in: "query"
        description: "The unique id for the interest category."
        required: false
        type: "string"
        x-title: "Interest Category ID"
        x-exportParamName: "InterestCategoryId"
        x-optionalDataType: "String"
      - name: "interest_ids"
        in: "query"
        description: "Used to filter list members by interests. Must be accompanied\
          \ by interest_category_id and interest_match. The value must be a comma\
          \ separated list of interest ids present for any supplied interest categories."
        required: false
        type: "string"
        x-title: "Interest Ids"
        x-exportParamName: "InterestIds"
        x-optionalDataType: "String"
      - name: "interest_match"
        in: "query"
        description: "Used to filter list members by interests. Must be accompanied\
          \ by interest_category_id and interest_ids. \"any\" will match a member\
          \ with any of the interest supplied, \"all\" will only match members with\
          \ every interest supplied, and \"none\" will match members without any of\
          \ the interest supplied."
        required: false
        type: "string"
        enum:
        - "any"
        - "all"
        - "none"
        x-title: "Interest Match"
        x-exportParamName: "InterestMatch"
        x-optionalDataType: "String"
      - name: "sort_field"
        in: "query"
        description: "Returns files sorted by the specified field."
        required: false
        type: "string"
        enum:
        - "timestamp_opt"
        - "timestamp_signup"
        - "last_changed"
        x-title: "Sort By Field"
        x-exportParamName: "SortField"
        x-optionalDataType: "String"
      - name: "sort_dir"
        in: "query"
        description: "Determines the order direction for sorted results."
        required: false
        type: "string"
        enum:
        - "ASC"
        - "DESC"
        x-title: "Sort Direction"
        x-exportParamName: "SortDir"
        x-optionalDataType: "String"
      - name: "since_last_campaign"
        in: "query"
        description: "Filter subscribers by those subscribed/unsubscribed/pending/cleaned\
          \ since last email campaign send. Member status is required to use this\
          \ filter."
        required: false
        type: "boolean"
        x-title: "Since Last Campaign"
        x-exportParamName: "SinceLastCampaign"
        x-optionalDataType: "Bool"
      - name: "unsubscribed_since"
        in: "query"
        description: "Filter subscribers by those unsubscribed since a specific date.\
          \ Using any status other than unsubscribed with this filter will result\
          \ in an error."
        required: false
        type: "string"
        x-title: "Unsubscribed Since"
        x-exportParamName: "UnsubscribedSince"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/List Members_2"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_list_members_info"
        methodNameCamel: "getListMembersInfo"
    post:
      tags:
      - "lists"
      summary: "Add member to list"
      description: "Add a new member to the list."
      operationId: "postListsIdMembers"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "skip_merge_validation"
        in: "query"
        description: "If skip_merge_validation is true, member data will be accepted\
          \ without merge field values, even if the merge field is usually required.\
          \ This defaults to false."
        required: false
        type: "boolean"
        x-title: "Skip Merge Validation"
        x-exportParamName: "SkipMergeValidation"
        x-optionalDataType: "Bool"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Add List Members_1"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/List Members_2"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "add_list_member"
        methodNameCamel: "addListMember"
  /lists/{list_id}/members/{subscriber_hash}:
    get:
      tags:
      - "lists"
      summary: "Get member info"
      description: "Get information about a specific list member, including a currently\
        \ subscribed, unsubscribed, or bounced member."
      operationId: "getListsIdMembersId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "subscriber_hash"
        in: "path"
        description: "The MD5 hash of the lowercase version of the list member's email\
          \ address. This endpoint also accepts a list member's email address or contact_id."
        required: true
        type: "string"
        x-title: "Subscriber Hash"
        x-exportParamName: "SubscriberHash"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/List Members_2"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_list_member"
        methodNameCamel: "getListMember"
    put:
      tags:
      - "lists"
      summary: "Add or update list member"
      description: "Add or update a list member."
      operationId: "putListsIdMembersId"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "subscriber_hash"
        in: "path"
        description: "The MD5 hash of the lowercase version of the list member's email\
          \ address. This endpoint also accepts a list member's email address or contact_id."
        required: true
        type: "string"
        x-title: "Subscriber Hash"
        x-exportParamName: "SubscriberHash"
      - name: "skip_merge_validation"
        in: "query"
        description: "If skip_merge_validation is true, member data will be accepted\
          \ without merge field values, even if the merge field is usually required.\
          \ This defaults to false."
        required: false
        type: "boolean"
        x-title: "Skip Merge Validation"
        x-exportParamName: "SkipMergeValidation"
        x-optionalDataType: "Bool"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Add List Members_2"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/List Members_2"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "set_list_member"
        methodNameCamel: "setListMember"
    delete:
      tags:
      - "lists"
      summary: "Archive list member"
      description: "Archive a list member. To permanently delete, use the delete-permanent\
        \ action."
      operationId: "deleteListsIdMembersId"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "subscriber_hash"
        in: "path"
        description: "The MD5 hash of the lowercase version of the list member's email\
          \ address. This endpoint also accepts a list member's email address or contact_id."
        required: true
        type: "string"
        x-title: "Subscriber Hash"
        x-exportParamName: "SubscriberHash"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "delete_list_member"
        methodNameCamel: "deleteListMember"
    patch:
      tags:
      - "lists"
      summary: "Update list member"
      description: "Update information for a specific list member."
      operationId: "patchListsIdMembersId"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "subscriber_hash"
        in: "path"
        description: "The MD5 hash of the lowercase version of the list member's email\
          \ address. This endpoint also accepts a list member's email address or contact_id."
        required: true
        type: "string"
        x-title: "Subscriber Hash"
        x-exportParamName: "SubscriberHash"
      - name: "skip_merge_validation"
        in: "query"
        description: "If skip_merge_validation is true, member data will be accepted\
          \ without merge field values, even if the merge field is usually required.\
          \ This defaults to false."
        required: false
        type: "boolean"
        x-title: "Skip Merge Validation"
        x-exportParamName: "SkipMergeValidation"
        x-optionalDataType: "Bool"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Add List Members_3"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/List Members_2"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "update_list_member"
        methodNameCamel: "updateListMember"
  /lists/{list_id}/members/{subscriber_hash}/activity:
    get:
      tags:
      - "lists"
      summary: "View recent activity 50"
      description: "Get the last 50 events of a member's activity on a specific list,\
        \ including opens, clicks, and unsubscribes."
      operationId: "getListsIdMembersIdActivity"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "subscriber_hash"
        in: "path"
        description: "The MD5 hash of the lowercase version of the list member's email\
          \ address. This endpoint also accepts a list member's email address or contact_id."
        required: true
        type: "string"
        x-title: "Subscriber Hash"
        x-exportParamName: "SubscriberHash"
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "action"
        in: "query"
        description: "A comma seperated list of actions to return."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        enum:
        - "[abuse]"
        - "[bounce]"
        - "[click]"
        - "[open]"
        - "[sent]"
        - "[unsub]"
        - "[ecomm]"
        x-title: "Action"
        x-exportParamName: "Action"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Member Activity Events"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_list_member_activity"
        methodNameCamel: "getListMemberActivity"
  /lists/{list_id}/members/{subscriber_hash}/activity-feed:
    get:
      tags:
      - "lists"
      summary: "View recent activity"
      description: "Get a member's activity on a specific list, including opens, clicks,\
        \ and unsubscribes."
      operationId: "getListsIdMembersIdActivityFeed"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "subscriber_hash"
        in: "path"
        description: "The MD5 hash of the lowercase version of the list member's email\
          \ address."
        required: true
        type: "string"
        x-title: "Subscriber Hash"
        x-exportParamName: "SubscriberHash"
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "activity_filters"
        in: "query"
        description: "A comma-separated list of activity filters that correspond to\
          \ a set of activity types, e.g \"?activity_filters=open,bounce,click\"."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        enum:
        - "[bounce]"
        - "[click]"
        - "[conversation]"
        - "[ecommerce_signup]"
        - "[event]"
        - "[web_engagement]"
        - "[generic_signup]"
        - "[landing_page_signup]"
        - "[marketing_permission]"
        - "[note]"
        - "[open]"
        - "[order]"
        - "[postcard_sent]"
        - "[sent]"
        - "[signup]"
        - "[squatter_signup]"
        - "[unsub]"
        - "[website_signup]"
        - "[survey_response]"
        x-title: "Activity Filters"
        x-exportParamName: "ActivityFilters"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Member Activity Events_1"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_list_member_activity_feed"
        methodNameCamel: "getListMemberActivityFeed"
  /lists/{list_id}/members/{subscriber_hash}/tags:
    get:
      tags:
      - "lists"
      summary: "List member tags"
      description: "Get the tags on a list member."
      operationId: "getListMemberTags"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "subscriber_hash"
        in: "path"
        description: "The MD5 hash of the lowercase version of the list member's email\
          \ address. This endpoint also accepts a list member's email address or contact_id."
        required: true
        type: "string"
        x-title: "Subscriber Hash"
        x-exportParamName: "SubscriberHash"
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Collection of Tags"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_list_member_tags"
        methodNameCamel: "getListMemberTags"
    post:
      tags:
      - "lists"
      summary: "Add or remove member tags"
      description: "Add or remove tags from a list member. If a tag that does not\
        \ exist is passed in and set as 'active', a new tag will be created."
      operationId: "postListMemberTags"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "subscriber_hash"
        in: "path"
        description: "The MD5 hash of the lowercase version of the list member's email\
          \ address."
        required: true
        type: "string"
        x-title: "Subscriber Hash"
        x-exportParamName: "SubscriberHash"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Member Tags"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "update_list_member_tags"
        methodNameCamel: "updateListMemberTags"
  /lists/{list_id}/members/{subscriber_hash}/events:
    get:
      tags:
      - "lists"
      summary: "List member events"
      description: "Get events for a contact."
      operationId: "getListsIdMembersIdEvents"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "subscriber_hash"
        in: "path"
        description: "The MD5 hash of the lowercase version of the list member's email\
          \ address. This endpoint also accepts a list member's email address or contact_id."
        required: true
        type: "string"
        x-title: "Subscriber Hash"
        x-exportParamName: "SubscriberHash"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Collection of Events"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_list_member_events"
        methodNameCamel: "getListMemberEvents"
    post:
      tags:
      - "lists"
      summary: "Add event"
      description: "Add an event for a list member."
      operationId: "postListMemberEvents"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "subscriber_hash"
        in: "path"
        description: "The MD5 hash of the lowercase version of the list member's email\
          \ address. This endpoint also accepts a list member's email address or contact_id."
        required: true
        type: "string"
        x-title: "Subscriber Hash"
        x-exportParamName: "SubscriberHash"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Events"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "create_list_member_event"
        methodNameCamel: "createListMemberEvent"
  /lists/{list_id}/members/{subscriber_hash}/goals:
    get:
      tags:
      - "lists"
      summary: "List member goal events"
      description: "Get the last 50 Goal events for a member on a specific list."
      operationId: "getListsIdMembersIdGoals"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "subscriber_hash"
        in: "path"
        description: "The MD5 hash of the lowercase version of the list member's email\
          \ address. This endpoint also accepts a list member's email address or contact_id."
        required: true
        type: "string"
        x-title: "Subscriber Hash"
        x-exportParamName: "SubscriberHash"
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Collection of Member Activity Events"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "getListMemberGoals"
        methodNameCamel: "getListMemberGoals"
  /lists/{list_id}/members/{subscriber_hash}/notes:
    get:
      tags:
      - "lists"
      summary: "List recent member notes"
      description: "Get recent notes for a specific list member."
      operationId: "getListsIdMembersIdNotes"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "subscriber_hash"
        in: "path"
        description: "The MD5 hash of the lowercase version of the list member's email\
          \ address."
        required: true
        type: "string"
        x-title: "Subscriber Hash"
        x-exportParamName: "SubscriberHash"
      - name: "sort_field"
        in: "query"
        description: "Returns notes sorted by the specified field."
        required: false
        type: "string"
        enum:
        - "created_at"
        - "updated_at"
        - "note_id"
        x-title: "Sort By Field"
        x-exportParamName: "SortField"
        x-optionalDataType: "String"
      - name: "sort_dir"
        in: "query"
        description: "Determines the order direction for sorted results."
        required: false
        type: "string"
        enum:
        - "ASC"
        - "DESC"
        x-title: "Sort Direction"
        x-exportParamName: "SortDir"
        x-optionalDataType: "String"
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Collection of Notes"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_list_member_notes"
        methodNameCamel: "getListMemberNotes"
    post:
      tags:
      - "lists"
      summary: "Add member note"
      description: "Add a new note for a specific subscriber."
      operationId: "postListsIdMembersIdNotes"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "subscriber_hash"
        in: "path"
        description: "The MD5 hash of the lowercase version of the list member's email\
          \ address."
        required: true
        type: "string"
        x-title: "Subscriber Hash"
        x-exportParamName: "SubscriberHash"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Member Notes_1"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Member Notes"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "create_list_member_note"
        methodNameCamel: "createListMemberNote"
  /lists/{list_id}/members/{subscriber_hash}/notes/{note_id}:
    get:
      tags:
      - "lists"
      summary: "Get member note"
      description: "Get a specific note for a specific list member."
      operationId: "getListsIdMembersIdNotesId"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "subscriber_hash"
        in: "path"
        description: "The MD5 hash of the lowercase version of the list member's email\
          \ address. This endpoint also accepts a list member's email address or contact_id."
        required: true
        type: "string"
        x-title: "Subscriber Hash"
        x-exportParamName: "SubscriberHash"
      - name: "note_id"
        in: "path"
        description: "The id for the note."
        required: true
        type: "string"
        x-title: "Note ID"
        x-exportParamName: "NoteId"
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Member Notes"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_list_member_note"
        methodNameCamel: "getListMemberNote"
    delete:
      tags:
      - "lists"
      summary: "Delete note"
      description: "Delete a specific note for a specific list member."
      operationId: "deleteListsIdMembersIdNotesId"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "subscriber_hash"
        in: "path"
        description: "The MD5 hash of the lowercase version of the list member's email\
          \ address. This endpoint also accepts a list member's email address or contact_id."
        required: true
        type: "string"
        x-title: "Subscriber Hash"
        x-exportParamName: "SubscriberHash"
      - name: "note_id"
        in: "path"
        description: "The id for the note."
        required: true
        type: "string"
        x-title: "Note ID"
        x-exportParamName: "NoteId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "delete_list_member_note"
        methodNameCamel: "deleteListMemberNote"
    patch:
      tags:
      - "lists"
      summary: "Update note"
      description: "Update a specific note for a specific list member."
      operationId: "patchListsIdMembersIdNotesId"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "subscriber_hash"
        in: "path"
        description: "The MD5 hash of the lowercase version of the list member's email\
          \ address. This endpoint also accepts a list member's email address or contact_id."
        required: true
        type: "string"
        x-title: "Subscriber Hash"
        x-exportParamName: "SubscriberHash"
      - name: "note_id"
        in: "path"
        description: "The id for the note."
        required: true
        type: "string"
        x-title: "Note ID"
        x-exportParamName: "NoteId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Member Notes_2"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Member Notes"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "update_list_member_note"
        methodNameCamel: "updateListMemberNote"
  /lists/{list_id}/members/{subscriber_hash}/actions/delete-permanent:
    post:
      tags:
      - "lists"
      summary: "Delete list member"
      description: "Delete all personally identifiable information related to a list\
        \ member, and remove them from a list. This will make it impossible to re-import\
        \ the list member."
      operationId: "postListsIdMembersHashActionsDeletePermanent"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "subscriber_hash"
        in: "path"
        description: "The MD5 hash of the lowercase version of the list member's email\
          \ address."
        required: true
        type: "string"
        x-title: "Subscriber Hash"
        x-exportParamName: "SubscriberHash"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "delete_list_member_permanent"
        methodNameCamel: "deleteListMemberPermanent"
  /lists/{list_id}/merge-fields:
    get:
      tags:
      - "lists"
      summary: "List merge fields"
      description: "Get a list of all merge fields for an audience."
      operationId: "getListsIdMergeFields"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "type"
        in: "query"
        description: "The merge field type."
        required: false
        type: "string"
        x-title: "Merge Type"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "required"
        in: "query"
        description: "Whether it's a required merge field."
        required: false
        type: "boolean"
        x-title: "Required"
        x-exportParamName: "Required"
        x-optionalDataType: "Bool"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Collection of Merge Fields"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_list_merge_fields"
        methodNameCamel: "getListMergeFields"
    post:
      tags:
      - "lists"
      summary: "Add merge field"
      description: "Add a new merge field for a specific audience."
      operationId: "postListsIdMergeFields"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Merge Field_1"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Merge Field"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "add_list_merge_field"
        methodNameCamel: "addListMergeField"
  /lists/{list_id}/merge-fields/{merge_id}:
    get:
      tags:
      - "lists"
      summary: "Get merge field"
      description: "Get information about a specific merge field."
      operationId: "getListsIdMergeFieldsId"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "merge_id"
        in: "path"
        description: "The id for the merge field."
        required: true
        type: "string"
        x-title: "Merge ID"
        x-exportParamName: "MergeId"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Merge Field"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_list_merge_field"
        methodNameCamel: "getListMergeField"
    delete:
      tags:
      - "lists"
      summary: "Delete merge field"
      description: "Delete a specific merge field."
      operationId: "deleteListsIdMergeFieldsId"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "merge_id"
        in: "path"
        description: "The id for the merge field."
        required: true
        type: "string"
        x-title: "Merge ID"
        x-exportParamName: "MergeId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "delete_list_merge_field"
        methodNameCamel: "deleteListMergeField"
    patch:
      tags:
      - "lists"
      summary: "Update merge field"
      description: "Update a specific merge field."
      operationId: "patchListsIdMergeFieldsId"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "merge_id"
        in: "path"
        description: "The id for the merge field."
        required: true
        type: "string"
        x-title: "Merge ID"
        x-exportParamName: "MergeId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Merge Field_2"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Merge Field"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "update_list_merge_field"
        methodNameCamel: "updateListMergeField"
  /lists/{list_id}/webhooks:
    get:
      tags:
      - "lists"
      summary: "List webhooks"
      description: "Get information about all webhooks for a specific list."
      operationId: "getListsIdWebhooks"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/List Webhooks"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_list_webhooks"
        methodNameCamel: "getListWebhooks"
    post:
      tags:
      - "lists"
      summary: "Add webhook"
      description: "Create a new webhook for a specific list."
      operationId: "postListsIdWebhooks"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Add Webhook"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/List Webhooks"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "create_list_webhook"
        methodNameCamel: "createListWebhook"
  /lists/{list_id}/webhooks/{webhook_id}:
    get:
      tags:
      - "lists"
      summary: "Get webhook info"
      description: "Get information about a specific webhook."
      operationId: "getListsIdWebhooksId"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "webhook_id"
        in: "path"
        description: "The webhook's id."
        required: true
        type: "string"
        x-exportParamName: "WebhookId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/List Webhooks"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_list_webhook"
        methodNameCamel: "getListWebhook"
    delete:
      tags:
      - "lists"
      summary: "Delete webhook"
      description: "Delete a specific webhook in a list."
      operationId: "deleteListsIdWebhooksId"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "webhook_id"
        in: "path"
        description: "The webhook's id."
        required: true
        type: "string"
        x-exportParamName: "WebhookId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "delete_list_webhook"
        methodNameCamel: "deleteListWebhook"
    patch:
      tags:
      - "lists"
      summary: "Update webhook"
      description: "Update the settings for an existing webhook."
      operationId: "patchListsIdWebhooksId"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "webhook_id"
        in: "path"
        description: "The webhook's id."
        required: true
        type: "string"
        x-exportParamName: "WebhookId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Add Webhook_1"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/List Webhooks"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "update_list_webhook"
        methodNameCamel: "updateListWebhook"
  /lists/{list_id}/signup-forms:
    get:
      tags:
      - "lists"
      summary: "List signup forms"
      description: "Get signup forms for a specific list."
      operationId: "getListsIdSignupForms"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/List Signup Forms"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_list_signup_forms"
        methodNameCamel: "getListSignupForms"
    post:
      tags:
      - "lists"
      summary: "Customize signup form"
      description: "Customize a list's default signup form."
      operationId: "postListsIdSignupForms"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Signup Form_1"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Signup Form"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "update_list_signup_form"
        methodNameCamel: "updateListSignupForm"
  /lists/{list_id}/locations:
    get:
      tags:
      - "lists"
      summary: "List locations"
      description: "Get the locations (countries) that the list's subscribers have\
        \ been tagged to based on geocoding their IP address."
      operationId: "getListsIdLocations"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/List Locations"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_list_locations"
        methodNameCamel: "getListLocations"
  /lists/{list_id}/surveys:
    get:
      tags:
      - "lists"
      summary: "Get information about all surveys for a list"
      description: "Get information about all available surveys for a specific list."
      operationId: "getListsIdSurveys"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      deprecated: false
      responses:
        "200":
          description: ""
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_all_surveys_for_list"
        methodNameCamel: "getAllSurveysForList"
  /lists/{list_id}/surveys/{survey_id}:
    get:
      tags:
      - "lists"
      summary: "Get survey"
      description: "Get details about a specific survey."
      operationId: "getListsIdSurveysId"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "survey_id"
        in: "path"
        description: "The ID of the survey."
        required: true
        type: "string"
        x-title: "Survey ID"
        x-exportParamName: "SurveyId"
      deprecated: false
      responses:
        "200":
          description: ""
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_survey"
        methodNameCamel: "getSurvey"
  /lists/{list_id}/surveys/{survey_id}/actions/publish:
    post:
      tags:
      - "Surveys"
      summary: "Publish a Survey"
      description: "Publish a survey that is in draft, unpublished, or has been previously\
        \ published and edited."
      operationId: "postListsIdSurveysIdActionsPublish"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "survey_id"
        in: "path"
        description: "The ID of the survey."
        required: true
        type: "string"
        x-title: "Survey ID"
        x-exportParamName: "SurveyId"
      deprecated: false
      responses:
        "200":
          description: "Survey Published"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "publish_survey"
        methodNameCamel: "publishSurvey"
  /lists/{list_id}/surveys/{survey_id}/actions/unpublish:
    post:
      tags:
      - "Surveys"
      summary: "Unpublish a Survey"
      description: "Unpublish a survey that has been published."
      operationId: "postListsIdSurveysIdActionsUnpublish"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "survey_id"
        in: "path"
        description: "The ID of the survey."
        required: true
        type: "string"
        x-title: "Survey ID"
        x-exportParamName: "SurveyId"
      deprecated: false
      responses:
        "200":
          description: "Survey Instance"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "unpublish_survey"
        methodNameCamel: "unpublishSurvey"
  /lists/{list_id}/surveys/{survey_id}/actions/create-email:
    post:
      tags:
      - "Surveys"
      summary: "Create a Survey Campaign"
      description: "Utilize the List ID and Survey ID to generate a Campaign that\
        \ links to your survey."
      operationId: "postListsIdSurveysIdActionsCreateEmail"
      parameters:
      - name: "list_id"
        in: "path"
        description: "The unique ID for the list."
        required: true
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
      - name: "survey_id"
        in: "path"
        description: "The ID of the survey."
        required: true
        type: "string"
        x-title: "Survey ID"
        x-exportParamName: "SurveyId"
      deprecated: false
      responses:
        "200":
          description: "Campaign Instance"
          schema:
            $ref: "#/definitions/Campaign_3"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "create_email"
        methodNameCamel: "createEmail"
  /landing-pages:
    get:
      tags:
      - "landingPages"
      summary: "List landing pages"
      description: "Get all landing pages."
      operationId: "getAllLandingPages"
      parameters:
      - name: "sort_dir"
        in: "query"
        description: "Determines the order direction for sorted results."
        required: false
        type: "string"
        enum:
        - "ASC"
        - "DESC"
        x-title: "Sort Direction"
        x-exportParamName: "SortDir"
        x-optionalDataType: "String"
      - name: "sort_field"
        in: "query"
        description: "Returns files sorted by the specified field."
        required: false
        type: "string"
        enum:
        - "created_at"
        - "updated_at"
        x-title: "Sort By Field"
        x-exportParamName: "SortField"
        x-optionalDataType: "String"
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "Landing Pages Collection"
          schema:
            $ref: "#/definitions/inline_response_200_6"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_all"
        methodNameCamel: "getAll"
    post:
      tags:
      - "landingPages"
      summary: "Add landing page"
      description: "Create a new Mailchimp landing page."
      operationId: "postAllLandingPages"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Landing Page_1"
        x-exportParamName: "Body"
      - name: "use_default_list"
        in: "query"
        description: "Will create the Landing Page using the account's Default List\
          \ instead of requiring a list_id."
        required: false
        type: "boolean"
        x-title: "Use Default List"
        x-exportParamName: "UseDefaultList"
        x-optionalDataType: "Bool"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Landing Page"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "create"
        methodNameCamel: "create"
  /landing-pages/{page_id}:
    get:
      tags:
      - "landingPages"
      summary: "Get landing page info"
      description: "Get information about a specific page."
      operationId: "getLandingPageId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "page_id"
        in: "path"
        description: "The unique id for the page."
        required: true
        type: "string"
        x-title: "Landing Page unique ID"
        x-exportParamName: "PageId"
      deprecated: false
      responses:
        "200":
          description: "Landing Pages Instance"
          schema:
            $ref: "#/definitions/Landing Page"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_page"
        methodNameCamel: "getPage"
    delete:
      tags:
      - "landingPages"
      summary: "Delete landing page"
      description: "Delete a landing page."
      operationId: "deleteLandingPageId"
      parameters:
      - name: "page_id"
        in: "path"
        description: "The unique id for the page."
        required: true
        type: "string"
        x-title: "Landing Page unique ID"
        x-exportParamName: "PageId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "delete_page"
        methodNameCamel: "deletePage"
    patch:
      tags:
      - "landingPages"
      summary: "Update landing page"
      description: "Update a landing page."
      operationId: "patchLandingPageId"
      parameters:
      - name: "page_id"
        in: "path"
        description: "The unique id for the page."
        required: true
        type: "string"
        x-title: "Landing Page unique ID"
        x-exportParamName: "PageId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Landing Page_2"
        x-exportParamName: "Body"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Landing Page"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "update_page"
        methodNameCamel: "updatePage"
  /landing-pages/{page_id}/actions/publish:
    post:
      tags:
      - "landingPages"
      summary: "Publish landing page"
      description: "Publish a landing page that is in draft, unpublished, or has been\
        \ previously published and edited."
      operationId: "postLandingPageIdActionsPublish"
      parameters:
      - name: "page_id"
        in: "path"
        description: "The unique id for the page."
        required: true
        type: "string"
        x-title: "Landing Page unique ID"
        x-exportParamName: "PageId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "publish_page"
        methodNameCamel: "publishPage"
  /landing-pages/{page_id}/actions/unpublish:
    post:
      tags:
      - "landingPages"
      summary: "Unpublish landing page"
      description: "Unpublish a landing page that is in draft or has been published."
      operationId: "postLandingPageIdActionsUnpublish"
      parameters:
      - name: "page_id"
        in: "path"
        description: "The unique id for the page."
        required: true
        type: "string"
        x-title: "Landing Page unique ID"
        x-exportParamName: "PageId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "unpublish_page"
        methodNameCamel: "unpublishPage"
  /landing-pages/{page_id}/content:
    get:
      tags:
      - "landingPages"
      summary: "Get landing page content"
      description: "Get the the HTML for your landing page."
      operationId: "getLandingPageIdContent"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "page_id"
        in: "path"
        description: "The unique id for the page."
        required: true
        type: "string"
        x-title: "Landing Page unique ID"
        x-exportParamName: "PageId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Landing Page Content"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_page_content"
        methodNameCamel: "getPageContent"
  /reports:
    get:
      tags:
      - "reports"
      summary: "List campaign reports"
      description: "Get campaign reports."
      operationId: "getReports"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "type"
        in: "query"
        description: "The campaign type."
        required: false
        type: "string"
        enum:
        - "regular"
        - "plaintext"
        - "absplit"
        - "rss"
        - "variate"
        x-title: "Campaign Type"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "before_send_time"
        in: "query"
        description: "Restrict the response to campaigns sent before the set time.\
          \ Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        type: "string"
        format: "date-time"
        x-title: "Before Send Time"
        x-exportParamName: "BeforeSendTime"
        x-optionalDataType: "Time"
      - name: "since_send_time"
        in: "query"
        description: "Restrict the response to campaigns sent after the set time.\
          \ Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        type: "string"
        format: "date-time"
        x-title: "Since Send Time"
        x-exportParamName: "SinceSendTime"
        x-optionalDataType: "Time"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Campaign Reports_1"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_all_campaign_reports"
        methodNameCamel: "getAllCampaignReports"
  /reports/{campaign_id}:
    get:
      tags:
      - "reports"
      summary: "Get campaign report"
      description: "Get report details for a specific sent campaign."
      operationId: "getReportsId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "campaign_id"
        in: "path"
        description: "The unique id for the campaign."
        required: true
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Campaign Report"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_campaign_report"
        methodNameCamel: "getCampaignReport"
  /reports/{campaign_id}/abuse-reports:
    get:
      tags:
      - "reports"
      summary: "List abuse reports"
      description: "Get a list of abuse complaints for a specific campaign."
      operationId: "getReportsIdAbuseReportsId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "campaign_id"
        in: "path"
        description: "The unique id for the campaign."
        required: true
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Abuse Complaints_1"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_campaign_abuse_reports"
        methodNameCamel: "getCampaignAbuseReports"
  /reports/{campaign_id}/abuse-reports/{report_id}:
    get:
      tags:
      - "reports"
      summary: "Get abuse report"
      description: "Get information about a specific abuse report for a campaign."
      operationId: "getReportsIdAbuseReportsIdId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "campaign_id"
        in: "path"
        description: "The unique id for the campaign."
        required: true
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
      - name: "report_id"
        in: "path"
        description: "The id for the abuse report."
        required: true
        type: "string"
        x-exportParamName: "ReportId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Abuse Complaint_1"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_campaign_abuse_report"
        methodNameCamel: "getCampaignAbuseReport"
  /reports/{campaign_id}/advice:
    get:
      tags:
      - "reports"
      summary: "List campaign feedback"
      description: "Get feedback based on a campaign's statistics. Advice feedback\
        \ is based on campaign stats like opens, clicks, unsubscribes, bounces, and\
        \ more."
      operationId: "getReportsIdAdvice"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "campaign_id"
        in: "path"
        description: "The unique id for the campaign."
        required: true
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Campaign Advice Report"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_campaign_advice"
        methodNameCamel: "getCampaignAdvice"
  /reports/{campaign_id}/click-details:
    get:
      tags:
      - "reports"
      summary: "List campaign details"
      description: "Get information about clicks on specific links in your Mailchimp\
        \ campaigns."
      operationId: "getReportsIdClickDetails"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "campaign_id"
        in: "path"
        description: "The unique id for the campaign."
        required: true
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Click Detail Report"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_campaign_click_details"
        methodNameCamel: "getCampaignClickDetails"
  /reports/{campaign_id}/click-details/{link_id}:
    get:
      tags:
      - "reports"
      summary: "Get campaign link details"
      description: "Get click details for a specific link in a campaign."
      operationId: "getReportsIdClickDetailsId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "campaign_id"
        in: "path"
        description: "The unique id for the campaign."
        required: true
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
      - name: "link_id"
        in: "path"
        description: "The id for the link."
        required: true
        type: "string"
        x-title: "Link ID"
        x-exportParamName: "LinkId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Click Detail Report"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_campaign_click_details_for_link"
        methodNameCamel: "getCampaignClickDetailsForLink"
  /reports/{campaign_id}/click-details/{link_id}/members:
    get:
      tags:
      - "reports"
      summary: "List clicked link subscribers"
      description: "Get information about list members who clicked on a specific link\
        \ in a campaign."
      operationId: "getReportsIdClickDetailsIdMembers"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "campaign_id"
        in: "path"
        description: "The unique id for the campaign."
        required: true
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
      - name: "link_id"
        in: "path"
        description: "The id for the link."
        required: true
        type: "string"
        x-title: "Link ID"
        x-exportParamName: "LinkId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Click Detail Members"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_subscribers_info"
        methodNameCamel: "getSubscribersInfo"
  /reports/{campaign_id}/click-details/{link_id}/members/{subscriber_hash}:
    get:
      tags:
      - "reports"
      summary: "Get clicked link subscriber"
      description: "Get information about a specific subscriber who clicked a link\
        \ in a specific campaign."
      operationId: "getReportsIdClickDetailsIdMembersId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "campaign_id"
        in: "path"
        description: "The unique id for the campaign."
        required: true
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
      - name: "link_id"
        in: "path"
        description: "The id for the link."
        required: true
        type: "string"
        x-title: "Link ID"
        x-exportParamName: "LinkId"
      - name: "subscriber_hash"
        in: "path"
        description: "The MD5 hash of the lowercase version of the list member's email\
          \ address."
        required: true
        type: "string"
        x-title: "Subscriber Hash"
        x-exportParamName: "SubscriberHash"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Click Detail Member"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_subscriber_info"
        methodNameCamel: "getSubscriberInfo"
  /reports/{campaign_id}/open-details:
    get:
      tags:
      - "reports"
      summary: "List campaign open details"
      description: "Get detailed information about any campaign emails that were opened\
        \ by a list member."
      operationId: "getReportsIdOpenDetails"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "campaign_id"
        in: "path"
        description: "The unique id for the campaign."
        required: true
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
      - name: "since"
        in: "query"
        description: "Restrict results to campaign open events that occur after a\
          \ specific time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        type: "string"
        x-example: "2016-04-12 12:00:00"
        x-title: "Campaign opens since"
        x-exportParamName: "Since"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Open Detail Report"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_campaign_open_details"
        methodNameCamel: "getCampaignOpenDetails"
  /reports/{campaign_id}/open-details/{subscriber_hash}:
    get:
      tags:
      - "reports"
      summary: "Get opened campaign subscriber"
      description: "Get information about a specific subscriber who opened a campaign."
      operationId: "getReportsIdOpenDetailsIdMembersId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "campaign_id"
        in: "path"
        description: "The unique id for the campaign."
        required: true
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
      - name: "subscriber_hash"
        in: "path"
        description: "The MD5 hash of the lowercase version of the list member's email\
          \ address."
        required: true
        type: "string"
        x-title: "Subscriber Hash"
        x-exportParamName: "SubscriberHash"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Open Activity"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_subscriber_info_for_opened_campaign"
        methodNameCamel: "getSubscriberInfoForOpenedCampaign"
  /reports/{campaign_id}/domain-performance:
    get:
      tags:
      - "reports"
      summary: "List domain performance stats"
      description: "Get statistics for the top-performing email domains in a campaign."
      operationId: "getReportsIdDomainPerformance"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "campaign_id"
        in: "path"
        description: "The unique id for the campaign."
        required: true
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Domain Performance"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_domain_performance_for_campaign"
        methodNameCamel: "getDomainPerformanceForCampaign"
  /reports/{campaign_id}/eepurl:
    get:
      tags:
      - "reports"
      summary: "List EepURL activity"
      description: "Get a summary of social activity for the campaign, tracked by\
        \ EepURL."
      operationId: "getReportsIdEepurl"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "campaign_id"
        in: "path"
        description: "The unique id for the campaign."
        required: true
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Eepurl Activity"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_eepurl_activity_for_campaign"
        methodNameCamel: "getEepurlActivityForCampaign"
  /reports/{campaign_id}/email-activity:
    get:
      tags:
      - "reports"
      summary: "List email activity"
      description: "Get a list of member's subscriber activity in a specific campaign."
      operationId: "getReportsIdEmailActivity"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "campaign_id"
        in: "path"
        description: "The unique id for the campaign."
        required: true
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
      - name: "since"
        in: "query"
        description: "Restrict results to email activity events that occur after a\
          \ specific time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        type: "string"
        x-title: "Email Activity since"
        x-exportParamName: "Since"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Email Activity"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_email_activity_for_campaign"
        methodNameCamel: "getEmailActivityForCampaign"
  /reports/{campaign_id}/email-activity/{subscriber_hash}:
    get:
      tags:
      - "reports"
      summary: "Get subscriber email activity"
      description: "Get a specific list member's activity in a campaign including\
        \ opens, clicks, and bounces."
      operationId: "getReportsIdEmailActivityId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "campaign_id"
        in: "path"
        description: "The unique id for the campaign."
        required: true
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
      - name: "subscriber_hash"
        in: "path"
        description: "The MD5 hash of the lowercase version of the list member's email\
          \ address."
        required: true
        type: "string"
        x-title: "Subscriber Hash"
        x-exportParamName: "SubscriberHash"
      - name: "since"
        in: "query"
        description: "Restrict results to email activity events that occur after a\
          \ specific time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        type: "string"
        x-title: "Email Activity since"
        x-exportParamName: "Since"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Email Activity"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_email_activity_for_subscriber"
        methodNameCamel: "getEmailActivityForSubscriber"
  /reports/{campaign_id}/locations:
    get:
      tags:
      - "reports"
      summary: "List top open activities"
      description: "Get top open locations for a specific campaign."
      operationId: "getReportsIdLocations"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "campaign_id"
        in: "path"
        description: "The unique id for the campaign."
        required: true
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Open Locations"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_locations_for_campaign"
        methodNameCamel: "getLocationsForCampaign"
  /reports/{campaign_id}/sent-to:
    get:
      tags:
      - "reports"
      summary: "List campaign recipients"
      description: "Get information about campaign recipients."
      operationId: "getReportsIdSentTo"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "campaign_id"
        in: "path"
        description: "The unique id for the campaign."
        required: true
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/SentTo"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_campaign_recipients"
        methodNameCamel: "getCampaignRecipients"
  /reports/{campaign_id}/sent-to/{subscriber_hash}:
    get:
      tags:
      - "reports"
      summary: "Get campaign recipient info"
      description: "Get information about a specific campaign recipient."
      operationId: "getReportsIdSentToId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "campaign_id"
        in: "path"
        description: "The unique id for the campaign."
        required: true
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
      - name: "subscriber_hash"
        in: "path"
        description: "The MD5 hash of the lowercase version of the list member's email\
          \ address."
        required: true
        type: "string"
        x-title: "Subscriber Hash"
        x-exportParamName: "SubscriberHash"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Sent To"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_campaign_recipient"
        methodNameCamel: "getCampaignRecipient"
  /reports/{campaign_id}/sub-reports:
    get:
      tags:
      - "reports"
      summary: "List child campaign reports"
      description: "Get a list of reports with child campaigns for a specific parent\
        \ campaign."
      operationId: "getReportsIdSubReportsId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "campaign_id"
        in: "path"
        description: "The unique id for the campaign."
        required: true
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Campaign SubReports"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_sub_reports_for_campaign"
        methodNameCamel: "getSubReportsForCampaign"
  /reports/{campaign_id}/unsubscribed:
    get:
      tags:
      - "reports"
      summary: "List unsubscribed members"
      description: "Get information about members who have unsubscribed from a specific\
        \ campaign."
      operationId: "getReportsIdUnsubscribed"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "campaign_id"
        in: "path"
        description: "The unique id for the campaign."
        required: true
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Unsubscribes"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_unsubscribed_list_for_campaign"
        methodNameCamel: "getUnsubscribedListForCampaign"
  /reports/{campaign_id}/unsubscribed/{subscriber_hash}:
    get:
      tags:
      - "reports"
      summary: "Get unsubscribed member"
      description: "Get information about a specific list member who unsubscribed\
        \ from a campaign."
      operationId: "getReportsIdUnsubscribedId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "campaign_id"
        in: "path"
        description: "The unique id for the campaign."
        required: true
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
      - name: "subscriber_hash"
        in: "path"
        description: "The MD5 hash of the lowercase version of the list member's email\
          \ address."
        required: true
        type: "string"
        x-title: "Subscriber Hash"
        x-exportParamName: "SubscriberHash"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Unsubscribes"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_unsubscribed_list_member"
        methodNameCamel: "getUnsubscribedListMember"
  /reports/{campaign_id}/ecommerce-product-activity:
    get:
      tags:
      - "reports"
      summary: "List campaign product activity"
      description: "Get breakdown of product activity for a campaign"
      operationId: "getReportsIdEcommerceProductActivity"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "campaign_id"
        in: "path"
        description: "The unique id for the campaign."
        required: true
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
      - name: "sort_field"
        in: "query"
        description: "Returns files sorted by the specified field."
        required: false
        type: "string"
        enum:
        - "title"
        - "total_revenue"
        - "total_purchased"
        x-title: "Sort By Field"
        x-exportParamName: "SortField"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Ecommerce Product Activity Instance"
          schema:
            $ref: "#/definitions/inline_response_200_7"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_ecommerce_product_activity_for_campaign"
        methodNameCamel: "getEcommerceProductActivityForCampaign"
  /templates:
    get:
      tags:
      - "templates"
      summary: "List templates"
      description: "Get a list of an account's available templates."
      operationId: "getTemplates"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "created_by"
        in: "query"
        description: "The Mailchimp account user who created the template."
        required: false
        type: "string"
        x-title: "Created By"
        x-exportParamName: "CreatedBy"
        x-optionalDataType: "String"
      - name: "since_date_created"
        in: "query"
        description: "Restrict the response to templates created after the set date.\
          \ Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        type: "string"
        x-title: "Since Date Created"
        x-exportParamName: "SinceDateCreated"
        x-optionalDataType: "String"
      - name: "before_date_created"
        in: "query"
        description: "Restrict the response to templates created before the set date.\
          \ Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        type: "string"
        x-title: "Before Date Created"
        x-exportParamName: "BeforeDateCreated"
        x-optionalDataType: "String"
      - name: "type"
        in: "query"
        description: "Limit results based on template type."
        required: false
        type: "string"
        x-title: "Template Type"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "category"
        in: "query"
        description: "Limit results based on category."
        required: false
        type: "string"
        x-title: "Category"
        x-exportParamName: "Category"
        x-optionalDataType: "String"
      - name: "folder_id"
        in: "query"
        description: "The unique folder id."
        required: false
        type: "string"
        x-title: "Folder ID"
        x-exportParamName: "FolderId"
        x-optionalDataType: "String"
      - name: "sort_field"
        in: "query"
        description: "Returns user templates sorted by the specified field."
        required: false
        type: "string"
        enum:
        - "date_created"
        - "date_edited"
        - "name"
        x-title: "Sort By Field"
        x-exportParamName: "SortField"
        x-optionalDataType: "String"
      - name: "content_type"
        in: "query"
        description: "Limit results based on how the template's content is put together.\
          \ Only templates of type `user` can be filtered by `content_type`. If you\
          \ want to retrieve saved templates created with the legacy email editor,\
          \ then filter `content_type` to `template`. If you'd rather pull your saved\
          \ templates for the new editor, filter to `multichannel`. For code your\
          \ own templates, filter to `html`."
        required: false
        type: "string"
        enum:
        - "html"
        - "template"
        - "multichannel"
        x-title: "Content Type"
        x-exportParamName: "ContentType"
        x-optionalDataType: "String"
      - name: "sort_dir"
        in: "query"
        description: "Determines the order direction for sorted results."
        required: false
        type: "string"
        enum:
        - "ASC"
        - "DESC"
        x-title: "Sort Direction"
        x-exportParamName: "SortDir"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Templates"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "list"
        methodNameCamel: "list"
    post:
      tags:
      - "templates"
      summary: "Add template"
      description: "Create a new template for the account. Only Classic templates\
        \ are supported."
      operationId: "postTemplates"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Template Instance_1"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Template Instance"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "create"
        methodNameCamel: "create"
  /templates/{template_id}:
    get:
      tags:
      - "templates"
      summary: "Get template info"
      description: "Get information about a specific template."
      operationId: "getTemplatesId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "template_id"
        in: "path"
        description: "The unique id for the template."
        required: true
        type: "string"
        x-title: "Template ID"
        x-exportParamName: "TemplateId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Template Instance"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_template"
        methodNameCamel: "getTemplate"
    delete:
      tags:
      - "templates"
      summary: "Delete template"
      description: "Delete a specific template."
      operationId: "deleteTemplatesId"
      parameters:
      - name: "template_id"
        in: "path"
        description: "The unique id for the template."
        required: true
        type: "string"
        x-title: "Template ID"
        x-exportParamName: "TemplateId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "delete_template"
        methodNameCamel: "deleteTemplate"
    patch:
      tags:
      - "templates"
      summary: "Update template"
      description: "Update the name, HTML, or `folder_id` of an existing template."
      operationId: "patchTemplatesId"
      parameters:
      - name: "template_id"
        in: "path"
        description: "The unique id for the template."
        required: true
        type: "string"
        x-title: "Template ID"
        x-exportParamName: "TemplateId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Template Instance_2"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Template Instance"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "update_template"
        methodNameCamel: "updateTemplate"
  /templates/{template_id}/default-content:
    get:
      tags:
      - "templates"
      summary: "View default content"
      description: "Get the sections that you can edit in a template, including each\
        \ section's default content."
      operationId: "getTemplatesIdDefaultContent"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "template_id"
        in: "path"
        description: "The unique id for the template."
        required: true
        type: "string"
        x-title: "Template ID"
        x-exportParamName: "TemplateId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Template Default Content"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_default_content_for_template"
        methodNameCamel: "getDefaultContentForTemplate"
  /ecommerce/orders:
    get:
      tags:
      - "ecommerce"
      summary: "List account orders"
      description: "Get information about an account's orders."
      operationId: "getEcommerceOrders"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "campaign_id"
        in: "query"
        description: "Restrict results to orders with a specific `campaign_id` value."
        required: false
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
        x-optionalDataType: "String"
      - name: "outreach_id"
        in: "query"
        description: "Restrict results to orders with a specific `outreach_id` value."
        required: false
        type: "string"
        x-title: "Outreach ID"
        x-exportParamName: "OutreachId"
        x-optionalDataType: "String"
      - name: "customer_id"
        in: "query"
        description: "Restrict results to orders made by a specific customer."
        required: false
        type: "string"
        x-title: "Customer ID"
        x-exportParamName: "CustomerId"
        x-optionalDataType: "String"
      - name: "has_outreach"
        in: "query"
        description: "Restrict results to orders that have an outreach attached. For\
          \ example, an email campaign or Facebook ad."
        required: false
        type: "boolean"
        x-title: "Has Outreach"
        x-exportParamName: "HasOutreach"
        x-optionalDataType: "Bool"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Orders"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "orders"
        methodNameCamel: "orders"
  /ecommerce/stores:
    get:
      tags:
      - "ecommerce"
      summary: "List stores"
      description: "Get information about all stores in the account."
      operationId: "getEcommerceStores"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Ecommerce Stores"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "stores"
        methodNameCamel: "stores"
    post:
      tags:
      - "ecommerce"
      summary: "Add store"
      description: "Add a new store to your Mailchimp account."
      operationId: "postEcommerceStores"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Ecommerce Store_1"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Ecommerce Store"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "add_store"
        methodNameCamel: "addStore"
  /ecommerce/stores/{store_id}:
    get:
      tags:
      - "ecommerce"
      summary: "Get store info"
      description: "Get information about a specific store."
      operationId: "getEcommerceStoresId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Ecommerce Store"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_store"
        methodNameCamel: "getStore"
    delete:
      tags:
      - "ecommerce"
      summary: "Delete store"
      description: "Delete a store. Deleting a store will also delete any associated\
        \ subresources, including Customers, Orders, Products, and Carts."
      operationId: "deleteEcommerceStoresId"
      parameters:
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
          schema:
            description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "delete_store"
        methodNameCamel: "deleteStore"
    patch:
      tags:
      - "ecommerce"
      summary: "Update store"
      description: "Update a store."
      operationId: "patchEcommerceStoresId"
      parameters:
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Ecommerce Store_2"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Ecommerce Store"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "update_store"
        methodNameCamel: "updateStore"
  /ecommerce/stores/{store_id}/carts:
    get:
      tags:
      - "ecommerce"
      summary: "List carts"
      description: "Get information about a store's carts."
      operationId: "getEcommerceStoresIdCarts"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Carts"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_store_carts"
        methodNameCamel: "getStoreCarts"
    post:
      tags:
      - "ecommerce"
      summary: "Add cart"
      description: "Add a new cart to a store."
      operationId: "postEcommerceStoresIdCarts"
      parameters:
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Ecommerce Cart_1"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Ecommerce Cart"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "add_store_cart"
        methodNameCamel: "addStoreCart"
  /ecommerce/stores/{store_id}/carts/{cart_id}:
    get:
      tags:
      - "ecommerce"
      summary: "Get cart info"
      description: "Get information about a specific cart."
      operationId: "getEcommerceStoresIdCartsId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "cart_id"
        in: "path"
        description: "The id for the cart."
        required: true
        type: "string"
        x-title: "Cart ID"
        x-exportParamName: "CartId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Ecommerce Cart"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_store_cart"
        methodNameCamel: "getStoreCart"
    delete:
      tags:
      - "ecommerce"
      summary: "Delete cart"
      description: "Delete a cart."
      operationId: "deleteEcommerceStoresIdCartsId"
      parameters:
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "cart_id"
        in: "path"
        description: "The id for the cart."
        required: true
        type: "string"
        x-title: "Cart ID"
        x-exportParamName: "CartId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "delete_store_cart"
        methodNameCamel: "deleteStoreCart"
    patch:
      tags:
      - "ecommerce"
      summary: "Update cart"
      description: "Update a specific cart."
      operationId: "patchEcommerceStoresIdCartsId"
      parameters:
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "cart_id"
        in: "path"
        description: "The id for the cart."
        required: true
        type: "string"
        x-title: "Cart ID"
        x-exportParamName: "CartId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Ecommerce Cart_2"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Ecommerce Cart"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "update_store_cart"
        methodNameCamel: "updateStoreCart"
  /ecommerce/stores/{store_id}/carts/{cart_id}/lines:
    get:
      tags:
      - "ecommerce"
      summary: "List cart line items"
      description: "Get information about a cart's line items."
      operationId: "getEcommerceStoresIdCartsIdLines"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "cart_id"
        in: "path"
        description: "The id for the cart."
        required: true
        type: "string"
        x-title: "Cart ID"
        x-exportParamName: "CartId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Cart Lines"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_all_cart_line_items"
        methodNameCamel: "getAllCartLineItems"
    post:
      tags:
      - "ecommerce"
      summary: "Add cart line item"
      description: "Add a new line item to an existing cart."
      operationId: "postEcommerceStoresIdCartsIdLines"
      parameters:
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "cart_id"
        in: "path"
        description: "The id for the cart."
        required: true
        type: "string"
        x-title: "Cart ID"
        x-exportParamName: "CartId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Ecommerce Cart Line Item_3"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Ecommerce Cart Line Item"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "add_cart_line_item"
        methodNameCamel: "addCartLineItem"
  /ecommerce/stores/{store_id}/carts/{cart_id}/lines/{line_id}:
    get:
      tags:
      - "ecommerce"
      summary: "Get cart line item"
      description: "Get information about a specific cart line item."
      operationId: "getEcommerceStoresIdCartsIdLinesId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "cart_id"
        in: "path"
        description: "The id for the cart."
        required: true
        type: "string"
        x-title: "Cart ID"
        x-exportParamName: "CartId"
      - name: "line_id"
        in: "path"
        description: "The id for the line item of a cart."
        required: true
        type: "string"
        x-title: "Cart Line ID"
        x-exportParamName: "LineId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Ecommerce Cart Line Item"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_cart_line_item"
        methodNameCamel: "getCartLineItem"
    delete:
      tags:
      - "ecommerce"
      summary: "Delete cart line item"
      description: "Delete a specific cart line item."
      operationId: "deleteEcommerceStoresIdCartsLinesId"
      parameters:
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "cart_id"
        in: "path"
        description: "The id for the cart."
        required: true
        type: "string"
        x-title: "Cart ID"
        x-exportParamName: "CartId"
      - name: "line_id"
        in: "path"
        description: "The id for the line item of a cart."
        required: true
        type: "string"
        x-title: "Cart Line ID"
        x-exportParamName: "LineId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "delete_cart_line_item"
        methodNameCamel: "deleteCartLineItem"
    patch:
      tags:
      - "ecommerce"
      summary: "Update cart line item"
      description: "Update a specific cart line item."
      operationId: "patchEcommerceStoresIdCartsIdLinesId"
      parameters:
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "cart_id"
        in: "path"
        description: "The id for the cart."
        required: true
        type: "string"
        x-title: "Cart ID"
        x-exportParamName: "CartId"
      - name: "line_id"
        in: "path"
        description: "The id for the line item of a cart."
        required: true
        type: "string"
        x-title: "Cart Line ID"
        x-exportParamName: "LineId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Ecommerce Cart Line Item_4"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Ecommerce Cart Line Item"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "update_cart_line_item"
        methodNameCamel: "updateCartLineItem"
  /ecommerce/stores/{store_id}/customers:
    get:
      tags:
      - "ecommerce"
      summary: "List customers"
      description: "Get information about a store's customers."
      operationId: "getEcommerceStoresIdCustomers"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "email_address"
        in: "query"
        description: "Restrict the response to customers with the email address."
        required: false
        type: "string"
        x-title: "Customer Email Address"
        x-exportParamName: "EmailAddress"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Customers"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_all_store_customers"
        methodNameCamel: "getAllStoreCustomers"
    post:
      tags:
      - "ecommerce"
      summary: "Add customer"
      description: "Add a new customer to a store."
      operationId: "postEcommerceStoresIdCustomers"
      parameters:
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Ecommerce Customer_3"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Ecommerce Customer"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "add_store_customer"
        methodNameCamel: "addStoreCustomer"
  /ecommerce/stores/{store_id}/customers/{customer_id}:
    get:
      tags:
      - "ecommerce"
      summary: "Get customer info"
      description: "Get information about a specific customer."
      operationId: "getEcommerceStoresIdCustomersId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "customer_id"
        in: "path"
        description: "The id for the customer of a store."
        required: true
        type: "string"
        x-title: "Customer ID"
        x-exportParamName: "CustomerId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Ecommerce Customer"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_store_customer"
        methodNameCamel: "getStoreCustomer"
    put:
      tags:
      - "ecommerce"
      summary: "Add or update customer"
      description: "Add or update a customer."
      operationId: "putEcommerceStoresIdCustomersId"
      parameters:
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "customer_id"
        in: "path"
        description: "The id for the customer of a store."
        required: true
        type: "string"
        x-title: "Customer ID"
        x-exportParamName: "CustomerId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Ecommerce Customer_4"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Ecommerce Customer"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "set_store_customer"
        methodNameCamel: "setStoreCustomer"
    delete:
      tags:
      - "ecommerce"
      summary: "Delete customer"
      description: "Delete a customer from a store."
      operationId: "deleteEcommerceStoresIdCustomersId"
      parameters:
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "customer_id"
        in: "path"
        description: "The id for the customer of a store."
        required: true
        type: "string"
        x-title: "Customer ID"
        x-exportParamName: "CustomerId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "delete_store_customer"
        methodNameCamel: "deleteStoreCustomer"
    patch:
      tags:
      - "ecommerce"
      summary: "Update customer"
      description: "Update a customer."
      operationId: "patchEcommerceStoresIdCustomersId"
      parameters:
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "customer_id"
        in: "path"
        description: "The id for the customer of a store."
        required: true
        type: "string"
        x-title: "Customer ID"
        x-exportParamName: "CustomerId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Ecommerce Customer_5"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Ecommerce Customer"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "update_store_customer"
        methodNameCamel: "updateStoreCustomer"
  /ecommerce/stores/{store_id}/promo-rules:
    get:
      tags:
      - "ecommerce"
      summary: "List promo rules"
      description: "Get information about a store's promo rules."
      operationId: "getEcommerceStoresIdPromorules"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Promo Rules"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "list_promo_rules"
        methodNameCamel: "listPromoRules"
    post:
      tags:
      - "ecommerce"
      summary: "Add promo rule"
      description: "Add a new promo rule to a store."
      operationId: "postEcommerceStoresIdPromorules"
      parameters:
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Ecommerce Promo Rule_1"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Ecommerce Promo Rule"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "add_promo_rules"
        methodNameCamel: "addPromoRules"
  /ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}:
    get:
      tags:
      - "ecommerce"
      summary: "Get promo rule"
      description: "Get information about a specific promo rule."
      operationId: "getEcommerceStoresIdPromorulesId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "promo_rule_id"
        in: "path"
        description: "The id for the promo rule of a store."
        required: true
        type: "string"
        x-title: "Promo Rule ID"
        x-exportParamName: "PromoRuleId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Ecommerce Promo Rule"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_promo_rule"
        methodNameCamel: "getPromoRule"
    delete:
      tags:
      - "ecommerce"
      summary: "Delete promo rule"
      description: "Delete a promo rule from a store."
      operationId: "deleteEcommerceStoresIdPromorulesId"
      parameters:
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "promo_rule_id"
        in: "path"
        description: "The id for the promo rule of a store."
        required: true
        type: "string"
        x-title: "Promo Rule ID"
        x-exportParamName: "PromoRuleId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "delete_promo_rule"
        methodNameCamel: "deletePromoRule"
    patch:
      tags:
      - "ecommerce"
      summary: "Update promo rule"
      description: "Update a promo rule."
      operationId: "patchEcommerceStoresIdPromorulesId"
      parameters:
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "promo_rule_id"
        in: "path"
        description: "The id for the promo rule of a store."
        required: true
        type: "string"
        x-title: "Promo Rule ID"
        x-exportParamName: "PromoRuleId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Ecommerce Promo Rule_2"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Ecommerce Promo Rule"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "update_promo_rule"
        methodNameCamel: "updatePromoRule"
  /ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}/promo-codes:
    get:
      tags:
      - "ecommerce"
      summary: "List promo codes"
      description: "Get information about a store's promo codes."
      operationId: "getEcommerceStoresIdPromocodes"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "promo_rule_id"
        in: "path"
        description: "The id for the promo rule of a store."
        required: true
        type: "string"
        x-title: "Promo Rule ID"
        x-exportParamName: "PromoRuleId"
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Promo Codes"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_promo_codes"
        methodNameCamel: "getPromoCodes"
    post:
      tags:
      - "ecommerce"
      summary: "Add promo code"
      description: "Add a new promo code to a store."
      operationId: "postEcommerceStoresIdPromocodes"
      parameters:
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "promo_rule_id"
        in: "path"
        description: "The id for the promo rule of a store."
        required: true
        type: "string"
        x-title: "Promo Rule ID"
        x-exportParamName: "PromoRuleId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Ecommerce Promo Code_1"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Ecommerce Promo Code"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "add_promo_code"
        methodNameCamel: "addPromoCode"
  /ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}/promo-codes/{promo_code_id}:
    get:
      tags:
      - "ecommerce"
      summary: "Get promo code"
      description: "Get information about a specific promo code."
      operationId: "getEcommerceStoresIdPromocodesId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "promo_rule_id"
        in: "path"
        description: "The id for the promo rule of a store."
        required: true
        type: "string"
        x-title: "Promo Rule ID"
        x-exportParamName: "PromoRuleId"
      - name: "promo_code_id"
        in: "path"
        description: "The id for the promo code of a store."
        required: true
        type: "string"
        x-title: "Promo Code ID"
        x-exportParamName: "PromoCodeId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Ecommerce Promo Code"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_promo_code"
        methodNameCamel: "getPromoCode"
    delete:
      tags:
      - "ecommerce"
      summary: "Delete promo code"
      description: "Delete a promo code from a store."
      operationId: "deleteEcommerceStoresIdPromocodesId"
      parameters:
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "promo_rule_id"
        in: "path"
        description: "The id for the promo rule of a store."
        required: true
        type: "string"
        x-title: "Promo Rule ID"
        x-exportParamName: "PromoRuleId"
      - name: "promo_code_id"
        in: "path"
        description: "The id for the promo code of a store."
        required: true
        type: "string"
        x-title: "Promo Code ID"
        x-exportParamName: "PromoCodeId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "delete_promo_code"
        methodNameCamel: "deletePromoCode"
    patch:
      tags:
      - "ecommerce"
      summary: "Update promo code"
      description: "Update a promo code."
      operationId: "patchEcommerceStoresIdPromocodesId"
      parameters:
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "promo_rule_id"
        in: "path"
        description: "The id for the promo rule of a store."
        required: true
        type: "string"
        x-title: "Promo Rule ID"
        x-exportParamName: "PromoRuleId"
      - name: "promo_code_id"
        in: "path"
        description: "The id for the promo code of a store."
        required: true
        type: "string"
        x-title: "Promo Code ID"
        x-exportParamName: "PromoCodeId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Ecommerce Promo Code_2"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Ecommerce Promo Code"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "update_promo_code"
        methodNameCamel: "updatePromoCode"
  /ecommerce/stores/{store_id}/orders:
    get:
      tags:
      - "ecommerce"
      summary: "List orders"
      description: "Get information about a store's orders."
      operationId: "getEcommerceStoresIdOrders"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "customer_id"
        in: "query"
        description: "Restrict results to orders made by a specific customer."
        required: false
        type: "string"
        x-title: "Customer ID"
        x-exportParamName: "CustomerId"
        x-optionalDataType: "String"
      - name: "has_outreach"
        in: "query"
        description: "Restrict results to orders that have an outreach attached. For\
          \ example, an email campaign or Facebook ad."
        required: false
        type: "boolean"
        x-title: "Has Outreach"
        x-exportParamName: "HasOutreach"
        x-optionalDataType: "Bool"
      - name: "campaign_id"
        in: "query"
        description: "Restrict results to orders with a specific `campaign_id` value."
        required: false
        type: "string"
        x-title: "Campaign ID"
        x-exportParamName: "CampaignId"
        x-optionalDataType: "String"
      - name: "outreach_id"
        in: "query"
        description: "Restrict results to orders with a specific `outreach_id` value."
        required: false
        type: "string"
        x-title: "Outreach ID"
        x-exportParamName: "OutreachId"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Orders_1"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_store_orders"
        methodNameCamel: "getStoreOrders"
    post:
      tags:
      - "ecommerce"
      summary: "Add order"
      description: "Add a new order to a store."
      operationId: "postEcommerceStoresIdOrders"
      parameters:
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Ecommerce Order_1"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Ecommerce Order"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "add_store_order"
        methodNameCamel: "addStoreOrder"
  /ecommerce/stores/{store_id}/orders/{order_id}:
    get:
      tags:
      - "ecommerce"
      summary: "Get order info"
      description: "Get information about a specific order."
      operationId: "getEcommerceStoresIdOrdersId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "order_id"
        in: "path"
        description: "The id for the order in a store."
        required: true
        type: "string"
        x-title: "Order ID"
        x-exportParamName: "OrderId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Ecommerce Order"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_order"
        methodNameCamel: "getOrder"
    delete:
      tags:
      - "ecommerce"
      summary: "Delete order"
      description: "Delete an order."
      operationId: "deleteEcommerceStoresIdOrdersId"
      parameters:
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "order_id"
        in: "path"
        description: "The id for the order in a store."
        required: true
        type: "string"
        x-title: "Order ID"
        x-exportParamName: "OrderId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "delete_order"
        methodNameCamel: "deleteOrder"
    patch:
      tags:
      - "ecommerce"
      summary: "Update order"
      description: "Update a specific order."
      operationId: "patchEcommerceStoresIdOrdersId"
      parameters:
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "order_id"
        in: "path"
        description: "The id for the order in a store."
        required: true
        type: "string"
        x-title: "Order ID"
        x-exportParamName: "OrderId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Ecommerce Order_2"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Ecommerce Order"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "update_order"
        methodNameCamel: "updateOrder"
  /ecommerce/stores/{store_id}/orders/{order_id}/lines:
    get:
      tags:
      - "ecommerce"
      summary: "List order line items"
      description: "Get information about an order's line items."
      operationId: "getEcommerceStoresIdOrdersIdLines"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "order_id"
        in: "path"
        description: "The id for the order in a store."
        required: true
        type: "string"
        x-title: "Order ID"
        x-exportParamName: "OrderId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Order Lines"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_all_order_line_items"
        methodNameCamel: "getAllOrderLineItems"
    post:
      tags:
      - "ecommerce"
      summary: "Add order line item"
      description: "Add a new line item to an existing order."
      operationId: "postEcommerceStoresIdOrdersIdLines"
      parameters:
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "order_id"
        in: "path"
        description: "The id for the order in a store."
        required: true
        type: "string"
        x-title: "Order ID"
        x-exportParamName: "OrderId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Ecommerce Order Line Item_3"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Ecommerce Order Line Item"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "add_order_line_item"
        methodNameCamel: "addOrderLineItem"
  /ecommerce/stores/{store_id}/orders/{order_id}/lines/{line_id}:
    get:
      tags:
      - "ecommerce"
      summary: "Get order line item"
      description: "Get information about a specific order line item."
      operationId: "getEcommerceStoresIdOrdersIdLinesId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "order_id"
        in: "path"
        description: "The id for the order in a store."
        required: true
        type: "string"
        x-title: "Order ID"
        x-exportParamName: "OrderId"
      - name: "line_id"
        in: "path"
        description: "The id for the line item of an order."
        required: true
        type: "string"
        x-title: "Order Line ID"
        x-exportParamName: "LineId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Ecommerce Order Line Item"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_order_line_item"
        methodNameCamel: "getOrderLineItem"
    delete:
      tags:
      - "ecommerce"
      summary: "Delete order line item"
      description: "Delete a specific order line item."
      operationId: "deleteEcommerceStoresIdOrdersIdLinesId"
      parameters:
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "order_id"
        in: "path"
        description: "The id for the order in a store."
        required: true
        type: "string"
        x-title: "Order ID"
        x-exportParamName: "OrderId"
      - name: "line_id"
        in: "path"
        description: "The id for the line item of an order."
        required: true
        type: "string"
        x-title: "Order Line ID"
        x-exportParamName: "LineId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "delete_order_line_item"
        methodNameCamel: "deleteOrderLineItem"
    patch:
      tags:
      - "ecommerce"
      summary: "Update order line item"
      description: "Update a specific order line item."
      operationId: "patchEcommerceStoresIdOrdersIdLinesId"
      parameters:
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "order_id"
        in: "path"
        description: "The id for the order in a store."
        required: true
        type: "string"
        x-title: "Order ID"
        x-exportParamName: "OrderId"
      - name: "line_id"
        in: "path"
        description: "The id for the line item of an order."
        required: true
        type: "string"
        x-title: "Order Line ID"
        x-exportParamName: "LineId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Ecommerce Order Line Item_4"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Ecommerce Order Line Item"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "update_order_line_item"
        methodNameCamel: "updateOrderLineItem"
  /ecommerce/stores/{store_id}/products:
    get:
      tags:
      - "ecommerce"
      summary: "List product"
      description: "Get information about a store's products."
      operationId: "getEcommerceStoresIdProducts"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Products"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_all_store_products"
        methodNameCamel: "getAllStoreProducts"
    post:
      tags:
      - "ecommerce"
      summary: "Add product"
      description: "Add a new product to a store."
      operationId: "postEcommerceStoresIdProducts"
      parameters:
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Ecommerce Product_1"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Ecommerce Product"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "add_store_product"
        methodNameCamel: "addStoreProduct"
  /ecommerce/stores/{store_id}/products/{product_id}:
    get:
      tags:
      - "ecommerce"
      summary: "Get product info"
      description: "Get information about a specific product."
      operationId: "getEcommerceStoresIdProductsId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "product_id"
        in: "path"
        description: "The id for the product of a store."
        required: true
        type: "string"
        x-title: "Product ID"
        x-exportParamName: "ProductId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Ecommerce Product"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_store_product"
        methodNameCamel: "getStoreProduct"
    delete:
      tags:
      - "ecommerce"
      summary: "Delete product"
      description: "Delete a product."
      operationId: "deleteEcommerceStoresIdProductsId"
      parameters:
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "product_id"
        in: "path"
        description: "The id for the product of a store."
        required: true
        type: "string"
        x-title: "Product ID"
        x-exportParamName: "ProductId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "delete_store_product"
        methodNameCamel: "deleteStoreProduct"
    patch:
      tags:
      - "ecommerce"
      summary: "Update product"
      description: "Update a specific product."
      operationId: "patchEcommerceStoresIdProductsId"
      parameters:
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "product_id"
        in: "path"
        description: "The id for the product of a store."
        required: true
        type: "string"
        x-title: "Product ID"
        x-exportParamName: "ProductId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Ecommerce Product_2"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Ecommerce Product"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "update_store_product"
        methodNameCamel: "updateStoreProduct"
  /ecommerce/stores/{store_id}/products/{product_id}/variants:
    get:
      tags:
      - "ecommerce"
      summary: "List product variants"
      description: "Get information about a product's variants."
      operationId: "getEcommerceStoresIdProductsIdVariants"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "product_id"
        in: "path"
        description: "The id for the product of a store."
        required: true
        type: "string"
        x-title: "Product ID"
        x-exportParamName: "ProductId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Ecommerce Product Variants"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_product_variants"
        methodNameCamel: "getProductVariants"
    post:
      tags:
      - "ecommerce"
      summary: "Add product variant"
      description: "Add a new variant to the product."
      operationId: "postEcommerceStoresIdProductsIdVariants"
      parameters:
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "product_id"
        in: "path"
        description: "The id for the product of a store."
        required: true
        type: "string"
        x-title: "Product ID"
        x-exportParamName: "ProductId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Ecommerce Product Variant_3"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Ecommerce Product Variant"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "add_product_variants"
        methodNameCamel: "addProductVariants"
  /ecommerce/stores/{store_id}/products/{product_id}/variants/{variant_id}:
    get:
      tags:
      - "ecommerce"
      summary: "Get product variant info"
      description: "Get information about a specific product variant."
      operationId: "getEcommerceStoresIdProductsIdVariantsId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "product_id"
        in: "path"
        description: "The id for the product of a store."
        required: true
        type: "string"
        x-title: "Product ID"
        x-exportParamName: "ProductId"
      - name: "variant_id"
        in: "path"
        description: "The id for the product variant."
        required: true
        type: "string"
        x-title: "Product Variant ID"
        x-exportParamName: "VariantId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Ecommerce Product Variant"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_product_variant"
        methodNameCamel: "getProductVariant"
    put:
      tags:
      - "ecommerce"
      summary: "Add or update product variant"
      description: "Add or update a product variant."
      operationId: "putEcommerceStoresIdProductsIdVariantsId"
      parameters:
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "product_id"
        in: "path"
        description: "The id for the product of a store."
        required: true
        type: "string"
        x-title: "Product ID"
        x-exportParamName: "ProductId"
      - name: "variant_id"
        in: "path"
        description: "The id for the product variant."
        required: true
        type: "string"
        x-title: "Product Variant ID"
        x-exportParamName: "VariantId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Ecommerce Product Variant_4"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Ecommerce Product Variant"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "add_product_variant"
        methodNameCamel: "addProductVariant"
    delete:
      tags:
      - "ecommerce"
      summary: "Delete product variant"
      description: "Delete a product variant."
      operationId: "deleteEcommerceStoresIdProductsIdVariantsId"
      parameters:
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "product_id"
        in: "path"
        description: "The id for the product of a store."
        required: true
        type: "string"
        x-title: "Product ID"
        x-exportParamName: "ProductId"
      - name: "variant_id"
        in: "path"
        description: "The id for the product variant."
        required: true
        type: "string"
        x-title: "Product Variant ID"
        x-exportParamName: "VariantId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "delete_product_variant"
        methodNameCamel: "deleteProductVariant"
    patch:
      tags:
      - "ecommerce"
      summary: "Update product variant"
      description: "Update a product variant."
      operationId: "patchEcommerceStoresIdProductsIdVariantsId"
      parameters:
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "product_id"
        in: "path"
        description: "The id for the product of a store."
        required: true
        type: "string"
        x-title: "Product ID"
        x-exportParamName: "ProductId"
      - name: "variant_id"
        in: "path"
        description: "The id for the product variant."
        required: true
        type: "string"
        x-title: "Product Variant ID"
        x-exportParamName: "VariantId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Ecommerce Product Variant_5"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Ecommerce Product Variant"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "update_product_variant"
        methodNameCamel: "updateProductVariant"
  /ecommerce/stores/{store_id}/products/{product_id}/images:
    get:
      tags:
      - "ecommerce"
      summary: "List product images"
      description: "Get information about a product's images."
      operationId: "getEcommerceStoresIdProductsIdImages"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "product_id"
        in: "path"
        description: "The id for the product of a store."
        required: true
        type: "string"
        x-title: "Product ID"
        x-exportParamName: "ProductId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Ecommerce Product Images"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_product_images"
        methodNameCamel: "getProductImages"
    post:
      tags:
      - "ecommerce"
      summary: "Add product image"
      description: "Add a new image to the product."
      operationId: "postEcommerceStoresIdProductsIdImages"
      parameters:
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "product_id"
        in: "path"
        description: "The id for the product of a store."
        required: true
        type: "string"
        x-title: "Product ID"
        x-exportParamName: "ProductId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Ecommerce Product Image_3"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Ecommerce Product Image"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "add_product_image"
        methodNameCamel: "addProductImage"
  /ecommerce/stores/{store_id}/products/{product_id}/images/{image_id}:
    get:
      tags:
      - "ecommerce"
      summary: "Get product image info"
      description: "Get information about a specific product image."
      operationId: "getEcommerceStoresIdProductsIdImagesId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "product_id"
        in: "path"
        description: "The id for the product of a store."
        required: true
        type: "string"
        x-title: "Product ID"
        x-exportParamName: "ProductId"
      - name: "image_id"
        in: "path"
        description: "The id for the product image."
        required: true
        type: "string"
        x-title: "Product Image ID"
        x-exportParamName: "ImageId"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Ecommerce Product Image"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_product_image"
        methodNameCamel: "getProductImage"
    delete:
      tags:
      - "ecommerce"
      summary: "Delete product image"
      description: "Delete a product image."
      operationId: "deleteEcommerceStoresIdProductsIdImagesId"
      parameters:
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "product_id"
        in: "path"
        description: "The id for the product of a store."
        required: true
        type: "string"
        x-title: "Product ID"
        x-exportParamName: "ProductId"
      - name: "image_id"
        in: "path"
        description: "The id for the product image."
        required: true
        type: "string"
        x-title: "Product Image ID"
        x-exportParamName: "ImageId"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "delete_product_image"
        methodNameCamel: "deleteProductImage"
    patch:
      tags:
      - "ecommerce"
      summary: "Update product image"
      description: "Update a product image."
      operationId: "patchEcommerceStoresIdProductsIdImagesId"
      parameters:
      - name: "store_id"
        in: "path"
        description: "The store id."
        required: true
        type: "string"
        x-title: "Store ID"
        x-exportParamName: "StoreId"
      - name: "product_id"
        in: "path"
        description: "The id for the product of a store."
        required: true
        type: "string"
        x-title: "Product ID"
        x-exportParamName: "ProductId"
      - name: "image_id"
        in: "path"
        description: "The id for the product image."
        required: true
        type: "string"
        x-title: "Product Image ID"
        x-exportParamName: "ImageId"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Ecommerce Product Image_4"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Ecommerce Product Image"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "update_product_image"
        methodNameCamel: "updateProductImage"
  /search-campaigns:
    get:
      tags:
      - "searchCampaigns"
      summary: "Search campaigns"
      description: "Search all campaigns for the specified query terms."
      operationId: "getSearchCampaigns"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "query"
        in: "query"
        description: "The search query used to filter results."
        required: true
        type: "string"
        x-title: "Query"
        x-exportParamName: "Query"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Campaigns"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "search"
        methodNameCamel: "search"
  /search-members:
    get:
      tags:
      - "searchMembers"
      summary: "Search members"
      description: "Search for list members. This search can be restricted to a specific\
        \ list, or can be used to search across all lists in an account."
      operationId: "getSearchMembers"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "query"
        in: "query"
        description: "The search query used to filter results. Query should be a valid\
          \ email, or a string representing a contact's first or last name."
        required: true
        type: "string"
        x-title: "Query"
        x-exportParamName: "Query"
      - name: "list_id"
        in: "query"
        description: "The unique id for the list."
        required: false
        type: "string"
        x-title: "List ID"
        x-exportParamName: "ListId"
        x-optionalDataType: "String"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Members"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "search"
        methodNameCamel: "search"
  /ping:
    get:
      tags:
      - "ping"
      summary: "Ping"
      description: "A health check for the API that won't return any account-specific\
        \ information."
      operationId: "getPing"
      parameters: []
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/API health status"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get"
        methodNameCamel: "get"
  /facebook-ads:
    get:
      tags:
      - "facebookAds"
      summary: "List facebook ads"
      description: "Get list of Facebook ads."
      operationId: "getAllFacebookAds"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "sort_field"
        in: "query"
        description: "Returns files sorted by the specified field."
        required: false
        type: "string"
        enum:
        - "created_at"
        - "updated_at"
        - "end_time"
        x-title: "Sort By Field"
        x-exportParamName: "SortField"
        x-optionalDataType: "String"
      - name: "sort_dir"
        in: "query"
        description: "Determines the order direction for sorted results."
        required: false
        type: "string"
        enum:
        - "ASC"
        - "DESC"
        x-title: "Sort Direction"
        x-exportParamName: "SortDir"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "List of Facebook Ad Instances"
          schema:
            $ref: "#/definitions/inline_response_200_8"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "list"
        methodNameCamel: "list"
  /facebook-ads/{outreach_id}:
    get:
      tags:
      - "facebookAds"
      summary: "Get facebook ad info"
      description: "Get details of a Facebook ad."
      operationId: "getFacebookAdsId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "outreach_id"
        in: "path"
        description: "The outreach id."
        required: true
        type: "string"
        x-title: "Outreach ID"
        x-exportParamName: "OutreachId"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      responses:
        "200":
          description: "Facebook Ad Instance"
          schema:
            $ref: "#/definitions/inline_response_200_9"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_ad"
        methodNameCamel: "getAd"
  /reporting/facebook-ads:
    get:
      tags:
      - "reporting"
      summary: "List facebook ads reports"
      description: "Get reports of Facebook ads."
      operationId: "getReportingFacebookAds"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "sort_field"
        in: "query"
        description: "Returns files sorted by the specified field."
        required: false
        type: "string"
        enum:
        - "created_at"
        - "updated_at"
        - "end_time"
        x-title: "Sort By Field"
        x-exportParamName: "SortField"
        x-optionalDataType: "String"
      - name: "sort_dir"
        in: "query"
        description: "Determines the order direction for sorted results."
        required: false
        type: "string"
        enum:
        - "ASC"
        - "DESC"
        x-title: "Sort Direction"
        x-exportParamName: "SortDir"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "List of Facebook Ad Report Instances"
          schema:
            $ref: "#/definitions/inline_response_200_10"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_facebook_ads_report_all"
        methodNameCamel: "getFacebookAdsReportAll"
  /reporting/facebook-ads/{outreach_id}:
    get:
      tags:
      - "reporting"
      summary: "Get facebook ad report"
      description: "Get report of a Facebook ad."
      operationId: "getReportingFacebookAdsId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "outreach_id"
        in: "path"
        description: "The outreach id."
        required: true
        type: "string"
        x-title: "Outreach ID"
        x-exportParamName: "OutreachId"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      responses:
        "200":
          description: "Facebook Ad report Instance"
          schema:
            $ref: "#/definitions/inline_response_200_11"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_facebook_ad_report"
        methodNameCamel: "getFacebookAdReport"
  /reporting/facebook-ads/{outreach_id}/ecommerce-product-activity:
    get:
      tags:
      - "reporting"
      summary: "List facebook ecommerce report"
      description: "Get breakdown of product activity for an outreach."
      operationId: "getReportingFacebookAdsIdEcommerceProductActivity"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      - name: "outreach_id"
        in: "path"
        description: "The outreach id."
        required: true
        type: "string"
        x-title: "Outreach ID"
        x-exportParamName: "OutreachId"
      - name: "sort_field"
        in: "query"
        description: "Returns files sorted by the specified field."
        required: false
        type: "string"
        enum:
        - "title"
        - "total_revenue"
        - "total_purchased"
        x-title: "Sort By Field"
        x-exportParamName: "SortField"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Ecommerce Product Activity Instance"
          schema:
            $ref: "#/definitions/inline_response_200_7"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_facebook_ad_product_activity_report"
        methodNameCamel: "getFacebookAdProductActivityReport"
  /reporting/landing-pages/{outreach_id}:
    get:
      tags:
      - "reporting"
      summary: "Get landing page report"
      description: "Get report of a landing page."
      operationId: "getReportingLandingPagesId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "outreach_id"
        in: "path"
        description: "The outreach id."
        required: true
        type: "string"
        x-title: "Outreach ID"
        x-exportParamName: "OutreachId"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      responses:
        "200":
          description: "Landing Page Report Instance"
          schema:
            $ref: "#/definitions/Landing Page Report"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_landing_page_report"
        methodNameCamel: "getLandingPageReport"
  /reporting/landing-pages:
    get:
      tags:
      - "reporting"
      summary: "List landing pages reports"
      description: "Get reports of landing pages."
      operationId: "getReportingLandingPages"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "List of Landing Page Report Instances"
          schema:
            $ref: "#/definitions/inline_response_200_12"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_landing_page_reports_all"
        methodNameCamel: "getLandingPageReportsAll"
  /reporting/surveys:
    get:
      tags:
      - "reporting"
      summary: "List survey reports"
      description: "Get reports for surveys."
      operationId: "getReportingSurveys"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "count"
        in: "query"
        description: "The number of records to return. Default value is 10. Maximum\
          \ value is 1000"
        required: false
        type: "integer"
        default: 10
        maximum: 1000
        x-title: "Count"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      - name: "offset"
        in: "query"
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        type: "integer"
        default: 0
        x-title: "Offset"
        x-exportParamName: "Offset"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "List of Survey Report Instances"
          schema:
            $ref: "#/definitions/inline_response_200_13"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_survey_reports_all"
        methodNameCamel: "getSurveyReportsAll"
  /reporting/surveys/{outreach_id}:
    get:
      tags:
      - "reporting"
      summary: "Get survey report"
      description: "Get report for a survey."
      operationId: "getReportingSurveysId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "outreach_id"
        in: "path"
        description: "The outreach id."
        required: true
        type: "string"
        x-title: "Outreach ID"
        x-exportParamName: "OutreachId"
      responses:
        "200":
          description: "Survey Report Instance"
          schema:
            $ref: "#/definitions/Survey Report"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_survey_report"
        methodNameCamel: "getSurveyReport"
  /reporting/surveys/{outreach_id}/questions:
    get:
      tags:
      - "reporting"
      summary: "List survey question reports"
      description: "Get reports for survey questions."
      operationId: "getReportingSurveysIdQuestions"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "outreach_id"
        in: "path"
        description: "The outreach id."
        required: true
        type: "string"
        x-title: "Outreach ID"
        x-exportParamName: "OutreachId"
      responses:
        "200":
          description: "List of Survey Question Report Instances"
          schema:
            $ref: "#/definitions/inline_response_200_14"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_survey_question_reports_all"
        methodNameCamel: "getSurveyQuestionReportsAll"
  /reporting/surveys/{outreach_id}/questions/{question_id}:
    get:
      tags:
      - "reporting"
      summary: "Get survey question report"
      description: "Get report for a survey question."
      operationId: "getReportingSurveysIdQuestionsId"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "outreach_id"
        in: "path"
        description: "The outreach id."
        required: true
        type: "string"
        x-title: "Outreach ID"
        x-exportParamName: "OutreachId"
      - name: "question_id"
        in: "path"
        description: "The ID of the survey question."
        required: true
        type: "string"
        x-title: "Question ID"
        x-exportParamName: "QuestionId"
      responses:
        "200":
          description: "Survey Question Report Instance"
          schema:
            $ref: "#/definitions/Survey Question Report"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_survey_question_report"
        methodNameCamel: "getSurveyQuestionReport"
  /reporting/surveys/{outreach_id}/questions/{question_id}/answers:
    get:
      tags:
      - "reporting"
      summary: "List answers for question"
      description: "Get answers for a survey question."
      operationId: "getReportingSurveysIdQuestionsIdAnswers"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "outreach_id"
        in: "path"
        description: "The outreach id."
        required: true
        type: "string"
        x-title: "Outreach ID"
        x-exportParamName: "OutreachId"
      - name: "question_id"
        in: "path"
        description: "The ID of the survey question."
        required: true
        type: "string"
        x-title: "Question ID"
        x-exportParamName: "QuestionId"
      - name: "respondent_familiarity_is"
        in: "query"
        description: "Filter survey responses by familiarity of the respondents."
        required: false
        type: "string"
        enum:
        - "new"
        - "known"
        - "unknown"
        x-title: "Respondent Familiarity Is"
        x-exportParamName: "RespondentFamiliarityIs"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "List of Survey Question Answers"
          schema:
            $ref: "#/definitions/inline_response_200_15"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_survey_question_answers"
        methodNameCamel: "getSurveyQuestionAnswers"
  /reporting/surveys/{outreach_id}/responses:
    get:
      tags:
      - "reporting"
      summary: "List survey responses"
      description: "Get responses to a survey."
      operationId: "getReportingSurveysIdResponses"
      parameters:
      - name: "fields"
        in: "query"
        description: "A comma-separated list of fields to return. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Fields"
        x-exportParamName: "Fields"
      - name: "exclude_fields"
        in: "query"
        description: "A comma-separated list of fields to exclude. Reference parameters\
          \ of sub-objects with dot notation."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
        x-title: "Exclude Fields"
        x-exportParamName: "ExcludeFields"
      - name: "outreach_id"
        in: "path"
        description: "The outreach id."
        required: true
        type: "string"
        x-title: "Outreach ID"
        x-exportParamName: "OutreachId"
      - name: "answered_question"
        in: "query"
        description: "The ID of the question that was answered."
        required: false
        type: "integer"
        x-title: "Answered Question"
        x-exportParamName: "AnsweredQuestion"
        x-optionalDataType: "Int32"
      - name: "chose_answer"
        in: "query"
        description: "The ID of the option chosen to filter responses on."
        required: false
        type: "string"
        x-title: "Chose Answer"
        x-exportParamName: "ChoseAnswer"
        x-optionalDataType: "String"
      - name: "respondent_familiarity_is"
        in: "query"
        description: "Filter survey responses by familiarity of the respondents."
        required: false
        type: "string"
        enum:
        - "new"
        - "known"
        - "unknown"
        x-title: "Respondent Familiarity Is"
        x-exportParamName: "RespondentFamiliarityIs"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "List of survey responses"
          schema:
            $ref: "#/definitions/inline_response_200_16"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_survey_responses_all"
        methodNameCamel: "getSurveyResponsesAll"
  /reporting/surveys/{outreach_id}/responses/{response_id}:
    get:
      tags:
      - "reporting"
      summary: "Get survey response"
      description: "Get a single survey response."
      operationId: "getReportingSurveysIdResponsesId"
      parameters:
      - name: "outreach_id"
        in: "path"
        description: "The outreach id."
        required: true
        type: "string"
        x-title: "Outreach ID"
        x-exportParamName: "OutreachId"
      - name: "response_id"
        in: "path"
        description: "The ID of the survey response."
        required: true
        type: "string"
        x-title: "Response ID"
        x-exportParamName: "ResponseId"
      responses:
        "200":
          description: "Get a single survey response."
          schema:
            $ref: "#/definitions/Survey Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_survey_response"
        methodNameCamel: "getSurveyResponse"
  /verified-domains/{domain_name}:
    get:
      tags:
      - "verifiedDomains"
      summary: "Get domain info"
      description: "Get the details for a single domain on the account."
      operationId: "getVerifiedDomain"
      parameters:
      - name: "domain_name"
        in: "path"
        description: "The domain name."
        required: true
        type: "string"
        x-title: "Domain Name"
        x-exportParamName: "DomainName"
      deprecated: false
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Verified Domains"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_domain"
        methodNameCamel: "getDomain"
    delete:
      tags:
      - "verifiedDomains"
      summary: "Delete domain"
      description: "Delete a verified domain from the account."
      operationId: "deleteVerifiedDomain"
      parameters:
      - name: "domain_name"
        in: "path"
        description: "The domain name."
        required: true
        type: "string"
        x-title: "Domain Name"
        x-exportParamName: "DomainName"
      deprecated: false
      responses:
        "204":
          description: "Empty Response"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "delete_domain"
        methodNameCamel: "deleteDomain"
  /verified-domains/{domain_name}/actions/verify:
    post:
      tags:
      - "verifiedDomains"
      summary: "Verify domain"
      description: "Verify a domain for sending."
      operationId: "verifyDomain"
      parameters:
      - name: "domain_name"
        in: "path"
        description: "The domain name."
        required: true
        type: "string"
        x-title: "Domain Name"
        x-exportParamName: "DomainName"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "Verify a domain for sending."
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: "The domain being verified for sending."
          schema:
            $ref: "#/definitions/Verified Domains"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "submit_domain_verification"
        methodNameCamel: "submitDomainVerification"
  /verified-domains:
    get:
      tags:
      - "verifiedDomains"
      summary: "List sending domains"
      description: "Get all of the sending domains on the account."
      operationId: "getVerifiedDomains"
      parameters: []
      deprecated: false
      responses:
        "200":
          description: "The domains on the account."
          schema:
            $ref: "#/definitions/Verified Domains_1"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "get_verified_domains_all"
        methodNameCamel: "getVerifiedDomainsAll"
    post:
      tags:
      - "verifiedDomains"
      summary: "Add domain to account"
      description: "Add a domain to the account."
      operationId: "createVerifiedDomain"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Verified Domains_2"
        x-exportParamName: "Body"
      deprecated: false
      responses:
        "200":
          description: "The newly-created domain."
          schema:
            $ref: "#/definitions/Verified Domains"
        default:
          description: "An error generated by the Mailchimp API."
          schema:
            $ref: "#/definitions/Problem Detail Document"
      x-custom-config:
        methodNameSnake: "create_verified_domain"
        methodNameCamel: "createVerifiedDomain"
securityDefinitions:
  basicAuth:
    type: "basic"
definitions:
  Account Contact:
    type: "object"
    properties:
      company:
        type: "string"
        description: "The company name for the account."
        title: "Company"
        readOnly: true
      addr1:
        type: "string"
        description: "The street address for the account contact."
        title: "Address Line 1"
        readOnly: true
      addr2:
        type: "string"
        description: "The street address for the account contact."
        title: "Address Line 2"
        readOnly: true
      city:
        type: "string"
        description: "The city for the account contact."
        title: "City"
        readOnly: true
      state:
        type: "string"
        description: "The state for the account contact."
        title: "State"
        readOnly: true
      zip:
        type: "string"
        description: "The zip code for the account contact."
        title: "Zip Code"
        readOnly: true
      country:
        type: "string"
        description: "The country for the account contact."
        title: "Country"
        readOnly: true
    description: "Information about the account contact."
    example:
      zip: "zip"
      country: "country"
      addr2: "addr2"
      addr1: "addr1"
      city: "city"
      company: "company"
      state: "state"
  Industry Stats:
    type: "object"
    properties:
      open_rate:
        type: "number"
        description: "The average unique open rate for all campaigns in the account's\
          \ specified industry."
        title: "Open Rate"
        readOnly: true
      bounce_rate:
        type: "number"
        description: "The average bounce rate for all campaigns in the account's specified\
          \ industry."
        title: "Bounce Rate"
        readOnly: true
      click_rate:
        type: "number"
        description: "The average unique click rate for all campaigns in the account's\
          \ specified industry."
        title: "Click Rate"
        readOnly: true
    description: "The [average campaign statistics](https://mailchimp.com/resources/research/email-marketing-benchmarks/?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)\
      \ for all campaigns in the account's specified industry."
    example:
      click_rate: 5.962133916683182377482808078639209270477294921875
      bounce_rate: 1.46581298050294517310021547018550336360931396484375
      open_rate: 6.02745618307040320615897144307382404804229736328125
  Resource Link:
    type: "object"
    properties:
      rel:
        type: "string"
        description: "As with an HTML 'rel' attribute, this describes the type of\
          \ link."
        title: "Rel"
        readOnly: true
      href:
        type: "string"
        description: "This property contains a fully-qualified URL that can be called\
          \ to retrieve the linked resource or perform the linked action."
        title: "Href"
        readOnly: true
      method:
        type: "string"
        description: "The HTTP method that should be used when accessing the URL defined\
          \ in 'href'."
        title: "Method"
        readOnly: true
        enum:
        - "GET"
        - "POST"
        - "PUT"
        - "PATCH"
        - "DELETE"
        - "OPTIONS"
        - "HEAD"
      targetSchema:
        type: "string"
        description: "For GETs, this is a URL representing the schema that the response\
          \ should conform to."
        title: "Target Schema"
        readOnly: true
      schema:
        type: "string"
        description: "For HTTP methods that can receive bodies (POST and PUT), this\
          \ is a URL representing the schema that the body should conform to."
        title: "Schema"
        readOnly: true
    description: "This object represents a link from the resource where it is found\
      \ to another resource or action that may be performed."
    example:
      schema: "schema"
      targetSchema: "targetSchema"
      method: "GET"
      rel: "rel"
      href: "href"
  API Root:
    type: "object"
    properties:
      account_id:
        type: "string"
        description: "The Mailchimp account ID."
        title: "Account ID"
        readOnly: true
      login_id:
        type: "string"
        description: "The ID associated with the user who owns this API key. If you\
          \ can login to multiple accounts, this ID will be the same for each account."
        title: "Login ID"
        readOnly: true
      account_name:
        type: "string"
        description: "The name of the account."
        title: "Account Name"
        readOnly: true
      email:
        type: "string"
        description: "The account email address."
        title: "Account Email"
        readOnly: true
      first_name:
        type: "string"
        description: "The first name tied to the account."
        title: "First Name"
        readOnly: true
      last_name:
        type: "string"
        description: "The last name tied to the account."
        title: "Last Name"
        readOnly: true
      username:
        type: "string"
        example: "freddie2000"
        description: "The username tied to the account."
        title: "User Name"
        readOnly: true
      avatar_url:
        type: "string"
        description: "URL of the avatar for the user."
        title: "Avatar URL"
        readOnly: true
      role:
        type: "string"
        description: "The [user role](https://mailchimp.com/help/manage-user-levels-in-your-account/)\
          \ for the account."
        title: "Role"
        readOnly: true
      member_since:
        type: "string"
        format: "date-time"
        example: "2010-01-01T23:59:59+00:00"
        description: "The date and time that the account was created in ISO 8601 format."
        title: "Account Creation Date"
        readOnly: true
      pricing_plan_type:
        type: "string"
        description: "The type of pricing plan the account is on."
        title: "Account Pricing Plan"
        readOnly: true
        enum:
        - "monthly"
        - "pay_as_you_go"
        - "forever_free"
      first_payment:
        type: "string"
        format: "date-time"
        example: "2010-01-01T23:59:59+00:00"
        description: "Date of first payment for monthly plans."
        title: "First Payment"
        readOnly: true
      account_timezone:
        type: "string"
        description: "The timezone currently set for the account."
        title: "Account Timezone"
        readOnly: true
      account_industry:
        type: "string"
        description: "The user-specified industry associated with the account."
        title: "Account Industry"
        readOnly: true
      contact:
        $ref: "#/definitions/Account Contact"
      pro_enabled:
        type: "boolean"
        description: "Legacy - whether the account includes [Mailchimp Pro](https://mailchimp.com/help/about-mailchimp-pro/)."
        title: "Mailchimp Pro"
        readOnly: true
      last_login:
        type: "string"
        format: "date-time"
        description: "The date and time of the last login for this account in ISO\
          \ 8601 format."
        title: "Last Login Date"
        readOnly: true
      total_subscribers:
        type: "integer"
        description: "The total number of subscribers across all lists in the account."
        title: "Total Subscribers"
        readOnly: true
      industry_stats:
        $ref: "#/definitions/Industry Stats"
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "The API root resource links to all other resources available in\
      \ the API."
    example:
      member_since: "2010-01-01T23:59:59+00:00"
      login_id: "login_id"
      pro_enabled: true
      role: "role"
      first_payment: "2010-01-01T23:59:59+00:00"
      pricing_plan_type: "monthly"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      last_login: "2000-01-23T04:56:07.000+00:00"
      last_name: "last_name"
      industry_stats:
        click_rate: 5.962133916683182377482808078639209270477294921875
        bounce_rate: 1.46581298050294517310021547018550336360931396484375
        open_rate: 6.02745618307040320615897144307382404804229736328125
      account_id: "account_id"
      avatar_url: "avatar_url"
      account_name: "account_name"
      contact:
        zip: "zip"
        country: "country"
        addr2: "addr2"
        addr1: "addr1"
        city: "city"
        company: "company"
        state: "state"
      account_industry: "account_industry"
      first_name: "first_name"
      email: "email"
      account_timezone: "account_timezone"
      total_subscribers: 0
      username: "freddie2000"
  Problem Detail Document:
    type: "object"
    required:
    - "detail"
    - "instance"
    - "status"
    - "title"
    - "type"
    properties:
      type:
        type: "string"
        example: "https://mailchimp.com/developer/marketing/docs/errors/"
        description: "An absolute URI that identifies the problem type. When dereferenced,\
          \ it should provide human-readable documentation for the problem type."
        title: "Problem Type"
      title:
        type: "string"
        example: "Resource Not Found"
        description: "A short, human-readable summary of the problem type. It shouldn't\
          \ change based on the occurrence of the problem, except for purposes of\
          \ localization."
        title: "Error Title"
      status:
        type: "integer"
        example: 404
        description: "The HTTP status code (RFC2616, Section 6) generated by the origin\
          \ server for this occurrence of the problem."
        title: "HTTP Status Code"
      detail:
        type: "string"
        example: "The requested resource could not be found."
        description: "A human-readable explanation specific to this occurrence of\
          \ the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors)."
        title: "Error Message"
      instance:
        type: "string"
        example: "995c5cb0-3280-4a6e-808b-3b096d0bb219"
        description: "A string that identifies this specific occurrence of the problem.\
          \ Please provide this ID when contacting support."
        title: "Instance ID"
    description: "An error generated by the Mailchimp API. Conforms to IETF draft\
      \ 'draft-nottingham-http-problem-06'."
  ChimpChatter:
    type: "object"
    properties:
      title:
        type: "string"
        example: "1 new subscriber to Your New Campaign!"
        title: "Title"
        readOnly: true
      message:
        type: "string"
        example: "People are telling their friends about your campaign!"
        title: "Message"
        readOnly: true
      type:
        type: "string"
        example: "campaigns:forward-to-friend"
        description: "The type of activity"
        title: "Type"
        readOnly: true
        enum:
        - "lists:new-subscriber"
        - "lists:unsubscribes"
        - "lists:profile-updates"
        - "campaigns:facebook-likes"
        - "campaigns:forward-to-friend"
        - "lists:imports"
      update_time:
        type: "string"
        format: "date-time"
        example: "2017-08-04T11:09:01+00:00"
        description: "The date and time this activity was updated."
        title: "Update Time"
        readOnly: true
      url:
        type: "string"
        example: "http://dev.mailchimp.com/reports/summary?id=1"
        description: "URL to a report that includes this activity"
        title: "URL"
        readOnly: true
      list_id:
        type: "string"
        example: "2017-08-04T11:09:01+00:00"
        description: "If it exists, list ID for the associated list"
        title: "List ID"
        readOnly: true
      campaign_id:
        type: "string"
        example: "2017-08-04T11:09:01+00:00"
        description: "If it exists, campaign ID for the associated campaign"
        title: "Campaign ID"
        readOnly: true
    description: "A Chimp Chatter message"
    example:
      update_time: "2017-08-04T11:09:01+00:00"
      list_id: "2017-08-04T11:09:01+00:00"
      title: "1 new subscriber to Your New Campaign!"
      message: "People are telling their friends about your campaign!"
      type: "campaigns:forward-to-friend"
      url: "http://dev.mailchimp.com/reports/summary?id=1"
      campaign_id: "2017-08-04T11:09:01+00:00"
  inline_response_200:
    type: "object"
    properties:
      chimp_chatter:
        type: "array"
        description: "An array of Chimp Chatter messages. There's a maximum of 200\
          \ messages present for an account."
        readOnly: true
        items:
          $ref: "#/definitions/ChimpChatter"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "An array of Chimp Chatter messages. There's a maximum of 200 messages\
      \ present for an account."
    example:
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      chimp_chatter:
      - update_time: "2017-08-04T11:09:01+00:00"
        list_id: "2017-08-04T11:09:01+00:00"
        title: "1 new subscriber to Your New Campaign!"
        message: "People are telling their friends about your campaign!"
        type: "campaigns:forward-to-friend"
        url: "http://dev.mailchimp.com/reports/summary?id=1"
        campaign_id: "2017-08-04T11:09:01+00:00"
      - update_time: "2017-08-04T11:09:01+00:00"
        list_id: "2017-08-04T11:09:01+00:00"
        title: "1 new subscriber to Your New Campaign!"
        message: "People are telling their friends about your campaign!"
        type: "campaigns:forward-to-friend"
        url: "http://dev.mailchimp.com/reports/summary?id=1"
        campaign_id: "2017-08-04T11:09:01+00:00"
      total_items: 0
  inline_response_200_1_exports:
    type: "object"
    properties:
      export_id:
        type: "integer"
        description: "The ID for the export."
        title: "Export ID"
      started:
        type: "string"
        format: "date-time"
        description: "Start time for the export."
        title: "Start Time"
      finished:
        type: "string"
        format: "date-time"
        description: "If finished, the finish time for the export."
        title: "Finish Time"
      size_in_bytes:
        type: "integer"
        description: "The size of the uncompressed export in bytes."
        title: "Export Size"
      download_url:
        type: "string"
        description: "If the export is finished, the download URL for an export. URLs\
          \ are only valid for 90 days after the export completes."
        title: "Download URL"
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "An account export."
    example:
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      size_in_bytes: 6
      download_url: "download_url"
      started: "2000-01-23T04:56:07.000+00:00"
      finished: "2000-01-23T04:56:07.000+00:00"
      export_id: 0
  inline_response_200_1:
    type: "object"
    properties:
      exports:
        type: "array"
        description: "An array of objects, each representing an account export."
        title: "Account Exports"
        items:
          $ref: "#/definitions/inline_response_200_1_exports"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "An array of objects, each representing an account export."
    example:
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      exports:
      - _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        size_in_bytes: 6
        download_url: "download_url"
        started: "2000-01-23T04:56:07.000+00:00"
        finished: "2000-01-23T04:56:07.000+00:00"
        export_id: 0
      - _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        size_in_bytes: 6
        download_url: "download_url"
        started: "2000-01-23T04:56:07.000+00:00"
        finished: "2000-01-23T04:56:07.000+00:00"
        export_id: 0
      total_items: 1
  Create an account export:
    type: "object"
    required:
    - "include_stages"
    properties:
      include_stages:
        type: "array"
        example: "[\"audiences\", \"gallery_files\"]"
        description: "The stages of an account export to include."
        title: "Include Stages"
        items:
          type: "string"
          enum:
          - "audiences"
          - "campaigns"
          - "events"
          - "gallery_files"
          - "reports"
          - "templates"
      since_timestamp:
        type: "string"
        format: "date-time"
        example: "2021-08-23T14:15:09Z"
        description: "An ISO 8601 date that will limit the export to only records\
          \ created after a given time. For instance, the reports stage will contain\
          \ any campaign sent after the given timestamp. Audiences, however, are excluded\
          \ from this limit."
        title: "Since Timestamp"
    title: "Create an account export"
    description: "Creates an account export with the given parameters."
  inline_response_200_2_apps:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "The ID for the application."
        title: "Client ID"
      name:
        type: "string"
        description: "The name of the application."
        title: "Application Name"
      description:
        type: "string"
        description: "A short description of the application."
        title: "Application Description"
      users:
        type: "array"
        description: "An array of usernames for users who have linked the app."
        title: "Application Users"
        items:
          type: "string"
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "An authorized app."
    example:
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      name: "name"
      description: "description"
      id: 0
      users:
      - "users"
      - "users"
  inline_response_200_2:
    type: "object"
    properties:
      apps:
        type: "array"
        description: "An array of objects, each representing an authorized application."
        title: "Authorized Applications"
        items:
          $ref: "#/definitions/inline_response_200_2_apps"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "An array of objects, each representing an authorized application."
    example:
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      total_items: 6
      apps:
      - _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        name: "name"
        description: "description"
        id: 0
        users:
        - "users"
        - "users"
      - _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        name: "name"
        description: "description"
        id: 0
        users:
        - "users"
        - "users"
  Segment Options:
    type: "object"
    properties:
      saved_segment_id:
        type: "integer"
        description: "The id for an existing saved segment."
        title: "Saved Segment ID"
      match:
        type: "string"
        description: "Segment match type."
        title: "Match Type"
        enum:
        - "any"
        - "all"
      conditions:
        type: "array"
        description: "Segment match conditions. There are multiple possible types,\
          \ see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas)."
        title: "Segment Type"
        items:
          x-oneOf:
          - type: "object"
            title: "Aim Segment"
            description: "Segment by interaction with a specific campaign."
            properties:
              condition_type:
                type: "string"
                x-value: "Aim"
                enum:
                - "Aim"
              field:
                type: "string"
                enum:
                - "aim"
                title: "Segment Field"
                description: "Segment by interaction with a specific campaign."
                example: "aim"
              op:
                type: "string"
                enum:
                - "open"
                - "click"
                - "sent"
                - "noopen"
                - "noclick"
                - "nosent"
                title: "Segment Operator"
                description: "The status of the member with regard to their campaign\
                  \ interaction. One of the following: opened, clicked, was sent,\
                  \ didn't open, didn't click, or was not sent."
                example: "open"
              value:
                type: "string"
                title: "Segment Data"
                description: "Either the web id value for a specific campaign or 'any'\
                  \ to account for subscribers who have/have not interacted with any\
                  \ campaigns."
                example: "any"
          - type: "object"
            title: "Automation Segment"
            description: "Segment by interaction with an Automation workflow."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "Automation"
                enum:
                - "Automation"
              field:
                type: "string"
                enum:
                - "automation"
                title: "Segment Field"
                description: "Segment by interaction with an Automation workflow."
                example: "automation"
              op:
                type: "string"
                enum:
                - "started"
                - "completed"
                - "not_started"
                - "not_completed"
                title: "Segment Operator"
                description: "The status of the member with regard to the automation\
                  \ workflow. One of the following: has started the workflow, has\
                  \ completed the workflow, has not started the workflow, or has not\
                  \ completed the workflow."
                example: "started"
              value:
                type: "string"
                title: "Segment Data"
                description: "The web id for the automation workflow to segment against."
                example: "2135217"
          - type: "object"
            title: "Poll Activity Segment"
            description: "Segment by poll activity."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "CampaignPoll"
                enum:
                - "CampaignPoll"
              field:
                type: "string"
                enum:
                - "poll"
                title: "Segment Field"
                description: "Segment by poll activity."
                example: "poll"
              op:
                type: "string"
                enum:
                - "member"
                - "notmember"
                title: "Segment Operator"
                description: "Members have/have not interacted with a specific poll\
                  \ in a Mailchimp email."
                example: "member"
              value:
                type: "number"
                title: "Segment Operator"
                description: "The id for the poll."
                example: 409
          - type: "object"
            title: "Conversation Segment"
            description: "Segment by interaction with a campaign via Conversations."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "Conversation"
                enum:
                - "Conversation"
              field:
                type: "string"
                enum:
                - "conversation"
                title: "Segment Field"
                description: "Segment by interaction with a campaign via Conversations."
                example: "conversation"
              op:
                type: "string"
                enum:
                - "member"
                - "notmember"
                title: "Segment Operator"
                description: "The status of a member's interaction with a conversation.\
                  \ One of the following: has replied or has not replied."
                example: "member"
              value:
                type: "string"
                title: "Segment Data"
                description: "The web id value for a specific campaign or 'any' to\
                  \ account for subscribers who have/have not interacted with any\
                  \ campaigns."
                example: "any"
          - type: "object"
            title: "Date Segment"
            description: "Segment by a specific date field."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "Date"
                enum:
                - "Date"
              field:
                type: "string"
                enum:
                - "timestamp_opt"
                - "info_changed"
                - "ecomm_date"
                title: "Segment Field"
                description: "The type of date field to segment on: The opt-in time\
                  \ for a signup, the date the subscriber was last updated, or the\
                  \ date of their last ecomm purchase."
                example: "timestamp_opt"
              op:
                type: "string"
                enum:
                - "greater"
                - "less"
                - "is"
                - "not"
                - "blank"
                - "blank_not"
                - "within"
                - "notwithin"
                title: "Segment Operator"
                description: "When the event took place:  Before, after, is a specific\
                  \ date, is not a specific date, is blank, or is not blank."
                example: "greater"
              value:
                type: "string"
                title: "Segment Data"
                description: "What type of data to segment on: a specific date, a\
                  \ specific campaign, or the last campaign sent."
                example: "date"
              extra:
                type: "string"
                title: "Segment Extra Value"
                description: "When segmenting on 'date' or 'campaign', the date for\
                  \ the segment formatted as YYYY-MM-DD or the web id for the campaign."
                example: "2015-01-30"
          - type: "object"
            title: "Email Client Segment"
            description: "Segment by use of a particular email client."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "EmailClient"
                enum:
                - "EmailClient"
              field:
                type: "string"
                enum:
                - "email_client"
                title: "Segment Field"
                description: "Segment by use of a particular email client."
                example: "email_client"
              op:
                type: "string"
                enum:
                - "client_is"
                - "client_not"
                title: "Segment Operator"
                description: "The operation to determine whether we select clients\
                  \ that match the value, or clients that do not match the value."
                example: "client_is"
              value:
                type: "string"
                title: "Segment Data"
                description: "The name of the email client."
                example: "Gmail"
          - type: "object"
            title: "Language Segment"
            description: "Segment by language."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "Language"
                enum:
                - "Language"
              field:
                type: "string"
                enum:
                - "language"
                title: "Segment Field"
                description: "Segmenting based off of a subscriber's language."
                example: "language"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                title: "Segment Operator"
                description: "Whether the member's language is or is not set to a\
                  \ specific language."
                example: "is"
              value:
                type: "string"
                title: "Segment Data"
                description: "A two-letter language identifier."
                example: "en"
          - type: "object"
            title: "Member Rating Segment"
            description: "Segment by member rating."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "MemberRating"
                enum:
                - "MemberRating"
              field:
                type: "string"
                enum:
                - "rating"
                title: "Segment Field"
                description: "Segment by member rating."
                example: "rating"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "greater"
                - "less"
                title: "Segment Operator"
                description: "Members who have have a rating that is/not exactly a\
                  \ given number or members who have a rating greater/less than a\
                  \ given number."
                example: "greater"
              value:
                type: "number"
                title: "Segment Operator"
                description: "The star rating number to segment against."
                example: 4
          - type: "object"
            title: "Signup Source Segment"
            description: "Segment by signup source."
            required:
            - "field"
            - "condition_type"
            - "op"
            properties:
              condition_type:
                type: "string"
                enum:
                - "SignupSource"
                x-value: "SignupSource"
                title: "Type"
              field:
                type: "string"
                enum:
                - "source"
                title: "Segment Field"
                example: "source"
              op:
                type: "string"
                enum:
                - "source_is"
                - "source_not"
                title: "Segment Operator"
                description: "Whether the member's signup source was/was not a particular\
                  \ value."
                example: "source_is"
              value:
                type: "string"
                title: "Segment Data"
                description: "The signup source."
                example: "List Import"
          - type: "object"
            title: "Survey Monkey Segment"
            description: "Segment by interaction with a SurveyMonkey survey."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "SurveyMonkey"
                enum:
                - "SurveyMonkey"
              field:
                type: "string"
                enum:
                - "survey_monkey"
                title: "Segment Field"
                description: "Segment by interaction with a SurveyMonkey survey."
                example: "survey_monkey"
              op:
                type: "string"
                enum:
                - "started"
                - "completed"
                - "not_started"
                - "not_completed"
                title: "Segment Operator"
                description: "The status of the member with regard to the survey.One\
                  \ of the following: has started the survey, has completed the survey,\
                  \ has not started the survey, or has not completed the survey."
                example: "started"
              value:
                type: "string"
                title: "Survey ID"
                description: "The unique ID of the survey monkey survey."
                example: "32179586"
          - type: "object"
            title: "VIP Segment"
            description: "Segment by VIP status."
            required:
            - "field"
            - "op"
            properties:
              condition_type:
                type: "string"
                x-value: "VIP"
                enum:
                - "VIP"
              field:
                type: "string"
                enum:
                - "gmonkey"
                title: "Segment Field"
                description: "Segment by VIP status."
                example: "gmonkey"
              op:
                type: "string"
                enum:
                - "member"
                - "notmember"
                title: "Segment Operator"
                description: "Whether the member is or is not marked as VIP."
                example: "member"
          - type: "object"
            title: "Interests Segment"
            description: "Segment by an interest group merge field."
            properties:
              condition_type:
                type: "string"
                x-value: "Interests"
                enum:
                - "Interests"
              field:
                type: "string"
                title: "Segment Field"
                description: "Segmenting based on interest group information. This\
                  \ should start with 'interests-' followed by the grouping id. Ex.\
                  \ 'interests-123'."
                example: "interests-123"
              op:
                type: "string"
                enum:
                - "interestcontains"
                - "interestcontainsall"
                - "interestnotcontains"
                title: "Segment Operator"
                description: "Whether the member is a part of one, all, or none of\
                  \ the groups."
                example: "interestcontains"
              value:
                type: "array"
                title: "Segment Value"
                description: "An array containing strings, each representing a group\
                  \ id."
                items:
                  type: "string"
                  example:
                  - "44401"
                  - "44405"
                  - "44409"
          - type: "object"
            title: "Ecommerce Category Segment"
            description: "Segment by purchases in specific items or categories."
            properties:
              condition_type:
                type: "string"
                x-value: "EcommCategory"
                enum:
                - "EcommCategory"
              field:
                type: "string"
                enum:
                - "ecomm_cat"
                - "ecomm_prod"
                title: "Segment Field"
                description: "Segment by purchases in specific items or categories."
                example: "ecomm_cat"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "contains"
                - "notcontain"
                - "starts"
                - "ends"
                title: "Segment Operator"
                description: "A member who has purchased from a category/specific\
                  \ item that is/is not a specific name, where the category/item name\
                  \ contains/doesn't contain a specific phrase or string, or a category/item\
                  \ name that starts/ends with a string."
                example: "is"
              value:
                type: "string"
                title: "Segment Data"
                description: "The ecommerce category/item information."
                example: "Product"
          - type: "object"
            title: "Ecommerce Number Segment"
            description: "Segment by average spent total, number of orders, total\
              \ number of products purchased, or average number of products per order."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "EcommNumber"
                enum:
                - "EcommNumber"
              field:
                type: "string"
                enum:
                - "ecomm_spent_avg"
                - "ecomm_orders"
                - "ecomm_prod_all"
                - "ecomm_avg_ord"
                title: "Segment Field"
                description: "Segment by average spent total, number of orders, total\
                  \ number of products purchased, or average number of products per\
                  \ order."
                example: "ecomm_orders"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "greater"
                - "less"
                title: "Segment Operator"
                description: "Members who have spent exactly, have not spent exactly,\
                  \ spent more, or spent less than the segment value."
                example: "greater"
              value:
                type: "number"
                title: "Segment Operator"
                description: "Members who have spent exactly, have not spent exactly,\
                  \ spent more, or spent less than this amount."
                example: 42
          - type: "object"
            title: "Ecommerce Purchased Segment"
            description: "Segment by whether someone has purchased anything."
            properties:
              condition_type:
                type: "string"
                x-value: "EcommPurchased"
                enum:
                - "EcommPurchased"
              field:
                type: "string"
                enum:
                - "ecomm_purchased"
                title: "Segment Field"
                description: "Segment by whether someone has purchased anything."
                example: "ecomm_purchased"
              op:
                type: "string"
                enum:
                - "member"
                - "notmember"
                title: "Segment Operator"
                description: "Members who have have ('member') or have not ('notmember')\
                  \ purchased."
                example: "member"
          - type: "object"
            title: "Ecommerce Spent Segment"
            description: "Segment by amount spent on a single order or across all\
              \ orders."
            properties:
              condition_type:
                type: "string"
                x-value: "EcommSpent"
                enum:
                - "EcommSpent"
              field:
                type: "string"
                enum:
                - "ecomm_spent_one"
                - "ecomm_spent_all"
                title: "Segment Field"
                description: "Segment by amount spent on a single order or across\
                  \ all orders."
                example: "ecomm_spent_one"
              op:
                type: "string"
                enum:
                - "greater"
                - "less"
                title: "Segment Operator"
                description: "Members who have spent 'more' or 'less' than then specified\
                  \ value."
                example: "greater"
              value:
                type: "integer"
                title: "Segment Data"
                description: "The total amount a member spent."
                example: 42
          - type: "object"
            title: "Ecommerce Purchased Store Segment"
            description: "Segment by purchases from a specific store."
            properties:
              condition_type:
                type: "string"
                x-value: "EcommStore"
                enum:
                - "EcommStore"
              field:
                type: "string"
                enum:
                - "ecomm_store"
                title: "Segment Field"
                description: "Segment by purchases from a specific store."
                example: "ecomm_store"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                title: "Segment Operator"
                description: "Members who have or have not purchased from a specific\
                  \ store."
                example: "is"
              value:
                type: "string"
                title: "Segment Operator"
                description: "The store id to segment against."
                example: "289"
          - type: "object"
            title: "Goal Activity Segment"
            description: "Segment by Goal activity."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "GoalActivity"
                enum:
                - "GoalActivity"
              field:
                type: "string"
                enum:
                - "goal"
                title: "Segment Field"
                description: "Segment by Goal activity."
                example: "goal"
              op:
                type: "string"
                enum:
                - "is"
                - "goal_not"
                - "contains"
                - "goal_notcontain"
                - "starts"
                - "ends"
                title: "Segment Operator"
                description: "Whether the website URL is/not exactly, contains/doesn't\
                  \ contain, starts with/ends with a string."
                example: "is"
              value:
                type: "string"
                title: "Segment Value"
                description: "The URL to check Goal activity against."
          - type: "object"
            title: "Goal Timestamp Segment"
            description: "Segment by most recent interaction with a website."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "GoalTimestamp"
                enum:
                - "GoalTimestamp"
              field:
                type: "string"
                enum:
                - "goal_last_visited"
                title: "Segment Field"
                description: "Segment by most recent interaction with a website."
                example: "goal_last_visited"
              op:
                type: "string"
                enum:
                - "greater"
                - "less"
                - "is"
                title: "Segment Operator"
                description: "Whether the website activity happened after, before,\
                  \ or at a given timestamp."
                example: "greater"
              value:
                type: "string"
                title: "Segment Value"
                description: "The date to check Goal activity against."
                example: "2015-07-20 19:45:21"
          - type: "object"
            title: "Similar Subscribers Segment Member Segment"
            description: "Segment by similar subscribers."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "FuzzySegment"
                enum:
                - "FuzzySegment"
              field:
                type: "string"
                enum:
                - "fuzzy_segment"
                title: "Segment Field"
                description: "Segment by similar subscribers."
                example: "fuzzy_segment"
              op:
                type: "string"
                enum:
                - "fuzzy_is"
                - "fuzzy_not"
                title: "Segment Operator"
                description: "Members who are/are not apart of a 'similar subscribers'\
                  \ segment."
                example: "fuzzy_is"
              value:
                type: "number"
                title: "Segment Operator"
                description: "The id for the 'similar subscribers' segment."
                example: 48433
          - type: "object"
            title: "Static Segment Member Segment"
            description: "Segment by a given static segment."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "StaticSegment"
                enum:
                - "StaticSegment"
              field:
                type: "string"
                enum:
                - "static_segment"
                title: "Segment Field"
                description: "Segment by a given static segment."
                example: "static_segment"
              op:
                type: "string"
                enum:
                - "static_is"
                - "static_not"
                title: "Segment Operator"
                description: "Members who are/are not apart of a static segment."
                example: "static_is"
              value:
                type: "number"
                title: "Segment Operator"
                description: "The id for the static segment."
                example: 48433
          - type: "object"
            title: "Location-Based Segment"
            description: "Segment by a specific country or US state."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "IPGeoCountryState"
                enum:
                - "IPGeoCountryState"
              field:
                type: "string"
                enum:
                - "ipgeo"
                title: "Segment Field"
                description: "Segmenting subscribers who are within a specific location."
                example: "ipgeo"
              op:
                type: "string"
                enum:
                - "ipgeocountry"
                - "ipgeonotcountry"
                - "ipgeostate"
                - "ipgeonotstate"
                title: "Segment Operator"
                description: "Segment members who are within a specific country or\
                  \ US state."
                example: "ipgeocountry"
              value:
                type: "string"
                title: "Segment Data"
                description: "The two-letter country code or US state abbreviation."
                example: "US"
          - type: "object"
            title: "Geolocation Segment"
            description: "Segment by a specific geographic region."
            required:
            - "field"
            - "op"
            - "value"
            - "addr"
            - "lat"
            - "lng"
            properties:
              condition_type:
                type: "string"
                x-value: "IPGeoIn"
                enum:
                - "IPGeoIn"
              field:
                type: "string"
                enum:
                - "ipgeo"
                title: "Segment Field"
                description: "Segmenting subscribers who are within a specific location."
                example: "ipgeo"
              op:
                type: "string"
                enum:
                - "ipgeoin"
                - "ipgeonotin"
                title: "Segment Operator"
                description: "Segment members who are within a specific geographic\
                  \ region."
                example: "ipgeoin"
              value:
                type: "integer"
                title: "Segment Data"
                description: "The radius of the target location."
                example: 42
              addr:
                type: "string"
                title: "Segment Location Address"
                description: "The address of the target location."
                example: "Atlanta, GA, USA"
              lat:
                type: "string"
                title: "Segment Location Latitude"
                description: "The latitude of the target location."
                example: "33.7489954"
              lng:
                type: "string"
                title: "Segment Location Longitude"
                description: "The longitude of the target location."
                example: "-84.3879824"
          - type: "object"
            title: "US Zip Code Segment"
            description: "Segment by a specific US ZIP code."
            required:
            - "field"
            - "op"
            - "value"
            - "extra"
            properties:
              condition_type:
                type: "string"
                x-value: "IPGeoInZip"
                enum:
                - "IPGeoInZip"
              field:
                type: "string"
                enum:
                - "ipgeo"
                title: "Segment Field"
                description: "Segmenting subscribers who are within a specific location."
                example: "ipgeo"
              op:
                type: "string"
                enum:
                - "ipgeoinzip"
                title: "Segment Operator"
                description: "Segment members who are within a specific US zip code."
                example: "ipgeoinzip"
              value:
                type: "integer"
                title: "Segment Data"
                description: "The radius of the target location."
                example: 25
              extra:
                type: "integer"
                title: "Extra Data"
                description: "The zip code to segment against."
                example: 30318
          - type: "object"
            title: "Unknown Location-Based Segment"
            description: "Segment members whose location information is unknown."
            required:
            - "field"
            - "op"
            properties:
              condition_type:
                type: "string"
                x-value: "IPGeoUnknown"
                enum:
                - "IPGeoUnknown"
              field:
                type: "string"
                enum:
                - "ipgeo"
                title: "Segment Field"
                description: "Segmenting subscribers who are within a specific location."
                example: "ipgeo"
              op:
                type: "string"
                enum:
                - "ipgeounknown"
                title: "Segment Operator"
                description: "Segment members for which location information is unknown."
                example: "ipgeounknown"
          - type: "object"
            title: "Zip Code Location-Based Segment"
            description: "Segment by a specific US ZIP code."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "IPGeoZip"
                enum:
                - "IPGeoZip"
              field:
                type: "string"
                enum:
                - "ipgeo"
                title: "Segment Field"
                description: "Segmenting subscribers who are within a specific location."
                example: "ipgeo"
              op:
                type: "string"
                enum:
                - "ipgeoiszip"
                - "ipgeonotzip"
                title: "Segment Operator"
                description: "Segment members who are/are not within a specific US\
                  \ zip code."
                example: "ipgeonotzip"
              value:
                type: "integer"
                title: "Segment Data"
                description: "The 5-digit zip code."
                example: 30318
          - type: "object"
            title: "Social Profiles Age Segment"
            description: "Segment by age ranges in Social Profiles data."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "SocialAge"
                enum:
                - "SocialAge"
              field:
                type: "string"
                enum:
                - "social_age"
                title: "Segment Field"
                description: "Segment by age ranges in Social Profiles data."
                example: "social_age"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                title: "Segment Operator"
                description: "Members who are/not the exact criteria listed."
                example: "is"
              value:
                type: "string"
                enum:
                - "18-24"
                - "25-34"
                - "35-54"
                - "55+"
                title: "Segment Operator"
                description: "The age range to segment."
                example: "35-54"
          - type: "object"
            title: "Social Profiles Gender Segment"
            description: "Segment by listed gender in Social Profiles data."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "SocialGender"
                enum:
                - "SocialGender"
              field:
                type: "string"
                enum:
                - "social_gender"
                title: "Segment Field"
                description: "Segment by listed gender in Social Profiles data."
                example: "social_gender"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                title: "Segment Operator"
                description: "Members who are/not the exact criteria listed."
                example: "is"
              value:
                type: "string"
                enum:
                - "male"
                - "female"
                title: "Segment Operator"
                description: "The Social Profiles gender to segment."
                example: "female"
          - type: "object"
            title: "Social Profiles Influence Segment"
            description: "Segment by influence rating in Social Profiles data."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "SocialInfluence"
                enum:
                - "SocialInfluence"
              field:
                type: "string"
                enum:
                - "social_influence"
                title: "Segment Field"
                description: "Segment by influence rating in Social Profiles data."
                example: "social_influence"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "greater"
                - "less"
                title: "Segment Operator"
                description: "Members who have a rating that is/not or greater/less\
                  \ than the rating provided."
                example: "greater"
              value:
                type: "number"
                title: "Segment Operator"
                description: "The Social Profiles influence rating to segment."
                example: 2
          - type: "object"
            title: "Social Profiles Social Network Segment"
            description: "Segment by social network in Social Profiles data."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "SocialNetworkMember"
                enum:
                - "SocialNetworkMember"
              field:
                type: "string"
                enum:
                - "social_network"
                title: "Segment Field"
                description: "Segment by social network in Social Profiles data."
                example: "social_network"
              op:
                type: "string"
                enum:
                - "member"
                - "notmember"
                title: "Segment Operator"
                description: "Members who are/not on a given social network."
                example: "member"
              value:
                type: "string"
                enum:
                - "twitter"
                - "facebook"
                - "linkedin"
                - "flickr"
                - "foursquare"
                - "lastfm"
                - "myspace"
                - "quora"
                - "vimeo"
                - "yelp"
                - "youtube"
                title: "Segment Operator"
                description: "The social network to segment against."
                example: "twitter"
          - type: "object"
            title: "Social Profiles Social Network Follow Segment"
            description: "Segment by social network in Social Profiles data."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "SocialNetworkFollow"
                enum:
                - "SocialNetworkFollow"
              field:
                type: "string"
                enum:
                - "social_network"
                title: "Segment Field"
                description: "Segment by social network in Social Profiles data."
                example: "social_network"
              op:
                type: "string"
                enum:
                - "follow"
                - "notfollow"
                title: "Segment Operator"
                description: "Members who are/not following a linked account on a\
                  \ given social network."
                example: "follow"
              value:
                type: "string"
                enum:
                - "twitter_follow"
                title: "Segment Operator"
                description: "The social network to segment against."
                example: "twitter_follow"
          - type: "object"
            title: "Address Merge Field Segment"
            description: "Segment by an address-type merge field."
            required:
            - "field"
            - "op"
            properties:
              condition_type:
                type: "string"
                x-value: "AddressMerge"
                enum:
                - "AddressMerge"
              field:
                type: "string"
                title: "Segment Field"
                description: "An address-type merge field to segment."
                example: "MMERGE3"
              op:
                type: "string"
                enum:
                - "contains"
                - "notcontain"
                - "blank"
                - "blank_not"
                title: "Segment Operator"
                description: "Whether the member's address merge field contains/does\
                  \ not contain a value or is/is not blank."
                example: "contains"
              value:
                type: "string"
                title: "Segment Value"
                description: "The value to segment a text merge field with."
                example: "Atlanta"
          - type: "object"
            title: "Address/Zip Merge Field Segment"
            description: "Segment by an address-type merge field within a given distance."
            required:
            - "field"
            - "op"
            - "value"
            - "extra"
            properties:
              condition_type:
                type: "string"
                x-value: "ZipMerge"
                enum:
                - "ZipMerge"
              field:
                type: "string"
                title: "Segment Field"
                description: "An address or zip-type merge field to segment."
                example: "MMERGE2"
              op:
                type: "string"
                enum:
                - "geoin"
                title: "Segment Operator"
                description: "Whether the member's address merge field is within a\
                  \ given distance from a city or zip."
                example: "geoin"
              value:
                type: "string"
                title: "Segment Value"
                description: "The distance from the city/zip."
                example: "25"
              extra:
                type: "string"
                title: "Segment Extra"
                description: "The city or the zip being used to segment against."
                example: "30318"
          - type: "object"
            title: "Birthday Merge Field Segment"
            description: "Segment by a contact's birthday."
            required:
            - "field"
            - "op"
            properties:
              condition_type:
                type: "string"
                x-value: "BirthdayMerge"
                enum:
                - "BirthdayMerge"
              field:
                type: "string"
                title: "Segment Field"
                description: "A date merge field to segment."
                example: "MMERGE4"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "blank"
                - "blank_not"
                title: "Segment Operator"
                description: "Whether the member's birthday merge information is/is\
                  \ not a certain date or is/is not blank."
                example: "is"
              value:
                type: "string"
                title: "Segment Value"
                description: "A date to segment against (mm/dd)."
                example: "01/30"
          - type: "object"
            title: "Date Merge Field Segment"
            description: "Segment by a given date merge field."
            required:
            - "field"
            - "op"
            properties:
              condition_type:
                type: "string"
                x-value: "DateMerge"
                enum:
                - "DateMerge"
              field:
                type: "string"
                title: "Segment Field"
                description: "A date merge field to segment."
                example: "MMERGE5"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "less"
                - "blank"
                - "blank_not"
                - "greater"
                title: "Segment Operator"
                description: "Whether the member's merge information is/is not, is\
                  \ greater/less than a value or is/is not blank."
                example: "is"
              value:
                type: "string"
                title: "Segment Value"
                description: "A date to segment against."
                example: "01/30/2015"
          - type: "object"
            title: "Dropdown/Radio Merge Field Segment"
            description: "An individual segment condition"
            required:
            - "field"
            - "op"
            properties:
              condition_type:
                type: "string"
                x-value: "SelectMerge"
                enum:
                - "SelectMerge"
              field:
                type: "string"
                title: "Segment Field"
                description: "A merge field to segment."
                example: "MMERGE6"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "blank"
                - "blank_not"
                - "notcontain"
                - "contains"
                title: "Segment Operator"
                description: "Whether the member's merge information is/is not a value\
                  \ or is/is not blank."
                example: "is"
              value:
                type: "string"
                title: "Segment Value"
                description: "The value to segment a text merge field with."
                example: "Second Choice"
          - type: "object"
            title: "Text or Number Merge Field Segment"
            description: "Segment by a given text or number merge field."
            required:
            - "field"
            - "op"
            properties:
              condition_type:
                type: "string"
                x-value: "TextMerge"
                enum:
                - "TextMerge"
              field:
                type: "string"
                title: "Segment Field"
                description: "A text or number merge field to segment."
                example: "MMERGE7"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "contains"
                - "notcontain"
                - "starts"
                - "ends"
                - "greater"
                - "less"
                - "blank"
                - "blank_not"
                title: "Segment Operator"
                description: "Whether the member's merge information is/is not, contains/does\
                  \ not contain, starts/ends with, or is greater/less than a value"
                example: "contains"
              value:
                type: "string"
                title: "Segment Value"
                description: "The value to segment a text or number merge field with."
                example: "Freddie's Jokes"
          - type: "object"
            title: "Email Segment"
            description: "Segment by email address."
            required:
            - "field"
            - "op"
            properties:
              condition_type:
                type: "string"
                x-value: "EmailAddress"
                enum:
                - "EmailAddress"
              field:
                type: "string"
                enum:
                - "merge0"
                - "EMAIL"
                title: "Segment Field"
                description: "Segmenting based off of a subscriber's email address."
                example: "EMAIL"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "contains"
                - "notcontain"
                - "starts"
                - "ends"
                - "greater"
                - "less"
                title: "Segment Operator"
                description: "Whether the email address is/not exactly, contains/doesn't\
                  \ contain, starts/ends with a string."
              value:
                type: "string"
                title: "Segment Value"
                description: "The value to compare the email against."
                example: "urist.mcvankab@freddiesjokes.com"
          - type: "object"
            title: "Predicted Gender Segment"
            description: "Segment by predicted gender."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "PredictedGender"
                enum:
                - "PredictedGender"
              field:
                type: "string"
                enum:
                - "predicted_gender"
                title: "Segment Field"
                description: "Segment by predicted gender."
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                title: "Segment Operator"
                description: "Members who are/not the exact criteria listed."
                example: "is"
              value:
                type: "string"
                enum:
                - "male"
                - "female"
                title: "Segment Operator"
                description: "The predicted gender to segment."
                example: "female"
          - type: "object"
            title: "Predicted Age Segment"
            description: "Segment by predicted age."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "PredictedAge"
                enum:
                - "PredictedAge"
              field:
                type: "string"
                enum:
                - "predicted_age_range"
                title: "Segment Field"
                description: "Segment by predicted age."
              op:
                type: "string"
                enum:
                - "is"
                title: "Segment Operator"
                description: "Members who are/not the exact criteria listed."
                example: "is"
              value:
                type: "string"
                enum:
                - "18-24"
                - "25-34"
                - "35-44"
                - "45-54"
                - "55-64"
                - "65+"
                title: "Segment Operator"
                description: "The predicted age to segment."
                example: "female"
          - type: "object"
            title: "New Subscribers Prebuilt Segment"
            description: "Segment by when people subscribed."
            properties:
              condition_type:
                type: "string"
                x-value: "NewSubscribers"
                enum:
                - "NewSubscribers"
              field:
                type: "string"
                enum:
                - "timestamp_opt"
                title: "Segment Field"
                description: "Segment by when people subscribed."
              op:
                type: "string"
                enum:
                - "date_within"
                title: "Segment Operator"
                description: "Whe the event took place, namely within a time frame."
              value:
                type: "string"
                title: "Segment Data"
                description: "What type of data to segment on: a specific date, a\
                  \ specific campaign, or the last campaign sent."
          x-discriminator:
            type: "string"
            propertyName: "condition_type"
    description: "An object representing all segmentation options."
    example:
      match: "any"
      saved_segment_id: 6
      conditions:
      - ""
      - ""
  List:
    type: "object"
    properties:
      list_id:
        type: "string"
        description: "The unique list id."
        title: "List ID"
      list_is_active:
        type: "boolean"
        description: "The status of the list used, namely if it's deleted or disabled."
        title: "List Status"
        readOnly: true
      list_name:
        type: "string"
        description: "List Name."
        title: "List Name"
      segment_opts:
        $ref: "#/definitions/Segment Options"
      store_id:
        type: "string"
        example: "1a2df69xxx"
        description: "The id of the store."
        title: "Store ID"
    description: "List settings for the Automation."
    example:
      segment_opts:
        match: "any"
        saved_segment_id: 6
        conditions:
        - ""
        - ""
      store_id: "1a2df69xxx"
      list_id: "list_id"
      list_name: "list_name"
      list_is_active: true
  Automation Campaign Settings:
    type: "object"
    properties:
      title:
        type: "string"
        description: "The title of the Automation."
        title: "Automation Title"
      from_name:
        type: "string"
        description: "The 'from' name for the Automation (not an email address)."
        title: "From Name"
      reply_to:
        type: "string"
        description: "The reply-to email address for the Automation."
        title: "Reply To Address"
      use_conversation:
        type: "boolean"
        description: "Whether to use Mailchimp Conversation feature to manage replies"
        title: "Conversations"
      to_name:
        type: "string"
        description: "The Automation's custom 'To' name, typically the first name\
          \ [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/)."
        title: "To Name"
      authenticate:
        type: "boolean"
        description: "Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/)\
          \ the Automation. Defaults to `true`."
        title: "Authentication"
      auto_footer:
        type: "boolean"
        description: "Whether to automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/)\
          \ to the Automation."
        title: "Auto-Footer"
      inline_css:
        type: "boolean"
        description: "Whether to automatically inline the CSS included with the Automation\
          \ content."
        title: "Inline CSS"
    description: "The settings for the Automation workflow."
    example:
      auto_footer: true
      use_conversation: true
      authenticate: true
      reply_to: "reply_to"
      to_name: "to_name"
      inline_css: true
      title: "title"
      from_name: "from_name"
  Salesforce CRM Tracking:
    type: "object"
    properties:
      campaign:
        type: "boolean"
        description: "Create a campaign in a connected Salesforce account."
        title: "Salesforce Campaign"
      notes:
        type: "boolean"
        description: "Update contact notes for a campaign based on a subscriber's\
          \ email address."
        title: "Salesforce Note"
    description: "Deprecated"
    example:
      notes: true
      campaign: true
  Capsule CRM Tracking:
    type: "object"
    properties:
      notes:
        type: "boolean"
        description: "Update contact notes for a campaign based on a subscriber's\
          \ email addresses."
        title: "Capsule Note"
    description: "Deprecated"
    example:
      notes: true
  Automation Tracking Options:
    type: "object"
    properties:
      opens:
        type: "boolean"
        description: "Whether to [track opens](https://mailchimp.com/help/about-open-tracking/).\
          \ Defaults to `true`."
        title: "Opens"
      html_clicks:
        type: "boolean"
        description: "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/)\
          \ in the HTML version of the Automation. Defaults to `true`."
        title: "HTML Click Tracking"
      text_clicks:
        type: "boolean"
        description: "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/)\
          \ in the plain-text version of the Automation. Defaults to `true`."
        title: "Plain-Text Click Tracking"
      goal_tracking:
        type: "boolean"
        description: "Deprecated"
        title: "Mailchimp Goal Tracking"
      ecomm360:
        type: "boolean"
        description: "Whether to enable e-commerce tracking."
        title: "E-commerce Tracking"
      google_analytics:
        type: "string"
        description: "The custom slug for [Google Analytics](https://mailchimp.com/help/integrate-google-analytics-with-mailchimp/)\
          \ tracking (max of 50 bytes)."
        title: "Google Analytics Tracking"
      clicktale:
        type: "string"
        description: "The custom slug for [ClickTale](https://mailchimp.com/help/additional-tracking-options-for-campaigns/)\
          \ tracking (max of 50 bytes)."
        title: "ClickTale Analytics Tracking"
      salesforce:
        $ref: "#/definitions/Salesforce CRM Tracking"
      capsule:
        $ref: "#/definitions/Capsule CRM Tracking"
    description: "The tracking options for the Automation."
    example:
      salesforce:
        notes: true
        campaign: true
      goal_tracking: true
      capsule:
        notes: true
      clicktale: "clicktale"
      text_clicks: true
      ecomm360: true
      opens: true
      google_analytics: "google_analytics"
      html_clicks: true
  Hours:
    type: "object"
    required:
    - "type"
    properties:
      type:
        type: "string"
        description: "When to send the Automation email."
        title: "Email Send Time Settings"
        enum:
        - "send_asap"
        - "send_between"
        - "send_at"
    description: "The hours an Automation workflow can send."
    example:
      type: "send_asap"
  Automation Workflow Runtime Settings:
    type: "object"
    properties:
      days:
        type: "array"
        description: "The days an Automation workflow can send."
        title: "Days"
        items:
          type: "string"
          enum:
          - "sunday"
          - "monday"
          - "tuesday"
          - "wednesday"
          - "thursday"
          - "friday"
          - "saturday"
      hours:
        $ref: "#/definitions/Hours"
    description: "A workflow's runtime settings for an Automation."
    example:
      hours:
        type: "send_asap"
      days:
      - "sunday"
      - "sunday"
  Automation Trigger:
    type: "object"
    required:
    - "workflow_type"
    properties:
      workflow_type:
        type: "string"
        description: "The type of Automation workflow."
        title: "Workflow Type"
        enum:
        - "abandonedBrowse"
        - "abandonedCart"
        - "api"
        - "bestCustomers"
        - "categoryFollowup"
        - "dateAdded"
        - "emailFollowup"
        - "emailSeries"
        - "groupAdd"
        - "groupRemove"
        - "mandrill"
        - "productFollowup"
        - "purchaseFollowup"
        - "recurringEvent"
        - "specialEvent"
        - "visitUrl"
        - "welcomeSeries"
      workflow_title:
        type: "string"
        description: "The title of the workflow type."
        title: "Workflow Title"
        readOnly: true
      runtime:
        $ref: "#/definitions/Automation Workflow Runtime Settings"
      workflow_emails_count:
        type: "integer"
        description: "The number of emails in the Automation workflow."
        title: "Workflow Emails Count"
        readOnly: true
    description: "Available triggers for Automation workflows."
    example:
      runtime:
        hours:
          type: "send_asap"
        days:
        - "sunday"
        - "sunday"
      workflow_emails_count: 1
      workflow_type: "abandonedBrowse"
      workflow_title: "workflow_title"
  Campaign Report Summary:
    type: "object"
    properties:
      opens:
        type: "integer"
        description: "The total number of opens for a campaign."
        title: "Automation Opens"
        readOnly: true
      unique_opens:
        type: "integer"
        description: "The number of unique opens."
        title: "Unique Opens"
        readOnly: true
      open_rate:
        type: "number"
        description: "The number of unique opens divided by the total number of successful\
          \ deliveries."
        title: "Open Rate"
        readOnly: true
      clicks:
        type: "integer"
        description: "The total number of clicks for an campaign."
        title: "Total Clicks"
        readOnly: true
      subscriber_clicks:
        type: "integer"
        description: "The number of unique clicks."
        title: "Unique Subscriber Clicks"
        readOnly: true
      click_rate:
        type: "number"
        description: "The number of unique clicks, divided by the total number of\
          \ successful deliveries."
        title: "Click Rate"
        readOnly: true
    description: "A summary of opens and clicks for sent campaigns."
    example:
      subscriber_clicks: 9
      click_rate: 3.61607674925191080461672754609026014804840087890625
      opens: 5
      clicks: 7
      unique_opens: 5
      open_rate: 2.3021358869347654518833223846741020679473876953125
  Automation Workflow:
    type: "object"
    properties:
      id:
        type: "string"
        description: "A string that identifies the Automation."
        title: "Automation Campaign ID"
        readOnly: true
      create_time:
        type: "string"
        format: "date-time"
        description: "The date and time the Automation was created in ISO 8601 format."
        title: "Create Time"
        readOnly: true
      start_time:
        type: "string"
        format: "date-time"
        description: "The date and time the Automation was started in ISO 8601 format."
        title: "Start Time"
        readOnly: true
      status:
        type: "string"
        description: "The current status of the Automation."
        title: "Automation Status"
        readOnly: true
        enum:
        - "save"
        - "paused"
        - "sending"
      emails_sent:
        type: "integer"
        description: "The total number of emails sent for the Automation."
        title: "Emails Sent"
        readOnly: true
      recipients:
        $ref: "#/definitions/List"
      settings:
        $ref: "#/definitions/Automation Campaign Settings"
      tracking:
        $ref: "#/definitions/Automation Tracking Options"
      trigger_settings:
        $ref: "#/definitions/Automation Trigger"
      report_summary:
        $ref: "#/definitions/Campaign Report Summary"
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A summary of an individual Automation workflow's settings and content."
    example:
      start_time: "2000-01-23T04:56:07.000+00:00"
      settings:
        auto_footer: true
        use_conversation: true
        authenticate: true
        reply_to: "reply_to"
        to_name: "to_name"
        inline_css: true
        title: "title"
        from_name: "from_name"
      create_time: "2000-01-23T04:56:07.000+00:00"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      recipients:
        segment_opts:
          match: "any"
          saved_segment_id: 6
          conditions:
          - ""
          - ""
        store_id: "1a2df69xxx"
        list_id: "list_id"
        list_name: "list_name"
        list_is_active: true
      emails_sent: 0
      trigger_settings:
        runtime:
          hours:
            type: "send_asap"
          days:
          - "sunday"
          - "sunday"
        workflow_emails_count: 1
        workflow_type: "abandonedBrowse"
        workflow_title: "workflow_title"
      id: "id"
      tracking:
        salesforce:
          notes: true
          campaign: true
        goal_tracking: true
        capsule:
          notes: true
        clicktale: "clicktale"
        text_clicks: true
        ecomm360: true
        opens: true
        google_analytics: "google_analytics"
        html_clicks: true
      status: "save"
      report_summary:
        subscriber_clicks: 9
        click_rate: 3.61607674925191080461672754609026014804840087890625
        opens: 5
        clicks: 7
        unique_opens: 5
        open_rate: 2.3021358869347654518833223846741020679473876953125
  inline_response_200_3:
    type: "object"
    properties:
      automations:
        type: "array"
        description: "An array of objects, each representing an Automation workflow."
        title: "Automation Workflows"
        items:
          $ref: "#/definitions/Automation Workflow"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "An array of objects, each representing an Automation workflow."
    example:
      automations:
      - start_time: "2000-01-23T04:56:07.000+00:00"
        settings:
          auto_footer: true
          use_conversation: true
          authenticate: true
          reply_to: "reply_to"
          to_name: "to_name"
          inline_css: true
          title: "title"
          from_name: "from_name"
        create_time: "2000-01-23T04:56:07.000+00:00"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        recipients:
          segment_opts:
            match: "any"
            saved_segment_id: 6
            conditions:
            - ""
            - ""
          store_id: "1a2df69xxx"
          list_id: "list_id"
          list_name: "list_name"
          list_is_active: true
        emails_sent: 0
        trigger_settings:
          runtime:
            hours:
              type: "send_asap"
            days:
            - "sunday"
            - "sunday"
          workflow_emails_count: 1
          workflow_type: "abandonedBrowse"
          workflow_title: "workflow_title"
        id: "id"
        tracking:
          salesforce:
            notes: true
            campaign: true
          goal_tracking: true
          capsule:
            notes: true
          clicktale: "clicktale"
          text_clicks: true
          ecomm360: true
          opens: true
          google_analytics: "google_analytics"
          html_clicks: true
        status: "save"
        report_summary:
          subscriber_clicks: 9
          click_rate: 3.61607674925191080461672754609026014804840087890625
          opens: 5
          clicks: 7
          unique_opens: 5
          open_rate: 2.3021358869347654518833223846741020679473876953125
      - start_time: "2000-01-23T04:56:07.000+00:00"
        settings:
          auto_footer: true
          use_conversation: true
          authenticate: true
          reply_to: "reply_to"
          to_name: "to_name"
          inline_css: true
          title: "title"
          from_name: "from_name"
        create_time: "2000-01-23T04:56:07.000+00:00"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        recipients:
          segment_opts:
            match: "any"
            saved_segment_id: 6
            conditions:
            - ""
            - ""
          store_id: "1a2df69xxx"
          list_id: "list_id"
          list_name: "list_name"
          list_is_active: true
        emails_sent: 0
        trigger_settings:
          runtime:
            hours:
              type: "send_asap"
            days:
            - "sunday"
            - "sunday"
          workflow_emails_count: 1
          workflow_type: "abandonedBrowse"
          workflow_title: "workflow_title"
        id: "id"
        tracking:
          salesforce:
            notes: true
            campaign: true
          goal_tracking: true
          capsule:
            notes: true
          clicktale: "clicktale"
          text_clicks: true
          ecomm360: true
          opens: true
          google_analytics: "google_analytics"
          html_clicks: true
        status: "save"
        report_summary:
          subscriber_clicks: 9
          click_rate: 3.61607674925191080461672754609026014804840087890625
          opens: 5
          clicks: 7
          unique_opens: 5
          open_rate: 2.3021358869347654518833223846741020679473876953125
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      total_items: 2
  List_1:
    type: "object"
    properties:
      list_id:
        type: "string"
        example: "1a2df69xxx"
        description: "The id of the List."
        title: "List ID"
      store_id:
        type: "string"
        example: "1a2df69xxx"
        description: "The id of the store."
        title: "Store ID"
    description: "List settings for the Automation."
  Automation Campaign Settings_1:
    type: "object"
    properties:
      from_name:
        type: "string"
        description: "The 'from' name for the Automation (not an email address)."
        title: "From Name"
      reply_to:
        type: "string"
        description: "The reply-to email address for the Automation."
        title: "Reply To Address"
    description: "The settings for the Automation workflow."
  Automation Trigger_1:
    type: "object"
    required:
    - "workflow_type"
    properties:
      workflow_type:
        type: "string"
        description: "The type of Automation workflow. Currently only supports 'abandonedCart'."
        title: "Workflow Type"
    description: "Trigger settings for the Automation."
  Automation Workflow_1:
    type: "object"
    required:
    - "recipients"
    - "trigger_settings"
    properties:
      recipients:
        $ref: "#/definitions/List_1"
      settings:
        $ref: "#/definitions/Automation Campaign Settings_1"
      trigger_settings:
        $ref: "#/definitions/Automation Trigger_1"
    title: "Automation Workflow"
    description: "A summary of an individual Automation workflow's settings and content."
  Automation Delay:
    type: "object"
    properties:
      amount:
        type: "integer"
        description: "The delay amount for an Automation email."
        title: "Delay Amount"
        readOnly: true
      type:
        type: "string"
        description: "The type of delay for an Automation email."
        title: "Delay Type"
        enum:
        - "now"
        - "day"
        - "hour"
        - "week"
      direction:
        type: "string"
        description: "Whether the delay settings describe before or after the delay\
          \ action of an Automation email."
        title: "Delay Direction"
        enum:
        - "before"
        - "after"
      action:
        type: "string"
        description: "The action that triggers the delay of an Automation email."
        title: "Delay Action"
        enum:
        - "previous_campaign_sent"
        - "previous_campaign_opened"
        - "previous_campaign_not_opened"
        - "previous_campaign_clicked_any"
        - "previous_campaign_not_clicked_any"
        - "previous_campaign_specific_clicked"
        - "ecomm_bought_any"
        - "ecomm_bought_product"
        - "ecomm_bought_category"
        - "ecomm_not_bought_any"
        - "ecomm_abandoned_cart"
        - "campaign_sent"
        - "opened_email"
        - "not_opened_email"
        - "clicked_email"
        - "not_clicked_email"
        - "campaign_specific_clicked"
        - "manual"
        - "signup"
        - "merge_changed"
        - "group_add"
        - "group_remove"
        - "mandrill_sent"
        - "mandrill_opened"
        - "mandrill_clicked"
        - "mandrill_any"
        - "api"
        - "goal"
        - "annual"
        - "birthday"
        - "date"
        - "date_added"
        - "tag_add"
      action_description:
        type: "string"
        example: "subscribers purchase anything from your store"
        description: "The user-friendly description of the action that triggers an\
          \ Automation email."
        title: "Delay Action Description"
        readOnly: true
      full_description:
        type: "string"
        example: "1 day after subscribers purchase anything from your store"
        description: "The user-friendly description of the delay and trigger action\
          \ settings for an Automation email."
        title: "Full Delay Description"
        readOnly: true
    description: "The delay settings for an Automation email."
    example:
      amount: 6
      full_description: "1 day after subscribers purchase anything from your store"
      action_description: "subscribers purchase anything from your store"
      action: "previous_campaign_sent"
      type: "now"
      direction: "before"
  Segment Options_1:
    type: "object"
    properties:
      saved_segment_id:
        type: "integer"
        description: "The id for an existing saved segment."
        title: "Saved Segment ID"
      prebuilt_segment_id:
        type: "string"
        example: "subscribers-female"
        description: "The prebuilt segment id, if a prebuilt segment has been designated\
          \ for this campaign."
        title: "Prebuilt Segment Id"
      match:
        type: "string"
        description: "Segment match type."
        title: "Match Type"
        enum:
        - "any"
        - "all"
      conditions:
        type: "array"
        description: "Segment match conditions. There are multiple possible types,\
          \ see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas)."
        title: "Segment Type"
        items:
          x-oneOf:
          - type: "object"
            title: "Aim Segment"
            description: "Segment by interaction with a specific campaign."
            properties:
              condition_type:
                type: "string"
                x-value: "Aim"
                enum:
                - "Aim"
              field:
                type: "string"
                enum:
                - "aim"
                title: "Segment Field"
                description: "Segment by interaction with a specific campaign."
                example: "aim"
              op:
                type: "string"
                enum:
                - "open"
                - "click"
                - "sent"
                - "noopen"
                - "noclick"
                - "nosent"
                title: "Segment Operator"
                description: "The status of the member with regard to their campaign\
                  \ interaction. One of the following: opened, clicked, was sent,\
                  \ didn't open, didn't click, or was not sent."
                example: "open"
              value:
                type: "string"
                title: "Segment Data"
                description: "Either the web id value for a specific campaign or 'any'\
                  \ to account for subscribers who have/have not interacted with any\
                  \ campaigns."
                example: "any"
          - type: "object"
            title: "Automation Segment"
            description: "Segment by interaction with an Automation workflow."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "Automation"
                enum:
                - "Automation"
              field:
                type: "string"
                enum:
                - "automation"
                title: "Segment Field"
                description: "Segment by interaction with an Automation workflow."
                example: "automation"
              op:
                type: "string"
                enum:
                - "started"
                - "completed"
                - "not_started"
                - "not_completed"
                title: "Segment Operator"
                description: "The status of the member with regard to the automation\
                  \ workflow. One of the following: has started the workflow, has\
                  \ completed the workflow, has not started the workflow, or has not\
                  \ completed the workflow."
                example: "started"
              value:
                type: "string"
                title: "Segment Data"
                description: "The web id for the automation workflow to segment against."
                example: "2135217"
          - type: "object"
            title: "Poll Activity Segment"
            description: "Segment by poll activity."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "CampaignPoll"
                enum:
                - "CampaignPoll"
              field:
                type: "string"
                enum:
                - "poll"
                title: "Segment Field"
                description: "Segment by poll activity."
                example: "poll"
              op:
                type: "string"
                enum:
                - "member"
                - "notmember"
                title: "Segment Operator"
                description: "Members have/have not interacted with a specific poll\
                  \ in a Mailchimp email."
                example: "member"
              value:
                type: "number"
                title: "Segment Operator"
                description: "The id for the poll."
                example: 409
          - type: "object"
            title: "Conversation Segment"
            description: "Segment by interaction with a campaign via Conversations."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "Conversation"
                enum:
                - "Conversation"
              field:
                type: "string"
                enum:
                - "conversation"
                title: "Segment Field"
                description: "Segment by interaction with a campaign via Conversations."
                example: "conversation"
              op:
                type: "string"
                enum:
                - "member"
                - "notmember"
                title: "Segment Operator"
                description: "The status of a member's interaction with a conversation.\
                  \ One of the following: has replied or has not replied."
                example: "member"
              value:
                type: "string"
                title: "Segment Data"
                description: "The web id value for a specific campaign or 'any' to\
                  \ account for subscribers who have/have not interacted with any\
                  \ campaigns."
                example: "any"
          - type: "object"
            title: "Date Segment"
            description: "Segment by a specific date field."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "Date"
                enum:
                - "Date"
              field:
                type: "string"
                enum:
                - "timestamp_opt"
                - "info_changed"
                - "ecomm_date"
                title: "Segment Field"
                description: "The type of date field to segment on: The opt-in time\
                  \ for a signup, the date the subscriber was last updated, or the\
                  \ date of their last ecomm purchase."
                example: "timestamp_opt"
              op:
                type: "string"
                enum:
                - "greater"
                - "less"
                - "is"
                - "not"
                - "blank"
                - "blank_not"
                - "within"
                - "notwithin"
                title: "Segment Operator"
                description: "When the event took place:  Before, after, is a specific\
                  \ date, is not a specific date, is blank, or is not blank."
                example: "greater"
              value:
                type: "string"
                title: "Segment Data"
                description: "What type of data to segment on: a specific date, a\
                  \ specific campaign, or the last campaign sent."
                example: "date"
              extra:
                type: "string"
                title: "Segment Extra Value"
                description: "When segmenting on 'date' or 'campaign', the date for\
                  \ the segment formatted as YYYY-MM-DD or the web id for the campaign."
                example: "2015-01-30"
          - type: "object"
            title: "Email Client Segment"
            description: "Segment by use of a particular email client."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "EmailClient"
                enum:
                - "EmailClient"
              field:
                type: "string"
                enum:
                - "email_client"
                title: "Segment Field"
                description: "Segment by use of a particular email client."
                example: "email_client"
              op:
                type: "string"
                enum:
                - "client_is"
                - "client_not"
                title: "Segment Operator"
                description: "The operation to determine whether we select clients\
                  \ that match the value, or clients that do not match the value."
                example: "client_is"
              value:
                type: "string"
                title: "Segment Data"
                description: "The name of the email client."
                example: "Gmail"
          - type: "object"
            title: "Language Segment"
            description: "Segment by language."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "Language"
                enum:
                - "Language"
              field:
                type: "string"
                enum:
                - "language"
                title: "Segment Field"
                description: "Segmenting based off of a subscriber's language."
                example: "language"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                title: "Segment Operator"
                description: "Whether the member's language is or is not set to a\
                  \ specific language."
                example: "is"
              value:
                type: "string"
                title: "Segment Data"
                description: "A two-letter language identifier."
                example: "en"
          - type: "object"
            title: "Member Rating Segment"
            description: "Segment by member rating."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "MemberRating"
                enum:
                - "MemberRating"
              field:
                type: "string"
                enum:
                - "rating"
                title: "Segment Field"
                description: "Segment by member rating."
                example: "rating"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "greater"
                - "less"
                title: "Segment Operator"
                description: "Members who have have a rating that is/not exactly a\
                  \ given number or members who have a rating greater/less than a\
                  \ given number."
                example: "greater"
              value:
                type: "number"
                title: "Segment Operator"
                description: "The star rating number to segment against."
                example: 4
          - type: "object"
            title: "Signup Source Segment"
            description: "Segment by signup source."
            required:
            - "field"
            - "condition_type"
            - "op"
            properties:
              condition_type:
                type: "string"
                enum:
                - "SignupSource"
                x-value: "SignupSource"
                title: "Type"
              field:
                type: "string"
                enum:
                - "source"
                title: "Segment Field"
                example: "source"
              op:
                type: "string"
                enum:
                - "source_is"
                - "source_not"
                title: "Segment Operator"
                description: "Whether the member's signup source was/was not a particular\
                  \ value."
                example: "source_is"
              value:
                type: "string"
                title: "Segment Data"
                description: "The signup source."
                example: "List Import"
          - type: "object"
            title: "Survey Monkey Segment"
            description: "Segment by interaction with a SurveyMonkey survey."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "SurveyMonkey"
                enum:
                - "SurveyMonkey"
              field:
                type: "string"
                enum:
                - "survey_monkey"
                title: "Segment Field"
                description: "Segment by interaction with a SurveyMonkey survey."
                example: "survey_monkey"
              op:
                type: "string"
                enum:
                - "started"
                - "completed"
                - "not_started"
                - "not_completed"
                title: "Segment Operator"
                description: "The status of the member with regard to the survey.One\
                  \ of the following: has started the survey, has completed the survey,\
                  \ has not started the survey, or has not completed the survey."
                example: "started"
              value:
                type: "string"
                title: "Survey ID"
                description: "The unique ID of the survey monkey survey."
                example: "32179586"
          - type: "object"
            title: "VIP Segment"
            description: "Segment by VIP status."
            required:
            - "field"
            - "op"
            properties:
              condition_type:
                type: "string"
                x-value: "VIP"
                enum:
                - "VIP"
              field:
                type: "string"
                enum:
                - "gmonkey"
                title: "Segment Field"
                description: "Segment by VIP status."
                example: "gmonkey"
              op:
                type: "string"
                enum:
                - "member"
                - "notmember"
                title: "Segment Operator"
                description: "Whether the member is or is not marked as VIP."
                example: "member"
          - type: "object"
            title: "Interests Segment"
            description: "Segment by an interest group merge field."
            properties:
              condition_type:
                type: "string"
                x-value: "Interests"
                enum:
                - "Interests"
              field:
                type: "string"
                title: "Segment Field"
                description: "Segmenting based on interest group information. This\
                  \ should start with 'interests-' followed by the grouping id. Ex.\
                  \ 'interests-123'."
                example: "interests-123"
              op:
                type: "string"
                enum:
                - "interestcontains"
                - "interestcontainsall"
                - "interestnotcontains"
                title: "Segment Operator"
                description: "Whether the member is a part of one, all, or none of\
                  \ the groups."
                example: "interestcontains"
              value:
                type: "array"
                title: "Segment Value"
                description: "An array containing strings, each representing a group\
                  \ id."
                items:
                  type: "string"
                  example:
                  - "44401"
                  - "44405"
                  - "44409"
          - type: "object"
            title: "Ecommerce Category Segment"
            description: "Segment by purchases in specific items or categories."
            properties:
              condition_type:
                type: "string"
                x-value: "EcommCategory"
                enum:
                - "EcommCategory"
              field:
                type: "string"
                enum:
                - "ecomm_cat"
                - "ecomm_prod"
                title: "Segment Field"
                description: "Segment by purchases in specific items or categories."
                example: "ecomm_cat"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "contains"
                - "notcontain"
                - "starts"
                - "ends"
                title: "Segment Operator"
                description: "A member who has purchased from a category/specific\
                  \ item that is/is not a specific name, where the category/item name\
                  \ contains/doesn't contain a specific phrase or string, or a category/item\
                  \ name that starts/ends with a string."
                example: "is"
              value:
                type: "string"
                title: "Segment Data"
                description: "The ecommerce category/item information."
                example: "Product"
          - type: "object"
            title: "Ecommerce Number Segment"
            description: "Segment by average spent total, number of orders, total\
              \ number of products purchased, or average number of products per order."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "EcommNumber"
                enum:
                - "EcommNumber"
              field:
                type: "string"
                enum:
                - "ecomm_spent_avg"
                - "ecomm_orders"
                - "ecomm_prod_all"
                - "ecomm_avg_ord"
                title: "Segment Field"
                description: "Segment by average spent total, number of orders, total\
                  \ number of products purchased, or average number of products per\
                  \ order."
                example: "ecomm_orders"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "greater"
                - "less"
                title: "Segment Operator"
                description: "Members who have spent exactly, have not spent exactly,\
                  \ spent more, or spent less than the segment value."
                example: "greater"
              value:
                type: "number"
                title: "Segment Operator"
                description: "Members who have spent exactly, have not spent exactly,\
                  \ spent more, or spent less than this amount."
                example: 42
          - type: "object"
            title: "Ecommerce Purchased Segment"
            description: "Segment by whether someone has purchased anything."
            properties:
              condition_type:
                type: "string"
                x-value: "EcommPurchased"
                enum:
                - "EcommPurchased"
              field:
                type: "string"
                enum:
                - "ecomm_purchased"
                title: "Segment Field"
                description: "Segment by whether someone has purchased anything."
                example: "ecomm_purchased"
              op:
                type: "string"
                enum:
                - "member"
                - "notmember"
                title: "Segment Operator"
                description: "Members who have have ('member') or have not ('notmember')\
                  \ purchased."
                example: "member"
          - type: "object"
            title: "Ecommerce Spent Segment"
            description: "Segment by amount spent on a single order or across all\
              \ orders."
            properties:
              condition_type:
                type: "string"
                x-value: "EcommSpent"
                enum:
                - "EcommSpent"
              field:
                type: "string"
                enum:
                - "ecomm_spent_one"
                - "ecomm_spent_all"
                title: "Segment Field"
                description: "Segment by amount spent on a single order or across\
                  \ all orders."
                example: "ecomm_spent_one"
              op:
                type: "string"
                enum:
                - "greater"
                - "less"
                title: "Segment Operator"
                description: "Members who have spent 'more' or 'less' than then specified\
                  \ value."
                example: "greater"
              value:
                type: "integer"
                title: "Segment Data"
                description: "The total amount a member spent."
                example: 42
          - type: "object"
            title: "Ecommerce Purchased Store Segment"
            description: "Segment by purchases from a specific store."
            properties:
              condition_type:
                type: "string"
                x-value: "EcommStore"
                enum:
                - "EcommStore"
              field:
                type: "string"
                enum:
                - "ecomm_store"
                title: "Segment Field"
                description: "Segment by purchases from a specific store."
                example: "ecomm_store"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                title: "Segment Operator"
                description: "Members who have or have not purchased from a specific\
                  \ store."
                example: "is"
              value:
                type: "string"
                title: "Segment Operator"
                description: "The store id to segment against."
                example: "289"
          - type: "object"
            title: "Goal Activity Segment"
            description: "Segment by Goal activity."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "GoalActivity"
                enum:
                - "GoalActivity"
              field:
                type: "string"
                enum:
                - "goal"
                title: "Segment Field"
                description: "Segment by Goal activity."
                example: "goal"
              op:
                type: "string"
                enum:
                - "is"
                - "goal_not"
                - "contains"
                - "goal_notcontain"
                - "starts"
                - "ends"
                title: "Segment Operator"
                description: "Whether the website URL is/not exactly, contains/doesn't\
                  \ contain, starts with/ends with a string."
                example: "is"
              value:
                type: "string"
                title: "Segment Value"
                description: "The URL to check Goal activity against."
          - type: "object"
            title: "Goal Timestamp Segment"
            description: "Segment by most recent interaction with a website."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "GoalTimestamp"
                enum:
                - "GoalTimestamp"
              field:
                type: "string"
                enum:
                - "goal_last_visited"
                title: "Segment Field"
                description: "Segment by most recent interaction with a website."
                example: "goal_last_visited"
              op:
                type: "string"
                enum:
                - "greater"
                - "less"
                - "is"
                title: "Segment Operator"
                description: "Whether the website activity happened after, before,\
                  \ or at a given timestamp."
                example: "greater"
              value:
                type: "string"
                title: "Segment Value"
                description: "The date to check Goal activity against."
                example: "2015-07-20 19:45:21"
          - type: "object"
            title: "Similar Subscribers Segment Member Segment"
            description: "Segment by similar subscribers."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "FuzzySegment"
                enum:
                - "FuzzySegment"
              field:
                type: "string"
                enum:
                - "fuzzy_segment"
                title: "Segment Field"
                description: "Segment by similar subscribers."
                example: "fuzzy_segment"
              op:
                type: "string"
                enum:
                - "fuzzy_is"
                - "fuzzy_not"
                title: "Segment Operator"
                description: "Members who are/are not apart of a 'similar subscribers'\
                  \ segment."
                example: "fuzzy_is"
              value:
                type: "number"
                title: "Segment Operator"
                description: "The id for the 'similar subscribers' segment."
                example: 48433
          - type: "object"
            title: "Static Segment Member Segment"
            description: "Segment by a given static segment."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "StaticSegment"
                enum:
                - "StaticSegment"
              field:
                type: "string"
                enum:
                - "static_segment"
                title: "Segment Field"
                description: "Segment by a given static segment."
                example: "static_segment"
              op:
                type: "string"
                enum:
                - "static_is"
                - "static_not"
                title: "Segment Operator"
                description: "Members who are/are not apart of a static segment."
                example: "static_is"
              value:
                type: "number"
                title: "Segment Operator"
                description: "The id for the static segment."
                example: 48433
          - type: "object"
            title: "Location-Based Segment"
            description: "Segment by a specific country or US state."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "IPGeoCountryState"
                enum:
                - "IPGeoCountryState"
              field:
                type: "string"
                enum:
                - "ipgeo"
                title: "Segment Field"
                description: "Segmenting subscribers who are within a specific location."
                example: "ipgeo"
              op:
                type: "string"
                enum:
                - "ipgeocountry"
                - "ipgeonotcountry"
                - "ipgeostate"
                - "ipgeonotstate"
                title: "Segment Operator"
                description: "Segment members who are within a specific country or\
                  \ US state."
                example: "ipgeocountry"
              value:
                type: "string"
                title: "Segment Data"
                description: "The two-letter country code or US state abbreviation."
                example: "US"
          - type: "object"
            title: "Geolocation Segment"
            description: "Segment by a specific geographic region."
            required:
            - "field"
            - "op"
            - "value"
            - "addr"
            - "lat"
            - "lng"
            properties:
              condition_type:
                type: "string"
                x-value: "IPGeoIn"
                enum:
                - "IPGeoIn"
              field:
                type: "string"
                enum:
                - "ipgeo"
                title: "Segment Field"
                description: "Segmenting subscribers who are within a specific location."
                example: "ipgeo"
              op:
                type: "string"
                enum:
                - "ipgeoin"
                - "ipgeonotin"
                title: "Segment Operator"
                description: "Segment members who are within a specific geographic\
                  \ region."
                example: "ipgeoin"
              value:
                type: "integer"
                title: "Segment Data"
                description: "The radius of the target location."
                example: 42
              addr:
                type: "string"
                title: "Segment Location Address"
                description: "The address of the target location."
                example: "Atlanta, GA, USA"
              lat:
                type: "string"
                title: "Segment Location Latitude"
                description: "The latitude of the target location."
                example: "33.7489954"
              lng:
                type: "string"
                title: "Segment Location Longitude"
                description: "The longitude of the target location."
                example: "-84.3879824"
          - type: "object"
            title: "US Zip Code Segment"
            description: "Segment by a specific US ZIP code."
            required:
            - "field"
            - "op"
            - "value"
            - "extra"
            properties:
              condition_type:
                type: "string"
                x-value: "IPGeoInZip"
                enum:
                - "IPGeoInZip"
              field:
                type: "string"
                enum:
                - "ipgeo"
                title: "Segment Field"
                description: "Segmenting subscribers who are within a specific location."
                example: "ipgeo"
              op:
                type: "string"
                enum:
                - "ipgeoinzip"
                title: "Segment Operator"
                description: "Segment members who are within a specific US zip code."
                example: "ipgeoinzip"
              value:
                type: "integer"
                title: "Segment Data"
                description: "The radius of the target location."
                example: 25
              extra:
                type: "integer"
                title: "Extra Data"
                description: "The zip code to segment against."
                example: 30318
          - type: "object"
            title: "Unknown Location-Based Segment"
            description: "Segment members whose location information is unknown."
            required:
            - "field"
            - "op"
            properties:
              condition_type:
                type: "string"
                x-value: "IPGeoUnknown"
                enum:
                - "IPGeoUnknown"
              field:
                type: "string"
                enum:
                - "ipgeo"
                title: "Segment Field"
                description: "Segmenting subscribers who are within a specific location."
                example: "ipgeo"
              op:
                type: "string"
                enum:
                - "ipgeounknown"
                title: "Segment Operator"
                description: "Segment members for which location information is unknown."
                example: "ipgeounknown"
          - type: "object"
            title: "Zip Code Location-Based Segment"
            description: "Segment by a specific US ZIP code."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "IPGeoZip"
                enum:
                - "IPGeoZip"
              field:
                type: "string"
                enum:
                - "ipgeo"
                title: "Segment Field"
                description: "Segmenting subscribers who are within a specific location."
                example: "ipgeo"
              op:
                type: "string"
                enum:
                - "ipgeoiszip"
                - "ipgeonotzip"
                title: "Segment Operator"
                description: "Segment members who are/are not within a specific US\
                  \ zip code."
                example: "ipgeonotzip"
              value:
                type: "integer"
                title: "Segment Data"
                description: "The 5-digit zip code."
                example: 30318
          - type: "object"
            title: "Social Profiles Age Segment"
            description: "Segment by age ranges in Social Profiles data."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "SocialAge"
                enum:
                - "SocialAge"
              field:
                type: "string"
                enum:
                - "social_age"
                title: "Segment Field"
                description: "Segment by age ranges in Social Profiles data."
                example: "social_age"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                title: "Segment Operator"
                description: "Members who are/not the exact criteria listed."
                example: "is"
              value:
                type: "string"
                enum:
                - "18-24"
                - "25-34"
                - "35-54"
                - "55+"
                title: "Segment Operator"
                description: "The age range to segment."
                example: "35-54"
          - type: "object"
            title: "Social Profiles Gender Segment"
            description: "Segment by listed gender in Social Profiles data."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "SocialGender"
                enum:
                - "SocialGender"
              field:
                type: "string"
                enum:
                - "social_gender"
                title: "Segment Field"
                description: "Segment by listed gender in Social Profiles data."
                example: "social_gender"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                title: "Segment Operator"
                description: "Members who are/not the exact criteria listed."
                example: "is"
              value:
                type: "string"
                enum:
                - "male"
                - "female"
                title: "Segment Operator"
                description: "The Social Profiles gender to segment."
                example: "female"
          - type: "object"
            title: "Social Profiles Influence Segment"
            description: "Segment by influence rating in Social Profiles data."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "SocialInfluence"
                enum:
                - "SocialInfluence"
              field:
                type: "string"
                enum:
                - "social_influence"
                title: "Segment Field"
                description: "Segment by influence rating in Social Profiles data."
                example: "social_influence"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "greater"
                - "less"
                title: "Segment Operator"
                description: "Members who have a rating that is/not or greater/less\
                  \ than the rating provided."
                example: "greater"
              value:
                type: "number"
                title: "Segment Operator"
                description: "The Social Profiles influence rating to segment."
                example: 2
          - type: "object"
            title: "Social Profiles Social Network Segment"
            description: "Segment by social network in Social Profiles data."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "SocialNetworkMember"
                enum:
                - "SocialNetworkMember"
              field:
                type: "string"
                enum:
                - "social_network"
                title: "Segment Field"
                description: "Segment by social network in Social Profiles data."
                example: "social_network"
              op:
                type: "string"
                enum:
                - "member"
                - "notmember"
                title: "Segment Operator"
                description: "Members who are/not on a given social network."
                example: "member"
              value:
                type: "string"
                enum:
                - "twitter"
                - "facebook"
                - "linkedin"
                - "flickr"
                - "foursquare"
                - "lastfm"
                - "myspace"
                - "quora"
                - "vimeo"
                - "yelp"
                - "youtube"
                title: "Segment Operator"
                description: "The social network to segment against."
                example: "twitter"
          - type: "object"
            title: "Social Profiles Social Network Follow Segment"
            description: "Segment by social network in Social Profiles data."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "SocialNetworkFollow"
                enum:
                - "SocialNetworkFollow"
              field:
                type: "string"
                enum:
                - "social_network"
                title: "Segment Field"
                description: "Segment by social network in Social Profiles data."
                example: "social_network"
              op:
                type: "string"
                enum:
                - "follow"
                - "notfollow"
                title: "Segment Operator"
                description: "Members who are/not following a linked account on a\
                  \ given social network."
                example: "follow"
              value:
                type: "string"
                enum:
                - "twitter_follow"
                title: "Segment Operator"
                description: "The social network to segment against."
                example: "twitter_follow"
          - type: "object"
            title: "Address Merge Field Segment"
            description: "Segment by an address-type merge field."
            required:
            - "field"
            - "op"
            properties:
              condition_type:
                type: "string"
                x-value: "AddressMerge"
                enum:
                - "AddressMerge"
              field:
                type: "string"
                title: "Segment Field"
                description: "An address-type merge field to segment."
                example: "MMERGE3"
              op:
                type: "string"
                enum:
                - "contains"
                - "notcontain"
                - "blank"
                - "blank_not"
                title: "Segment Operator"
                description: "Whether the member's address merge field contains/does\
                  \ not contain a value or is/is not blank."
                example: "contains"
              value:
                type: "string"
                title: "Segment Value"
                description: "The value to segment a text merge field with."
                example: "Atlanta"
          - type: "object"
            title: "Address/Zip Merge Field Segment"
            description: "Segment by an address-type merge field within a given distance."
            required:
            - "field"
            - "op"
            - "value"
            - "extra"
            properties:
              condition_type:
                type: "string"
                x-value: "ZipMerge"
                enum:
                - "ZipMerge"
              field:
                type: "string"
                title: "Segment Field"
                description: "An address or zip-type merge field to segment."
                example: "MMERGE2"
              op:
                type: "string"
                enum:
                - "geoin"
                title: "Segment Operator"
                description: "Whether the member's address merge field is within a\
                  \ given distance from a city or zip."
                example: "geoin"
              value:
                type: "string"
                title: "Segment Value"
                description: "The distance from the city/zip."
                example: "25"
              extra:
                type: "string"
                title: "Segment Extra"
                description: "The city or the zip being used to segment against."
                example: "30318"
          - type: "object"
            title: "Birthday Merge Field Segment"
            description: "Segment by a contact's birthday."
            required:
            - "field"
            - "op"
            properties:
              condition_type:
                type: "string"
                x-value: "BirthdayMerge"
                enum:
                - "BirthdayMerge"
              field:
                type: "string"
                title: "Segment Field"
                description: "A date merge field to segment."
                example: "MMERGE4"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "blank"
                - "blank_not"
                title: "Segment Operator"
                description: "Whether the member's birthday merge information is/is\
                  \ not a certain date or is/is not blank."
                example: "is"
              value:
                type: "string"
                title: "Segment Value"
                description: "A date to segment against (mm/dd)."
                example: "01/30"
          - type: "object"
            title: "Date Merge Field Segment"
            description: "Segment by a given date merge field."
            required:
            - "field"
            - "op"
            properties:
              condition_type:
                type: "string"
                x-value: "DateMerge"
                enum:
                - "DateMerge"
              field:
                type: "string"
                title: "Segment Field"
                description: "A date merge field to segment."
                example: "MMERGE5"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "less"
                - "blank"
                - "blank_not"
                - "greater"
                title: "Segment Operator"
                description: "Whether the member's merge information is/is not, is\
                  \ greater/less than a value or is/is not blank."
                example: "is"
              value:
                type: "string"
                title: "Segment Value"
                description: "A date to segment against."
                example: "01/30/2015"
          - type: "object"
            title: "Dropdown/Radio Merge Field Segment"
            description: "An individual segment condition"
            required:
            - "field"
            - "op"
            properties:
              condition_type:
                type: "string"
                x-value: "SelectMerge"
                enum:
                - "SelectMerge"
              field:
                type: "string"
                title: "Segment Field"
                description: "A merge field to segment."
                example: "MMERGE6"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "blank"
                - "blank_not"
                - "notcontain"
                - "contains"
                title: "Segment Operator"
                description: "Whether the member's merge information is/is not a value\
                  \ or is/is not blank."
                example: "is"
              value:
                type: "string"
                title: "Segment Value"
                description: "The value to segment a text merge field with."
                example: "Second Choice"
          - type: "object"
            title: "Text or Number Merge Field Segment"
            description: "Segment by a given text or number merge field."
            required:
            - "field"
            - "op"
            properties:
              condition_type:
                type: "string"
                x-value: "TextMerge"
                enum:
                - "TextMerge"
              field:
                type: "string"
                title: "Segment Field"
                description: "A text or number merge field to segment."
                example: "MMERGE7"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "contains"
                - "notcontain"
                - "starts"
                - "ends"
                - "greater"
                - "less"
                - "blank"
                - "blank_not"
                title: "Segment Operator"
                description: "Whether the member's merge information is/is not, contains/does\
                  \ not contain, starts/ends with, or is greater/less than a value"
                example: "contains"
              value:
                type: "string"
                title: "Segment Value"
                description: "The value to segment a text or number merge field with."
                example: "Freddie's Jokes"
          - type: "object"
            title: "Email Segment"
            description: "Segment by email address."
            required:
            - "field"
            - "op"
            properties:
              condition_type:
                type: "string"
                x-value: "EmailAddress"
                enum:
                - "EmailAddress"
              field:
                type: "string"
                enum:
                - "merge0"
                - "EMAIL"
                title: "Segment Field"
                description: "Segmenting based off of a subscriber's email address."
                example: "EMAIL"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "contains"
                - "notcontain"
                - "starts"
                - "ends"
                - "greater"
                - "less"
                title: "Segment Operator"
                description: "Whether the email address is/not exactly, contains/doesn't\
                  \ contain, starts/ends with a string."
              value:
                type: "string"
                title: "Segment Value"
                description: "The value to compare the email against."
                example: "urist.mcvankab@freddiesjokes.com"
          - type: "object"
            title: "Predicted Gender Segment"
            description: "Segment by predicted gender."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "PredictedGender"
                enum:
                - "PredictedGender"
              field:
                type: "string"
                enum:
                - "predicted_gender"
                title: "Segment Field"
                description: "Segment by predicted gender."
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                title: "Segment Operator"
                description: "Members who are/not the exact criteria listed."
                example: "is"
              value:
                type: "string"
                enum:
                - "male"
                - "female"
                title: "Segment Operator"
                description: "The predicted gender to segment."
                example: "female"
          - type: "object"
            title: "Predicted Age Segment"
            description: "Segment by predicted age."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "PredictedAge"
                enum:
                - "PredictedAge"
              field:
                type: "string"
                enum:
                - "predicted_age_range"
                title: "Segment Field"
                description: "Segment by predicted age."
              op:
                type: "string"
                enum:
                - "is"
                title: "Segment Operator"
                description: "Members who are/not the exact criteria listed."
                example: "is"
              value:
                type: "string"
                enum:
                - "18-24"
                - "25-34"
                - "35-44"
                - "45-54"
                - "55-64"
                - "65+"
                title: "Segment Operator"
                description: "The predicted age to segment."
                example: "female"
          - type: "object"
            title: "New Subscribers Prebuilt Segment"
            description: "Segment by when people subscribed."
            properties:
              condition_type:
                type: "string"
                x-value: "NewSubscribers"
                enum:
                - "NewSubscribers"
              field:
                type: "string"
                enum:
                - "timestamp_opt"
                title: "Segment Field"
                description: "Segment by when people subscribed."
              op:
                type: "string"
                enum:
                - "date_within"
                title: "Segment Operator"
                description: "Whe the event took place, namely within a time frame."
              value:
                type: "string"
                title: "Segment Data"
                description: "What type of data to segment on: a specific date, a\
                  \ specific campaign, or the last campaign sent."
          x-discriminator:
            type: "string"
            propertyName: "condition_type"
    description: "An object representing all segmentation options. This object should\
      \ contain a `saved_segment_id` to use an existing segment, or you can create\
      \ a new segment by including both `match` and `conditions` options."
    example:
      prebuilt_segment_id: "subscribers-female"
      match: "any"
      saved_segment_id: 5
      conditions:
      - ""
      - ""
  List_2:
    type: "object"
    properties:
      list_id:
        type: "string"
        description: "The unique list id."
        title: "List ID"
      list_is_active:
        type: "boolean"
        description: "The status of the list used, namely if it's deleted or disabled."
        title: "List Status"
        readOnly: true
      list_name:
        type: "string"
        description: "The name of the list."
        title: "List Name"
        readOnly: true
      segment_text:
        type: "string"
        description: "A description of the [segment](https://mailchimp.com/help/getting-started-with-groups/)\
          \ used for the campaign. Formatted as a string marked up with HTML."
        title: "Segment Text"
        readOnly: true
      recipient_count:
        type: "integer"
        description: "Count of the recipients on the associated list. Formatted as\
          \ an integer."
        title: "Recipient Count"
        readOnly: true
      segment_opts:
        $ref: "#/definitions/Segment Options_1"
    description: "List settings for the campaign."
    example:
      segment_opts:
        prebuilt_segment_id: "subscribers-female"
        match: "any"
        saved_segment_id: 5
        conditions:
        - ""
        - ""
      list_id: "list_id"
      segment_text: "segment_text"
      recipient_count: 5
      list_name: "list_name"
      list_is_active: true
  Campaign Settings:
    type: "object"
    properties:
      subject_line:
        type: "string"
        description: "The subject line for the campaign."
        title: "Campaign Subject Line"
      preview_text:
        type: "string"
        description: "The preview text for the campaign."
        title: "Campaign Preview Text"
      title:
        type: "string"
        description: "The title of the campaign."
        title: "Campaign Title"
      from_name:
        type: "string"
        description: "The 'from' name on the campaign (not an email address)."
        title: "From Name"
      reply_to:
        type: "string"
        description: "The reply-to email address for the campaign."
        title: "Reply To Address"
      authenticate:
        type: "boolean"
        description: "Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/)\
          \ the campaign. Defaults to `true`."
        title: "Authentication"
      auto_footer:
        type: "boolean"
        description: "Automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/)\
          \ to the campaign."
        title: "Auto-Footer"
      inline_css:
        type: "boolean"
        description: "Automatically inline the CSS included with the campaign content."
        title: "Inline CSS"
      auto_tweet:
        type: "boolean"
        description: "Automatically tweet a link to the [campaign archive](https://mailchimp.com/help/about-email-campaign-archives-and-pages/)\
          \ page when the campaign is sent."
        title: "Auto-Tweet"
      auto_fb_post:
        type: "array"
        description: "An array of [Facebook](https://mailchimp.com/help/connect-or-disconnect-the-facebook-integration/)\
          \ page ids to auto-post to."
        title: "Auto Post to Facebook"
        items:
          type: "string"
      fb_comments:
        type: "boolean"
        description: "Allows Facebook comments on the campaign (also force-enables\
          \ the Campaign Archive toolbar). Defaults to `true`."
        title: "Facebook Comments"
      template_id:
        type: "integer"
        description: "The id for the template used in this campaign."
        title: "Template ID"
      drag_and_drop:
        type: "boolean"
        description: "Whether the campaign uses the drag-and-drop editor."
        title: "Drag And Drop Campaign"
        readOnly: true
    description: "Settings for the campaign including the email subject, from name,\
      \ and from email address."
    example:
      auto_footer: true
      subject_line: "subject_line"
      preview_text: "preview_text"
      authenticate: true
      title: "title"
      from_name: "from_name"
      auto_tweet: true
      auto_fb_post:
      - "auto_fb_post"
      - "auto_fb_post"
      fb_comments: true
      drag_and_drop: true
      reply_to: "reply_to"
      inline_css: true
      template_id: 2
  Capsule CRM Tracking_1:
    type: "object"
    properties:
      notes:
        type: "boolean"
        description: "Update contact notes for a campaign based on a subscriber's\
          \ email address."
        title: "Capsule Note"
    description: "Deprecated"
    example:
      notes: true
  Campaign Tracking Options:
    type: "object"
    properties:
      opens:
        type: "boolean"
        description: "Whether to [track opens](https://mailchimp.com/help/about-open-tracking/).\
          \ Defaults to `true`."
        title: "Opens"
      html_clicks:
        type: "boolean"
        description: "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/)\
          \ in the HTML version of the campaign. Defaults to `true`."
        title: "HTML Click Tracking"
      text_clicks:
        type: "boolean"
        description: "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/)\
          \ in the plain-text version of the campaign. Defaults to `true`."
        title: "Plain-Text Click Tracking"
      goal_tracking:
        type: "boolean"
        description: "Deprecated"
        title: "Mailchimp Goal Tracking"
      ecomm360:
        type: "boolean"
        description: "Whether to enable e-commerce tracking."
        title: "E-commerce Tracking"
      google_analytics:
        type: "string"
        description: "The custom slug for [Google Analytics](https://mailchimp.com/help/integrate-google-analytics-with-mailchimp/)\
          \ tracking (max of 50 bytes)."
        title: "Google Analytics Tracking"
      clicktale:
        type: "string"
        description: "The custom slug for [Click Tale](https://mailchimp.com/help/additional-tracking-options-for-campaigns/)\
          \ tracking (max of 50 bytes)."
        title: "ClickTale Analytics Tracking"
      salesforce:
        $ref: "#/definitions/Salesforce CRM Tracking"
      capsule:
        $ref: "#/definitions/Capsule CRM Tracking_1"
    description: "The tracking options for a campaign."
    example:
      salesforce:
        notes: true
        campaign: true
      goal_tracking: true
      capsule:
        notes: true
      clicktale: "clicktale"
      text_clicks: true
      ecomm360: true
      opens: true
      google_analytics: "google_analytics"
      html_clicks: true
  Campaign Social Card:
    type: "object"
    properties:
      image_url:
        type: "string"
        description: "The url for the header image for the card."
        title: "Image URL"
      description:
        type: "string"
        description: "A short summary of the campaign to display."
        title: "Campaign Description"
      title:
        type: "string"
        description: "The title for the card. Typically the subject line of the campaign."
        title: "Title"
    description: "The preview for the campaign, rendered by social networks like Facebook\
      \ and Twitter. [Learn more](https://mailchimp.com/help/enable-and-customize-social-cards/)."
    example:
      image_url: "image_url"
      description: "description"
      title: "title"
  Campaign Report Summary_1:
    type: "object"
    properties:
      opens:
        type: "integer"
        description: "The total number of opens for a campaign."
        title: "Automation Opens"
        readOnly: true
      unique_opens:
        type: "integer"
        description: "The number of unique opens."
        title: "Unique Opens"
        readOnly: true
      open_rate:
        type: "number"
        description: "The number of unique opens divided by the total number of successful\
          \ deliveries."
        title: "Open Rate"
        readOnly: true
      clicks:
        type: "integer"
        description: "The total number of clicks for an campaign."
        title: "Total Clicks"
        readOnly: true
      subscriber_clicks:
        type: "integer"
        description: "The number of unique clicks."
        title: "Unique Subscriber Clicks"
        readOnly: true
      click_rate:
        type: "number"
        description: "The number of unique clicks divided by the total number of successful\
          \ deliveries."
        title: "Click Rate"
        readOnly: true
    description: "For sent campaigns, a summary of opens and clicks."
    example:
      subscriber_clicks: 4
      click_rate: 7.3862819483858839220147274318151175975799560546875
      opens: 7
      clicks: 2
      unique_opens: 9
      open_rate: 3.61607674925191080461672754609026014804840087890625
  Automation Workflow Email:
    type: "object"
    properties:
      id:
        type: "string"
        description: "A string that uniquely identifies the Automation email."
        title: "Automation Email ID"
        readOnly: true
      web_id:
        type: "integer"
        example: 33345484
        description: "The ID used in the Mailchimp web application. View this automation\
          \ in your Mailchimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`."
        title: "Automation Web ID"
        readOnly: true
      workflow_id:
        type: "string"
        description: "A string that uniquely identifies an Automation workflow."
        title: "Workflow ID"
        readOnly: true
      position:
        type: "integer"
        description: "The position of an Automation email in a workflow."
        title: "Email Position"
        readOnly: true
      delay:
        $ref: "#/definitions/Automation Delay"
      create_time:
        type: "string"
        format: "date-time"
        description: "The date and time the campaign was created in ISO 8601 format."
        title: "Create Time"
        readOnly: true
      start_time:
        type: "string"
        format: "date-time"
        description: "The date and time the campaign was started in ISO 8601 format."
        title: "Start Time"
        readOnly: true
      archive_url:
        type: "string"
        description: "The link to the campaign's archive version in ISO 8601 format."
        title: "Archive URL"
        readOnly: true
      status:
        type: "string"
        description: "The current status of the campaign."
        title: "Campaign Status"
        readOnly: true
        enum:
        - "save"
        - "paused"
        - "sending"
      emails_sent:
        type: "integer"
        description: "The total number of emails sent for this campaign."
        title: "Emails Sent"
        readOnly: true
      send_time:
        type: "string"
        format: "date-time"
        description: " The date and time a campaign was sent in ISO 8601 format"
        title: "Send Time"
        readOnly: true
      content_type:
        type: "string"
        description: "How the campaign's content is put together ('template', 'drag_and_drop',\
          \ 'html', 'url')."
        title: "Content Type"
        readOnly: true
      needs_block_refresh:
        type: "boolean"
        example: true
        description: "Determines if the automation email needs its blocks refreshed\
          \ by opening the web-based campaign editor."
        title: "Needs Block Refresh"
        readOnly: true
      has_logo_merge_tag:
        type: "boolean"
        example: true
        description: "Determines if the campaign contains the *|BRAND:LOGO|* merge\
          \ tag."
        title: "Has Logo Merge Tag"
        readOnly: true
      recipients:
        $ref: "#/definitions/List_2"
      settings:
        $ref: "#/definitions/Campaign Settings"
      tracking:
        $ref: "#/definitions/Campaign Tracking Options"
      social_card:
        $ref: "#/definitions/Campaign Social Card"
      trigger_settings:
        $ref: "#/definitions/Automation Trigger"
      report_summary:
        $ref: "#/definitions/Campaign Report Summary_1"
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A summary of an individual Automation workflow email."
    example:
      archive_url: "archive_url"
      settings:
        auto_footer: true
        subject_line: "subject_line"
        preview_text: "preview_text"
        authenticate: true
        title: "title"
        from_name: "from_name"
        auto_tweet: true
        auto_fb_post:
        - "auto_fb_post"
        - "auto_fb_post"
        fb_comments: true
        drag_and_drop: true
        reply_to: "reply_to"
        inline_css: true
        template_id: 2
      workflow_id: "workflow_id"
      create_time: "2000-01-23T04:56:07.000+00:00"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      trigger_settings:
        runtime:
          hours:
            type: "send_asap"
          days:
          - "sunday"
          - "sunday"
        workflow_emails_count: 1
        workflow_type: "abandonedBrowse"
        workflow_title: "workflow_title"
      web_id: 33345484
      tracking:
        salesforce:
          notes: true
          campaign: true
        goal_tracking: true
        capsule:
          notes: true
        clicktale: "clicktale"
        text_clicks: true
        ecomm360: true
        opens: true
        google_analytics: "google_analytics"
        html_clicks: true
      needs_block_refresh: true
      start_time: "2000-01-23T04:56:07.000+00:00"
      delay:
        amount: 6
        full_description: "1 day after subscribers purchase anything from your store"
        action_description: "subscribers purchase anything from your store"
        action: "previous_campaign_sent"
        type: "now"
        direction: "before"
      send_time: "2000-01-23T04:56:07.000+00:00"
      content_type: "content_type"
      social_card:
        image_url: "image_url"
        description: "description"
        title: "title"
      recipients:
        segment_opts:
          prebuilt_segment_id: "subscribers-female"
          match: "any"
          saved_segment_id: 5
          conditions:
          - ""
          - ""
        list_id: "list_id"
        segment_text: "segment_text"
        recipient_count: 5
        list_name: "list_name"
        list_is_active: true
      emails_sent: 1
      id: "id"
      position: 0
      has_logo_merge_tag: true
      status: "save"
      report_summary:
        subscriber_clicks: 4
        click_rate: 7.3862819483858839220147274318151175975799560546875
        opens: 7
        clicks: 2
        unique_opens: 9
        open_rate: 3.61607674925191080461672754609026014804840087890625
  Automation Emails:
    type: "object"
    properties:
      emails:
        type: "array"
        description: "An array of objects, each representing an email in an Automation\
          \ workflow."
        title: "Emails"
        items:
          $ref: "#/definitions/Automation Workflow Email"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A summary of the emails in an Automation workflow."
    example:
      emails:
      - archive_url: "archive_url"
        settings:
          auto_footer: true
          subject_line: "subject_line"
          preview_text: "preview_text"
          authenticate: true
          title: "title"
          from_name: "from_name"
          auto_tweet: true
          auto_fb_post:
          - "auto_fb_post"
          - "auto_fb_post"
          fb_comments: true
          drag_and_drop: true
          reply_to: "reply_to"
          inline_css: true
          template_id: 2
        workflow_id: "workflow_id"
        create_time: "2000-01-23T04:56:07.000+00:00"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        trigger_settings:
          runtime:
            hours:
              type: "send_asap"
            days:
            - "sunday"
            - "sunday"
          workflow_emails_count: 1
          workflow_type: "abandonedBrowse"
          workflow_title: "workflow_title"
        web_id: 33345484
        tracking:
          salesforce:
            notes: true
            campaign: true
          goal_tracking: true
          capsule:
            notes: true
          clicktale: "clicktale"
          text_clicks: true
          ecomm360: true
          opens: true
          google_analytics: "google_analytics"
          html_clicks: true
        needs_block_refresh: true
        start_time: "2000-01-23T04:56:07.000+00:00"
        delay:
          amount: 6
          full_description: "1 day after subscribers purchase anything from your store"
          action_description: "subscribers purchase anything from your store"
          action: "previous_campaign_sent"
          type: "now"
          direction: "before"
        send_time: "2000-01-23T04:56:07.000+00:00"
        content_type: "content_type"
        social_card:
          image_url: "image_url"
          description: "description"
          title: "title"
        recipients:
          segment_opts:
            prebuilt_segment_id: "subscribers-female"
            match: "any"
            saved_segment_id: 5
            conditions:
            - ""
            - ""
          list_id: "list_id"
          segment_text: "segment_text"
          recipient_count: 5
          list_name: "list_name"
          list_is_active: true
        emails_sent: 1
        id: "id"
        position: 0
        has_logo_merge_tag: true
        status: "save"
        report_summary:
          subscriber_clicks: 4
          click_rate: 7.3862819483858839220147274318151175975799560546875
          opens: 7
          clicks: 2
          unique_opens: 9
          open_rate: 3.61607674925191080461672754609026014804840087890625
      - archive_url: "archive_url"
        settings:
          auto_footer: true
          subject_line: "subject_line"
          preview_text: "preview_text"
          authenticate: true
          title: "title"
          from_name: "from_name"
          auto_tweet: true
          auto_fb_post:
          - "auto_fb_post"
          - "auto_fb_post"
          fb_comments: true
          drag_and_drop: true
          reply_to: "reply_to"
          inline_css: true
          template_id: 2
        workflow_id: "workflow_id"
        create_time: "2000-01-23T04:56:07.000+00:00"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        trigger_settings:
          runtime:
            hours:
              type: "send_asap"
            days:
            - "sunday"
            - "sunday"
          workflow_emails_count: 1
          workflow_type: "abandonedBrowse"
          workflow_title: "workflow_title"
        web_id: 33345484
        tracking:
          salesforce:
            notes: true
            campaign: true
          goal_tracking: true
          capsule:
            notes: true
          clicktale: "clicktale"
          text_clicks: true
          ecomm360: true
          opens: true
          google_analytics: "google_analytics"
          html_clicks: true
        needs_block_refresh: true
        start_time: "2000-01-23T04:56:07.000+00:00"
        delay:
          amount: 6
          full_description: "1 day after subscribers purchase anything from your store"
          action_description: "subscribers purchase anything from your store"
          action: "previous_campaign_sent"
          type: "now"
          direction: "before"
        send_time: "2000-01-23T04:56:07.000+00:00"
        content_type: "content_type"
        social_card:
          image_url: "image_url"
          description: "description"
          title: "title"
        recipients:
          segment_opts:
            prebuilt_segment_id: "subscribers-female"
            match: "any"
            saved_segment_id: 5
            conditions:
            - ""
            - ""
          list_id: "list_id"
          segment_text: "segment_text"
          recipient_count: 5
          list_name: "list_name"
          list_is_active: true
        emails_sent: 1
        id: "id"
        position: 0
        has_logo_merge_tag: true
        status: "save"
        report_summary:
          subscriber_clicks: 4
          click_rate: 7.3862819483858839220147274318151175975799560546875
          opens: 7
          clicks: 2
          unique_opens: 9
          open_rate: 3.61607674925191080461672754609026014804840087890625
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      total_items: 1
  Campaign Settings_1:
    type: "object"
    properties:
      subject_line:
        type: "string"
        description: "The subject line for the campaign."
        title: "Campaign Subject Line"
      preview_text:
        type: "string"
        description: "The preview text for the campaign."
        title: "Campaign Preview Text"
      title:
        type: "string"
        description: "The title of the Automation."
        title: "Automation Title"
      from_name:
        type: "string"
        description: "The 'from' name for the Automation (not an email address)."
        title: "From Name"
      reply_to:
        type: "string"
        description: "The reply-to email address for the Automation."
        title: "Reply To Address"
    description: "Settings for the campaign including the email subject, from name,\
      \ and from email address."
  Automation Delay_1:
    type: "object"
    required:
    - "action"
    properties:
      amount:
        type: "integer"
        example: 1
        description: "The delay amount for an automation email."
        title: "Delay Amount"
      type:
        type: "string"
        example: "day"
        description: "The type of delay for an automation email."
        title: "Delay Type"
        enum:
        - "now"
        - "day"
        - "hour"
        - "week"
      direction:
        type: "string"
        example: "after"
        description: "Whether the delay settings describe before or after the delay\
          \ action of an automation email."
        title: "Delay Direction"
        enum:
        - "after"
      action:
        type: "string"
        example: "signup"
        description: "The action that triggers the delay of an automation emails."
        title: "Delay Action"
        enum:
        - "signup"
        - "ecomm_abandoned_browse"
        - "ecomm_abandoned_cart"
    description: "The delay settings for an automation email."
  Update information about a specific workflow email:
    type: "object"
    properties:
      settings:
        $ref: "#/definitions/Campaign Settings_1"
      delay:
        $ref: "#/definitions/Automation Delay_1"
    title: "Update information about a specific workflow email"
    description: "Update information about an individual Automation workflow email."
  Subscriber in Automation Queue:
    type: "object"
    required:
    - "email_address"
    properties:
      id:
        type: "string"
        description: "The MD5 hash of the lowercase version of the list member's email\
          \ address."
        title: "Email Hash"
        readOnly: true
      workflow_id:
        type: "string"
        description: "A string that uniquely identifies an Automation workflow."
        title: "Workflow ID"
        readOnly: true
      email_id:
        type: "string"
        description: "A string that uniquely identifies an email in an Automation\
          \ workflow."
        title: "Automation Email ID"
        readOnly: true
      list_id:
        type: "string"
        description: "A string that uniquely identifies a list."
        title: "List ID"
        readOnly: true
      email_address:
        type: "string"
        description: "The list member's email address."
        title: "Email Address"
      next_send:
        type: "string"
        format: "date-time"
        description: "The date and time of the next send for the workflow email in\
          \ ISO 8601 format."
        title: "Next Send"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "Information about subscribers in an Automation email queue."
    example:
      email_id: "email_id"
      workflow_id: "workflow_id"
      email_address: "email_address"
      list_id: "list_id"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      next_send: "2000-01-23T04:56:07.000+00:00"
      id: "id"
  inline_response_200_4:
    type: "object"
    properties:
      workflow_id:
        type: "string"
        description: "A string that uniquely identifies an Automation workflow."
        title: "Workflow ID"
        readOnly: true
      email_id:
        type: "string"
        description: "A string that uniquely identifies an email in an Automation\
          \ workflow."
        title: "Automation Email ID"
        readOnly: true
      queue:
        type: "array"
        description: "An array of objects, each representing a subscriber queue for\
          \ an email in an Automation workflow."
        title: "Trigger"
        readOnly: true
        items:
          $ref: "#/definitions/Subscriber in Automation Queue"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "An automation workflow"
    example:
      email_id: "email_id"
      workflow_id: "workflow_id"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      total_items: 0
      queue:
      - email_id: "email_id"
        workflow_id: "workflow_id"
        email_address: "email_address"
        list_id: "list_id"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        next_send: "2000-01-23T04:56:07.000+00:00"
        id: "id"
      - email_id: "email_id"
        workflow_id: "workflow_id"
        email_address: "email_address"
        list_id: "list_id"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        next_send: "2000-01-23T04:56:07.000+00:00"
        id: "id"
  Subscriber in Automation Queue_1:
    type: "object"
    required:
    - "email_address"
    properties:
      email_address:
        type: "string"
        description: "The list member's email address."
        title: "Email Address"
    title: "Subscriber in Automation Queue"
    description: "Information about subscribers in an Automation email queue."
  Subscriber in Automation Queue_2:
    type: "object"
    properties:
      id:
        type: "string"
        description: "The MD5 hash of the lowercase version of the list member's email\
          \ address."
        title: "Email Hash"
        readOnly: true
      workflow_id:
        type: "string"
        description: "A string that uniquely identifies an Automation workflow."
        title: "Workflow ID"
        readOnly: true
      email_id:
        type: "string"
        description: "A string that uniquely identifies an email in an Automation\
          \ workflow."
        title: "Automation Email ID"
        readOnly: true
      list_id:
        type: "string"
        description: "A string that uniquely identifies a list."
        title: "List ID"
        readOnly: true
      list_is_active:
        type: "boolean"
        description: "The status of the list used, namely if it's deleted or disabled."
        title: "List Status"
        readOnly: true
      email_address:
        type: "string"
        description: "The list member's email address."
        title: "Email Address"
      next_send:
        type: "string"
        format: "date-time"
        description: "The date and time of the next send for the workflow email in\
          \ ISO 8601 format."
        title: "Next Send"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "Information about subscribers in an Automation email queue."
    example:
      email_id: "email_id"
      workflow_id: "workflow_id"
      email_address: "email_address"
      list_id: "list_id"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      next_send: "2000-01-23T04:56:07.000+00:00"
      id: "id"
      list_is_active: true
  Subscriber Removed from Automation Workflow:
    type: "object"
    properties:
      id:
        type: "string"
        description: "The MD5 hash of the lowercase version of the list member's email\
          \ address."
        title: "Email Hash"
        readOnly: true
      workflow_id:
        type: "string"
        description: "A string that uniquely identifies an Automation workflow."
        title: "Workflow ID"
        readOnly: true
      list_id:
        type: "string"
        description: "A string that uniquely identifies a list."
        title: "List ID"
        readOnly: true
      email_address:
        type: "string"
        description: "The list member's email address."
        title: "Email Address"
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A summary of a subscriber removed from an Automation workflow."
    example:
      workflow_id: "workflow_id"
      email_address: "email_address"
      list_id: "list_id"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      id: "id"
  Removed Subscribers:
    type: "object"
    properties:
      workflow_id:
        type: "string"
        description: "A string that uniquely identifies an Automation workflow."
        title: "Workflow ID"
        readOnly: true
      subscribers:
        type: "array"
        description: "An array of objects, each representing a subscriber who was\
          \ removed from an Automation workflow."
        title: "Trigger"
        readOnly: true
        items:
          $ref: "#/definitions/Subscriber Removed from Automation Workflow"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A summary of the subscribers who were removed from an Automation\
      \ workflow."
    example:
      workflow_id: "workflow_id"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      subscribers:
      - workflow_id: "workflow_id"
        email_address: "email_address"
        list_id: "list_id"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        id: "id"
      - workflow_id: "workflow_id"
        email_address: "email_address"
        list_id: "list_id"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        id: "id"
      total_items: 0
  Subscriber in Automation Queue_3:
    type: "object"
    required:
    - "email_address"
    properties:
      email_address:
        type: "string"
        description: "The list member's email address."
        title: "Email Address"
    title: "Subscriber in Automation Queue"
    description: "Information about subscribers in an Automation email queue."
  Batch:
    type: "object"
    properties:
      id:
        type: "string"
        description: "A string that uniquely identifies this batch request."
        title: "Batch ID"
        readOnly: true
      status:
        type: "string"
        description: "The status of the batch call. [Learn more](https://mailchimp.com/developer/marketing/guides/run-async-requests-batch-endpoint/#check-the-status-of-a-batch-operation)\
          \ about the batch operation status."
        title: "Status"
        readOnly: true
        enum:
        - "pending"
        - "preprocessing"
        - "started"
        - "finalizing"
        - "finished"
      total_operations:
        type: "integer"
        description: "The total number of operations to complete as part of this batch\
          \ request. For GET requests requiring pagination, each page counts as a\
          \ separate operation."
        title: "Total Operations"
        readOnly: true
      finished_operations:
        type: "integer"
        description: "The number of completed operations. This includes operations\
          \ that returned an error."
        title: "Finished Operations"
        readOnly: true
      errored_operations:
        type: "integer"
        description: "The number of completed operations that returned an error."
        title: "Error Operations"
        readOnly: true
      submitted_at:
        type: "string"
        format: "date-time"
        description: "The date and time when the server received the batch request\
          \ in ISO 8601 format."
        title: "Submitted At"
        readOnly: true
      completed_at:
        type: "string"
        format: "date-time"
        description: "The date and time when all operations in the batch request completed\
          \ in ISO 8601 format."
        title: "Completed At"
        readOnly: true
      response_body_url:
        type: "string"
        description: "The URL of the gzipped archive of the results of all the operations."
        title: "Response Body URL"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "The status of a batch request"
    example:
      finished_operations: 6
      completed_at: "2000-01-23T04:56:07.000+00:00"
      submitted_at: "2000-01-23T04:56:07.000+00:00"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      total_operations: 0
      errored_operations: 1
      id: "id"
      response_body_url: "response_body_url"
      status: "pending"
  Batch Operations:
    type: "object"
    properties:
      batches:
        type: "array"
        description: "An array of objects representing batch calls."
        title: "Batches"
        items:
          $ref: "#/definitions/Batch"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A summary of batch requests that have been made."
    example:
      batches:
      - finished_operations: 6
        completed_at: "2000-01-23T04:56:07.000+00:00"
        submitted_at: "2000-01-23T04:56:07.000+00:00"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        total_operations: 0
        errored_operations: 1
        id: "id"
        response_body_url: "response_body_url"
        status: "pending"
      - finished_operations: 6
        completed_at: "2000-01-23T04:56:07.000+00:00"
        submitted_at: "2000-01-23T04:56:07.000+00:00"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        total_operations: 0
        errored_operations: 1
        id: "id"
        response_body_url: "response_body_url"
        status: "pending"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      total_items: 5
  Operations:
    type: "object"
    required:
    - "method"
    - "path"
    properties:
      method:
        type: "string"
        example: "POST"
        description: "The HTTP method to use for the operation."
        title: "HTTP Method"
        enum:
        - "GET"
        - "POST"
        - "PUT"
        - "PATCH"
        - "DELETE"
      path:
        type: "string"
        example: "/lists"
        description: "The relative path to use for the operation."
        title: "Path"
      params:
        type: "object"
        example: "{\"count\":10,\"offset\":0}"
        description: "Any request query parameters. Example parameters: {\"count\"\
          :10, \"offset\":0}"
        title: "Query Parameters"
        properties: {}
      body:
        type: "string"
        example: "{\"title\":\"Test\"}"
        description: "A string containing the JSON body to use with the request."
        title: "Body"
      operation_id:
        type: "string"
        example: "my-id-123"
        description: "An optional client-supplied id returned with the operation results."
        title: "Operation ID"
  body:
    type: "object"
    required:
    - "operations"
    properties:
      operations:
        type: "array"
        description: "An array of objects that describes operations to perform."
        title: "Operations List"
        items:
          $ref: "#/definitions/Operations"
  Batch Webhook:
    type: "object"
    properties:
      id:
        type: "string"
        description: "A string that uniquely identifies this Batch Webhook."
        title: "Batch Webhook ID"
        readOnly: true
      url:
        type: "string"
        example: "http://yourdomain.com/webhook"
        description: "A valid URL for the Webhook."
        title: "URL"
      enabled:
        type: "boolean"
        example: true
        description: "Whether the webhook receives requests or not."
        title: "Enabled"
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A webhook configured for batch status updates."
    example:
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      id: "id"
      url: "http://yourdomain.com/webhook"
      enabled: true
  Batch Webhooks:
    type: "object"
    properties:
      webhooks:
        type: "array"
        description: "An array of objects, each representing a Batch Webhook."
        title: "Webhooks"
        items:
          $ref: "#/definitions/Batch Webhook"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "Manage webhooks for batch requests."
    example:
      webhooks:
      - _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        id: "id"
        url: "http://yourdomain.com/webhook"
        enabled: true
      - _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        id: "id"
        url: "http://yourdomain.com/webhook"
        enabled: true
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      total_items: 0
  Batch Webhook_1:
    type: "object"
    required:
    - "url"
    properties:
      url:
        type: "string"
        example: "http://yourdomain.com/webhook"
        description: "A valid URL for the Webhook."
        title: "URL"
      enabled:
        type: "boolean"
        example: true
        description: "Whether the webhook receives requests or not."
        title: "Enabled"
    title: "Batch Webhook"
    description: "Add a new Batch Webook."
  Batch Webhook_2:
    type: "object"
    properties:
      url:
        type: "string"
        example: "http://yourdomain.com/webhook"
        description: "A valid URL for the Webhook."
        title: "URL"
      enabled:
        type: "boolean"
        example: true
        description: "Whether the webhook receives requests or not."
        title: "Enabled"
    title: "Batch Webhook"
    description: "Update an existing Batch Webook."
  Template Folder:
    type: "object"
    properties:
      name:
        type: "string"
        description: "The name of the folder."
        title: "Folder Name"
      id:
        type: "string"
        description: "A string that uniquely identifies this template folder."
        title: "Folder Id"
        readOnly: true
      count:
        type: "integer"
        description: "The number of templates in the folder."
        title: "Template Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A folder used to organize templates."
    example:
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      name: "name"
      count: 0
      id: "id"
  Template Folders:
    type: "object"
    properties:
      folders:
        type: "array"
        description: "An array of objects representing template folders."
        title: "Template Folders"
        items:
          $ref: "#/definitions/Template Folder"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A list of template folders"
    example:
      folders:
      - _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        name: "name"
        count: 0
        id: "id"
      - _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        name: "name"
        count: 0
        id: "id"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      total_items: 6
  Template Folder_1:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        description: "The name of the folder."
        title: "Folder Name"
    title: "Template Folder"
    description: "A folder used to organize templates."
  Template Folder_2:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        description: "The name of the folder."
        title: "Folder Name"
    title: "Template Folder"
    description: "A folder used to organize templates."
  Campaign Folder:
    type: "object"
    properties:
      name:
        type: "string"
        description: "The name of the folder."
        title: "Folder Name"
      id:
        type: "string"
        description: "A string that uniquely identifies this campaign folder."
        title: "Folder Id"
        readOnly: true
      count:
        type: "integer"
        description: "The number of campaigns in the folder."
        title: "Campaign Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A folder used to organize campaigns."
    example:
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      name: "name"
      count: 0
      id: "id"
  Campaign Folders:
    type: "object"
    properties:
      folders:
        type: "array"
        description: "An array of objects representing campaign folders."
        title: "Campaign Folders"
        items:
          $ref: "#/definitions/Campaign Folder"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A list of campaign folders"
    example:
      folders:
      - _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        name: "name"
        count: 0
        id: "id"
      - _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        name: "name"
        count: 0
        id: "id"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      total_items: 6
  Campaign Folder_1:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        description: "Name to associate with the folder."
        title: "Folder Name"
    title: "Campaign Folder"
    description: "A folder used to organize campaigns."
  Campaign Folder_2:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        description: "Name to associate with the folder."
        title: "Folder Name"
    title: "Campaign Folder"
    description: "A folder used to organize campaigns."
  List_3:
    type: "object"
    properties:
      list_id:
        type: "string"
        description: "The unique list id."
        title: "List ID"
      list_is_active:
        type: "boolean"
        description: "The status of the list used, namely if it's deleted or disabled."
        title: "List Status"
        readOnly: true
      list_name:
        type: "string"
        description: "The name of the list."
        title: "List Name"
        readOnly: true
      segment_text:
        type: "string"
        description: "A description of the [segment](https://mailchimp.com/help/create-and-send-to-a-segment/)\
          \ used for the campaign. Formatted as a string marked up with HTML."
        title: "Segment Text"
        readOnly: true
      recipient_count:
        type: "integer"
        description: "Count of the recipients on the associated list. Formatted as\
          \ an integer."
        title: "Recipient Count"
        readOnly: true
      segment_opts:
        $ref: "#/definitions/Segment Options_1"
    description: "List settings for the campaign."
    example:
      segment_opts:
        prebuilt_segment_id: "subscribers-female"
        match: "any"
        saved_segment_id: 5
        conditions:
        - ""
        - ""
      list_id: "list_id"
      segment_text: "segment_text"
      recipient_count: 1
      list_name: "list_name"
      list_is_active: true
  Campaign Settings_2:
    type: "object"
    properties:
      subject_line:
        type: "string"
        description: "The subject line for the campaign."
        title: "Campaign Subject Line"
      preview_text:
        type: "string"
        description: "The preview text for the campaign."
        title: "Campaign Preview Text"
      title:
        type: "string"
        description: "The title of the campaign."
        title: "Campaign Title"
      from_name:
        type: "string"
        description: "The 'from' name on the campaign (not an email address)."
        title: "From Name"
      reply_to:
        type: "string"
        description: "The reply-to email address for the campaign."
        title: "Reply To Address"
      use_conversation:
        type: "boolean"
        description: "Use Mailchimp Conversation feature to manage out-of-office replies."
        title: "Conversation"
      to_name:
        type: "string"
        description: "The campaign's custom 'To' name. Typically the first name [audience\
          \ field](https://mailchimp.com/help/getting-started-with-merge-tags/)."
        title: "To Name"
      folder_id:
        type: "string"
        description: "If the campaign is listed in a folder, the id for that folder."
        title: "Folder ID"
      authenticate:
        type: "boolean"
        description: "Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/)\
          \ the campaign. Defaults to `true`."
        title: "Authentication"
      auto_footer:
        type: "boolean"
        description: "Automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/)\
          \ to the campaign."
        title: "Auto-Footer"
      inline_css:
        type: "boolean"
        description: "Automatically inline the CSS included with the campaign content."
        title: "Inline CSS"
      auto_tweet:
        type: "boolean"
        description: "Automatically tweet a link to the [campaign archive](https://mailchimp.com/help/about-email-campaign-archives-and-pages/)\
          \ page when the campaign is sent."
        title: "Auto-Tweet"
      auto_fb_post:
        type: "array"
        description: "An array of [Facebook](https://mailchimp.com/help/connect-or-disconnect-the-facebook-integration/)\
          \ page ids to auto-post to."
        title: "Auto Post to Facebook"
        items:
          type: "string"
      fb_comments:
        type: "boolean"
        description: "Allows Facebook comments on the campaign (also force-enables\
          \ the Campaign Archive toolbar). Defaults to `true`."
        title: "Facebook Comments"
      timewarp:
        type: "boolean"
        description: "Send this campaign using [Timewarp](https://mailchimp.com/help/use-timewarp/)."
        title: "Timewarp Send"
        readOnly: true
      template_id:
        type: "integer"
        description: "The id for the template used in this campaign."
        title: "Template ID"
      drag_and_drop:
        type: "boolean"
        description: "Whether the campaign uses the drag-and-drop editor."
        title: "Drag And Drop Campaign"
        readOnly: true
    description: "The settings for your campaign, including subject, from name, reply-to\
      \ address, and more."
    example:
      auto_footer: true
      subject_line: "subject_line"
      preview_text: "preview_text"
      use_conversation: true
      authenticate: true
      to_name: "to_name"
      timewarp: true
      title: "title"
      from_name: "from_name"
      auto_tweet: true
      auto_fb_post:
      - "auto_fb_post"
      - "auto_fb_post"
      fb_comments: true
      drag_and_drop: true
      reply_to: "reply_to"
      inline_css: true
      template_id: 5
      folder_id: "folder_id"
  AB Test Options_combinations:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Unique ID for the combination."
        title: "ID"
      subject_line:
        type: "integer"
        description: "The index of `variate_settings.subject_lines` used."
        title: "Subject Line"
      send_time:
        type: "integer"
        description: "The index of `variate_settings.send_times` used."
        title: "Send Time"
      from_name:
        type: "integer"
        description: "The index of `variate_settings.from_names` used."
        title: "From Name"
      reply_to:
        type: "integer"
        description: "The index of `variate_settings.reply_to_addresses` used."
        title: "Reply To"
      content_description:
        type: "integer"
        description: "The index of `variate_settings.contents` used."
        title: "Content Description"
      recipients:
        type: "integer"
        description: "The number of recipients for this combination."
        title: "Recipients"
    example:
      subject_line: 7
      send_time: 9
      reply_to: 2
      recipients: 7
      id: "id"
      from_name: 3
      content_description: 4
  AB Test Options:
    type: "object"
    properties:
      winning_combination_id:
        type: "string"
        description: "ID for the winning combination."
        title: "Winning Combination ID"
        readOnly: true
      winning_campaign_id:
        type: "string"
        description: "ID of the campaign that was sent to the remaining recipients\
          \ based on the winning combination."
        title: "Winning Campaign ID"
        readOnly: true
      winner_criteria:
        type: "string"
        description: "The combination that performs the best. This may be determined\
          \ automatically by click rate, open rate, or total revenue -- or you may\
          \ choose manually based on the reporting data you find the most valuable.\
          \ For Multivariate Campaigns testing send_time, winner_criteria is ignored.\
          \ For Multivariate Campaigns with 'manual' as the winner_criteria, the winner\
          \ must be chosen in the Mailchimp web application."
        title: "Winning Criteria"
        enum:
        - "opens"
        - "clicks"
        - "manual"
        - "total_revenue"
      wait_time:
        type: "integer"
        description: "The number of minutes to wait before choosing the winning campaign.\
          \ The value of wait_time must be greater than 0 and in whole hours, specified\
          \ in minutes."
        title: "Wait Time"
      test_size:
        type: "integer"
        description: "The percentage of recipients to send the test combinations to,\
          \ must be a value between 10 and 100."
        title: "Test Size"
      subject_lines:
        type: "array"
        description: "The possible subject lines to test. If no subject lines are\
          \ provided, settings.subject_line will be used."
        title: "Subject Lines"
        items:
          type: "string"
      send_times:
        type: "array"
        description: "The possible send times to test. The times provided should be\
          \ in the format YYYY-MM-DD HH:MM:SS. If send_times are provided to test,\
          \ the test_size will be set to 100% and winner_criteria will be ignored."
        title: "Send Times"
        items:
          type: "string"
          format: "date-time"
      from_names:
        type: "array"
        description: "The possible from names. The number of from_names provided must\
          \ match the number of reply_to_addresses. If no from_names are provided,\
          \ settings.from_name will be used."
        title: "From Names"
        items:
          type: "string"
      reply_to_addresses:
        type: "array"
        description: "The possible reply-to addresses. The number of reply_to_addresses\
          \ provided must match the number of from_names. If no reply_to_addresses\
          \ are provided, settings.reply_to will be used."
        title: "Reply To Addresses"
        items:
          type: "string"
      contents:
        type: "array"
        description: "Descriptions of possible email contents. To set campaign contents,\
          \ make a PUT request to /campaigns/{campaign_id}/content with the field\
          \ 'variate_contents'."
        title: "Content Descriptions"
        readOnly: true
        items:
          type: "string"
      combinations:
        type: "array"
        description: "Combinations of possible variables used to build emails."
        title: "Combinations"
        readOnly: true
        items:
          $ref: "#/definitions/AB Test Options_combinations"
    description: "The settings specific to A/B test campaigns."
    example:
      send_times:
      - "2000-01-23T04:56:07.000+00:00"
      - "2000-01-23T04:56:07.000+00:00"
      combinations:
      - subject_line: 7
        send_time: 9
        reply_to: 2
        recipients: 7
        id: "id"
        from_name: 3
        content_description: 4
      - subject_line: 7
        send_time: 9
        reply_to: 2
        recipients: 7
        id: "id"
        from_name: 3
        content_description: 4
      wait_time: 5
      subject_lines:
      - "subject_lines"
      - "subject_lines"
      contents:
      - "contents"
      - "contents"
      test_size: 2
      winning_combination_id: "winning_combination_id"
      reply_to_addresses:
      - "reply_to_addresses"
      - "reply_to_addresses"
      winner_criteria: "opens"
      winning_campaign_id: "winning_campaign_id"
      from_names:
      - "from_names"
      - "from_names"
  Salesforce CRM Tracking_1:
    type: "object"
    properties:
      campaign:
        type: "boolean"
        description: "Create a campaign in a connected Salesforce account."
        title: "Salesforce Campaign"
      notes:
        type: "boolean"
        description: "Update contact notes for a campaign based on subscriber email\
          \ addresses."
        title: "Salesforce Note"
    description: "Deprecated"
    example:
      notes: true
      campaign: true
  Capsule CRM Tracking_2:
    type: "object"
    properties:
      notes:
        type: "boolean"
        description: "Update contact notes for a campaign based on subscriber email\
          \ addresses."
        title: "Capsule Note"
    description: "Deprecated"
    example:
      notes: true
  Campaign Tracking Options_1:
    type: "object"
    properties:
      opens:
        type: "boolean"
        description: "Whether to [track opens](https://mailchimp.com/help/about-open-tracking/).\
          \ Defaults to `true`. Cannot be set to false for variate campaigns."
        title: "Opens"
      html_clicks:
        type: "boolean"
        description: "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/)\
          \ in the HTML version of the campaign. Defaults to `true`. Cannot be set\
          \ to false for variate campaigns."
        title: "HTML Click Tracking"
      text_clicks:
        type: "boolean"
        description: "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/)\
          \ in the plain-text version of the campaign. Defaults to `true`. Cannot\
          \ be set to false for variate campaigns."
        title: "Plain-Text Click Tracking"
      goal_tracking:
        type: "boolean"
        description: "Deprecated"
        title: "Mailchimp Goal Tracking"
      ecomm360:
        type: "boolean"
        description: "Whether to enable e-commerce tracking."
        title: "E-commerce Tracking"
      google_analytics:
        type: "string"
        description: "The custom slug for [Google Analytics](https://mailchimp.com/help/integrate-google-analytics-with-mailchimp/)\
          \ tracking (max of 50 bytes)."
        title: "Google Analytics Tracking"
      clicktale:
        type: "string"
        description: "The custom slug for [ClickTale](https://mailchimp.com/help/additional-tracking-options-for-campaigns/)\
          \ tracking (max of 50 bytes)."
        title: "ClickTale Analytics Tracking"
      salesforce:
        $ref: "#/definitions/Salesforce CRM Tracking_1"
      capsule:
        $ref: "#/definitions/Capsule CRM Tracking_2"
    description: "The tracking options for a campaign."
    example:
      salesforce:
        notes: true
        campaign: true
      goal_tracking: true
      capsule:
        notes: true
      clicktale: "clicktale"
      text_clicks: true
      ecomm360: true
      opens: true
      google_analytics: "google_analytics"
      html_clicks: true
  Daily Sending Days:
    type: "object"
    properties:
      sunday:
        type: "boolean"
        description: "Sends the daily RSS Campaign on Sundays."
        title: "Sunday"
      monday:
        type: "boolean"
        description: "Sends the daily RSS Campaign on Mondays."
        title: "Monday"
      tuesday:
        type: "boolean"
        description: "Sends the daily RSS Campaign on Tuesdays."
        title: "tuesday"
      wednesday:
        type: "boolean"
        description: "Sends the daily RSS Campaign on Wednesdays."
        title: "Monday"
      thursday:
        type: "boolean"
        description: "Sends the daily RSS Campaign on Thursdays."
        title: "Thursday"
      friday:
        type: "boolean"
        description: "Sends the daily RSS Campaign on Fridays."
        title: "Friday"
      saturday:
        type: "boolean"
        description: "Sends the daily RSS Campaign on Saturdays."
        title: "Saturday"
    description: "The days of the week to send a daily RSS Campaign."
    example:
      sunday: true
      saturday: true
      tuesday: true
      wednesday: true
      thursday: true
      friday: true
      monday: true
  Sending Schedule:
    type: "object"
    properties:
      hour:
        type: "integer"
        description: "The hour to send the campaign in local time. Acceptable hours\
          \ are 0-23. For example, '4' would be 4am in [your account's default time\
          \ zone](https://mailchimp.com/help/set-account-defaults/)."
        title: "Sending Hour"
        minimum: 0
        maximum: 23
      daily_send:
        $ref: "#/definitions/Daily Sending Days"
      weekly_send_day:
        type: "string"
        description: "The day of the week to send a weekly RSS Campaign."
        title: "Weekly Sending Day"
        enum:
        - "sunday"
        - "monday"
        - "tuesday"
        - "wednesday"
        - "thursday"
        - "friday"
        - "saturday"
      monthly_send_date:
        type: "number"
        description: "The day of the month to send a monthly RSS Campaign. Acceptable\
          \ days are 0-31, where '0' is always the last day of a month. Months with\
          \ fewer than the selected number of days will not have an RSS campaign sent\
          \ out that day. For example, RSS Campaigns set to send on the 30th will\
          \ not go out in February."
        title: "Monthly Sending Day"
        minimum: 0
        maximum: 31
    description: "The schedule for sending the RSS Campaign."
    example:
      hour: 2
      weekly_send_day: "sunday"
      daily_send:
        sunday: true
        saturday: true
        tuesday: true
        wednesday: true
        thursday: true
        friday: true
        monday: true
      monthly_send_date: 3.176401670446889369259224622510373592376708984375
  RSS Options:
    type: "object"
    properties:
      feed_url:
        type: "string"
        format: "uri"
        description: "The URL for the RSS feed."
        title: "Feed URL"
      frequency:
        type: "string"
        description: "The frequency of the RSS Campaign."
        title: "Frequency"
        enum:
        - "daily"
        - "weekly"
        - "monthly"
      schedule:
        $ref: "#/definitions/Sending Schedule"
      last_sent:
        type: "string"
        format: "date-time"
        description: "The date the campaign was last sent."
        title: "Last Sent"
        readOnly: true
      constrain_rss_img:
        type: "boolean"
        description: "Whether to add CSS to images in the RSS feed to constrain their\
          \ width in campaigns."
        title: "Constrain RSS Images"
    description: "[RSS](https://mailchimp.com/help/share-your-blog-posts-with-mailchimp/)\
      \ options for a campaign."
    example:
      schedule:
        hour: 2
        weekly_send_day: "sunday"
        daily_send:
          sunday: true
          saturday: true
          tuesday: true
          wednesday: true
          thursday: true
          friday: true
          monday: true
        monthly_send_date: 3.176401670446889369259224622510373592376708984375
      last_sent: "2000-01-23T04:56:07.000+00:00"
      constrain_rss_img: true
      feed_url: "http://example.com/aeiou"
      frequency: "daily"
  AB Testing Options:
    type: "object"
    properties:
      split_test:
        type: "string"
        description: "The type of AB split to run."
        title: "Split Test"
        enum:
        - "subject"
        - "from_name"
        - "schedule"
      pick_winner:
        type: "string"
        description: "How we should evaluate a winner. Based on 'opens', 'clicks',\
          \ or 'manual'."
        title: "Pick Winner"
        enum:
        - "opens"
        - "clicks"
        - "manual"
      wait_units:
        type: "string"
        description: "How unit of time for measuring the winner ('hours' or 'days').\
          \ This cannot be changed after a campaign is sent."
        title: "Wait Time"
        enum:
        - "hours"
        - "days"
      wait_time:
        type: "integer"
        description: "The amount of time to wait before picking a winner. This cannot\
          \ be changed after a campaign is sent."
        title: "Wait Time"
      split_size:
        type: "integer"
        description: "The size of the split groups. Campaigns split based on 'schedule'\
          \ are forced to have a 50/50 split. Valid split integers are between 1-50."
        title: "Split Size"
        minimum: 1
        maximum: 50
      from_name_a:
        type: "string"
        description: "For campaigns split on 'From Name', the name for Group A."
        title: "From Name Group A"
      from_name_b:
        type: "string"
        description: "For campaigns split on 'From Name', the name for Group B."
        title: "From Name Group B"
      reply_email_a:
        type: "string"
        description: "For campaigns split on 'From Name', the reply-to address for\
          \ Group A."
        title: "Reply Email Group A"
      reply_email_b:
        type: "string"
        description: "For campaigns split on 'From Name', the reply-to address for\
          \ Group B."
        title: "Reply Email Group B"
      subject_a:
        type: "string"
        description: "For campaigns split on 'Subject Line', the subject line for\
          \ Group A."
        title: "Subject Line Group A"
      subject_b:
        type: "string"
        description: "For campaigns split on 'Subject Line', the subject line for\
          \ Group B."
        title: "Subject Line Group B"
      send_time_a:
        type: "string"
        format: "date-time"
        description: "The send time for Group A."
        title: "Send Time Group A"
      send_time_b:
        type: "string"
        format: "date-time"
        description: "The send time for Group B."
        title: "Send Time Group B"
      send_time_winner:
        type: "string"
        description: "The send time for the winning version."
        title: "Send Time Winner"
    description: "[A/B Testing](https://mailchimp.com/help/about-ab-testing-campaigns/)\
      \ options for a campaign."
    example:
      pick_winner: "opens"
      wait_time: 1
      wait_units: "hours"
      subject_b: "subject_b"
      subject_a: "subject_a"
      split_test: "subject"
      from_name_a: "from_name_a"
      from_name_b: "from_name_b"
      send_time_winner: "send_time_winner"
      reply_email_b: "reply_email_b"
      reply_email_a: "reply_email_a"
      send_time_a: "2000-01-23T04:56:07.000+00:00"
      send_time_b: "2000-01-23T04:56:07.000+00:00"
      split_size: 34
  ECommerce Report:
    type: "object"
    properties:
      total_orders:
        type: "integer"
        description: "The total orders for a campaign."
        title: "Total Orders"
        readOnly: true
      total_spent:
        type: "number"
        description: "The total spent for a campaign. Calculated as the sum of all\
          \ order totals with no deductions."
        title: "Total Spent"
        readOnly: true
      total_revenue:
        type: "number"
        description: "The total revenue for a campaign. Calculated as the sum of all\
          \ order totals minus shipping and tax totals."
        title: "Total Revenue"
        readOnly: true
    description: "E-Commerce stats for a campaign."
    example:
      total_spent: 8.7620420127490010742121739895083010196685791015625
      total_revenue: 9.0183481860707832566959041287191212177276611328125
      total_orders: 6
  Campaign Report Summary_2:
    type: "object"
    properties:
      opens:
        type: "integer"
        description: "The total number of opens for a campaign."
        title: "Automation Opens"
        readOnly: true
      unique_opens:
        type: "integer"
        description: "The number of unique opens."
        title: "Unique Opens"
        readOnly: true
      open_rate:
        type: "number"
        description: "The number of unique opens divided by the total number of successful\
          \ deliveries."
        title: "Open Rate"
        readOnly: true
      clicks:
        type: "integer"
        description: "The total number of clicks for an campaign."
        title: "Total Clicks"
        readOnly: true
      subscriber_clicks:
        type: "integer"
        description: "The number of unique clicks."
        title: "Unique Subscriber Clicks"
        readOnly: true
      click_rate:
        type: "number"
        description: "The number of unique clicks divided by the total number of successful\
          \ deliveries."
        title: "Click Rate"
        readOnly: true
      ecommerce:
        $ref: "#/definitions/ECommerce Report"
    description: "For sent campaigns, a summary of opens, clicks, and e-commerce data."
    example:
      subscriber_clicks: 9
      click_rate: 9.3693102714106686335071572102606296539306640625
      ecommerce:
        total_spent: 8.7620420127490010742121739895083010196685791015625
        total_revenue: 9.0183481860707832566959041287191212177276611328125
        total_orders: 6
      opens: 7
      clicks: 5
      unique_opens: 1
      open_rate: 4.9652184929849543237878606305457651615142822265625
  Campaign Delivery Status:
    type: "object"
    properties:
      enabled:
        type: "boolean"
        description: "Whether Campaign Delivery Status is enabled for this account\
          \ and campaign."
        title: "Delivery Status Enabled"
        readOnly: true
      can_cancel:
        type: "boolean"
        description: "Whether a campaign send can be canceled."
        title: "Campaign Cancelable"
        readOnly: true
      status:
        type: "string"
        description: "The current state of a campaign delivery."
        title: "Campaign Delivery Status"
        readOnly: true
        enum:
        - "delivering"
        - "delivered"
        - "canceling"
        - "canceled"
      emails_sent:
        type: "integer"
        description: "The total number of emails confirmed sent for this campaign\
          \ so far."
        title: "Emails Sent"
        readOnly: true
      emails_canceled:
        type: "integer"
        description: "The total number of emails canceled for this campaign."
        title: "Emails Canceled"
        readOnly: true
    description: "Updates on campaigns in the process of sending."
    example:
      emails_sent: 6
      can_cancel: true
      emails_canceled: 3
      enabled: true
      status: "delivering"
  Campaign:
    type: "object"
    properties:
      id:
        type: "string"
        description: "A string that uniquely identifies this campaign."
        title: "Campaign ID"
        readOnly: true
      web_id:
        type: "integer"
        description: "The ID used in the Mailchimp web application. View this campaign\
          \ in your Mailchimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`."
        title: "Campaign Web ID"
        readOnly: true
      parent_campaign_id:
        type: "string"
        description: "If this campaign is the child of another campaign, this identifies\
          \ the parent campaign. For Example, for RSS or Automation children."
        title: "Parent Campaign ID"
        readOnly: true
      type:
        type: "string"
        description: "There are four types of [campaigns](https://mailchimp.com/help/getting-started-with-campaigns/)\
          \ you can create in Mailchimp. A/B Split campaigns have been deprecated\
          \ and variate campaigns should be used instead."
        title: "Campaign Type"
        enum:
        - "regular"
        - "plaintext"
        - "absplit"
        - "rss"
        - "variate"
      create_time:
        type: "string"
        format: "date-time"
        description: "The date and time the campaign was created in ISO 8601 format."
        title: "Create Time"
        readOnly: true
      archive_url:
        type: "string"
        description: "The link to the campaign's archive version in ISO 8601 format."
        title: "Archive URL"
        readOnly: true
      long_archive_url:
        type: "string"
        description: "The original link to the campaign's archive version."
        title: "Long Archive URL"
        readOnly: true
      status:
        type: "string"
        description: "The current status of the campaign."
        title: "Campaign Status"
        readOnly: true
        enum:
        - "save"
        - "paused"
        - "schedule"
        - "sending"
        - "sent"
        - "canceled"
        - "canceling"
        - "archived"
      emails_sent:
        type: "integer"
        description: "The total number of emails sent for this campaign."
        title: "Emails Sent"
        readOnly: true
      send_time:
        type: "string"
        format: "date-time"
        description: "The date and time a campaign was sent."
        title: "Send Time"
        readOnly: true
      content_type:
        type: "string"
        description: "How the campaign's content is put together."
        title: "Content Type"
        enum:
        - "template"
        - "html"
        - "url"
        - "multichannel"
      needs_block_refresh:
        type: "boolean"
        description: "Determines if the campaign needs its blocks refreshed by opening\
          \ the web-based campaign editor. Deprecated and will always return false."
        title: "Needs Block Refresh"
        readOnly: true
      resendable:
        type: "boolean"
        description: "Determines if the campaign qualifies to be resent to non-openers."
        title: "Resendable"
        readOnly: true
      recipients:
        $ref: "#/definitions/List_3"
      settings:
        $ref: "#/definitions/Campaign Settings_2"
      variate_settings:
        $ref: "#/definitions/AB Test Options"
      tracking:
        $ref: "#/definitions/Campaign Tracking Options_1"
      rss_opts:
        $ref: "#/definitions/RSS Options"
      ab_split_opts:
        $ref: "#/definitions/AB Testing Options"
      social_card:
        $ref: "#/definitions/Campaign Social Card"
      report_summary:
        $ref: "#/definitions/Campaign Report Summary_2"
      delivery_status:
        $ref: "#/definitions/Campaign Delivery Status"
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A summary of an individual campaign's settings and content."
    example:
      archive_url: "archive_url"
      resendable: true
      settings:
        auto_footer: true
        subject_line: "subject_line"
        preview_text: "preview_text"
        use_conversation: true
        authenticate: true
        to_name: "to_name"
        timewarp: true
        title: "title"
        from_name: "from_name"
        auto_tweet: true
        auto_fb_post:
        - "auto_fb_post"
        - "auto_fb_post"
        fb_comments: true
        drag_and_drop: true
        reply_to: "reply_to"
        inline_css: true
        template_id: 5
        folder_id: "folder_id"
      variate_settings:
        send_times:
        - "2000-01-23T04:56:07.000+00:00"
        - "2000-01-23T04:56:07.000+00:00"
        combinations:
        - subject_line: 7
          send_time: 9
          reply_to: 2
          recipients: 7
          id: "id"
          from_name: 3
          content_description: 4
        - subject_line: 7
          send_time: 9
          reply_to: 2
          recipients: 7
          id: "id"
          from_name: 3
          content_description: 4
        wait_time: 5
        subject_lines:
        - "subject_lines"
        - "subject_lines"
        contents:
        - "contents"
        - "contents"
        test_size: 2
        winning_combination_id: "winning_combination_id"
        reply_to_addresses:
        - "reply_to_addresses"
        - "reply_to_addresses"
        winner_criteria: "opens"
        winning_campaign_id: "winning_campaign_id"
        from_names:
        - "from_names"
        - "from_names"
      ab_split_opts:
        pick_winner: "opens"
        wait_time: 1
        wait_units: "hours"
        subject_b: "subject_b"
        subject_a: "subject_a"
        split_test: "subject"
        from_name_a: "from_name_a"
        from_name_b: "from_name_b"
        send_time_winner: "send_time_winner"
        reply_email_b: "reply_email_b"
        reply_email_a: "reply_email_a"
        send_time_a: "2000-01-23T04:56:07.000+00:00"
        send_time_b: "2000-01-23T04:56:07.000+00:00"
        split_size: 34
      create_time: "2000-01-23T04:56:07.000+00:00"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      web_id: 0
      type: "regular"
      tracking:
        salesforce:
          notes: true
          campaign: true
        goal_tracking: true
        capsule:
          notes: true
        clicktale: "clicktale"
        text_clicks: true
        ecomm360: true
        opens: true
        google_analytics: "google_analytics"
        html_clicks: true
      needs_block_refresh: true
      send_time: "2000-01-23T04:56:07.000+00:00"
      rss_opts:
        schedule:
          hour: 2
          weekly_send_day: "sunday"
          daily_send:
            sunday: true
            saturday: true
            tuesday: true
            wednesday: true
            thursday: true
            friday: true
            monday: true
          monthly_send_date: 3.176401670446889369259224622510373592376708984375
        last_sent: "2000-01-23T04:56:07.000+00:00"
        constrain_rss_img: true
        feed_url: "http://example.com/aeiou"
        frequency: "daily"
      parent_campaign_id: "parent_campaign_id"
      content_type: "template"
      social_card:
        image_url: "image_url"
        description: "description"
        title: "title"
      recipients:
        segment_opts:
          prebuilt_segment_id: "subscribers-female"
          match: "any"
          saved_segment_id: 5
          conditions:
          - ""
          - ""
        list_id: "list_id"
        segment_text: "segment_text"
        recipient_count: 1
        list_name: "list_name"
        list_is_active: true
      emails_sent: 6
      id: "id"
      delivery_status:
        emails_sent: 6
        can_cancel: true
        emails_canceled: 3
        enabled: true
        status: "delivering"
      long_archive_url: "long_archive_url"
      status: "save"
      report_summary:
        subscriber_clicks: 9
        click_rate: 9.3693102714106686335071572102606296539306640625
        ecommerce:
          total_spent: 8.7620420127490010742121739895083010196685791015625
          total_revenue: 9.0183481860707832566959041287191212177276611328125
          total_orders: 6
        opens: 7
        clicks: 5
        unique_opens: 1
        open_rate: 4.9652184929849543237878606305457651615142822265625
  inline_response_200_5:
    type: "object"
    properties:
      campaigns:
        type: "array"
        description: "An array of campaigns."
        title: "Campaigns"
        items:
          $ref: "#/definitions/Campaign"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "An array of campaigns."
    example:
      campaigns:
      - archive_url: "archive_url"
        resendable: true
        settings:
          auto_footer: true
          subject_line: "subject_line"
          preview_text: "preview_text"
          use_conversation: true
          authenticate: true
          to_name: "to_name"
          timewarp: true
          title: "title"
          from_name: "from_name"
          auto_tweet: true
          auto_fb_post:
          - "auto_fb_post"
          - "auto_fb_post"
          fb_comments: true
          drag_and_drop: true
          reply_to: "reply_to"
          inline_css: true
          template_id: 5
          folder_id: "folder_id"
        variate_settings:
          send_times:
          - "2000-01-23T04:56:07.000+00:00"
          - "2000-01-23T04:56:07.000+00:00"
          combinations:
          - subject_line: 7
            send_time: 9
            reply_to: 2
            recipients: 7
            id: "id"
            from_name: 3
            content_description: 4
          - subject_line: 7
            send_time: 9
            reply_to: 2
            recipients: 7
            id: "id"
            from_name: 3
            content_description: 4
          wait_time: 5
          subject_lines:
          - "subject_lines"
          - "subject_lines"
          contents:
          - "contents"
          - "contents"
          test_size: 2
          winning_combination_id: "winning_combination_id"
          reply_to_addresses:
          - "reply_to_addresses"
          - "reply_to_addresses"
          winner_criteria: "opens"
          winning_campaign_id: "winning_campaign_id"
          from_names:
          - "from_names"
          - "from_names"
        ab_split_opts:
          pick_winner: "opens"
          wait_time: 1
          wait_units: "hours"
          subject_b: "subject_b"
          subject_a: "subject_a"
          split_test: "subject"
          from_name_a: "from_name_a"
          from_name_b: "from_name_b"
          send_time_winner: "send_time_winner"
          reply_email_b: "reply_email_b"
          reply_email_a: "reply_email_a"
          send_time_a: "2000-01-23T04:56:07.000+00:00"
          send_time_b: "2000-01-23T04:56:07.000+00:00"
          split_size: 34
        create_time: "2000-01-23T04:56:07.000+00:00"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        web_id: 0
        type: "regular"
        tracking:
          salesforce:
            notes: true
            campaign: true
          goal_tracking: true
          capsule:
            notes: true
          clicktale: "clicktale"
          text_clicks: true
          ecomm360: true
          opens: true
          google_analytics: "google_analytics"
          html_clicks: true
        needs_block_refresh: true
        send_time: "2000-01-23T04:56:07.000+00:00"
        rss_opts:
          schedule:
            hour: 2
            weekly_send_day: "sunday"
            daily_send:
              sunday: true
              saturday: true
              tuesday: true
              wednesday: true
              thursday: true
              friday: true
              monday: true
            monthly_send_date: 3.176401670446889369259224622510373592376708984375
          last_sent: "2000-01-23T04:56:07.000+00:00"
          constrain_rss_img: true
          feed_url: "http://example.com/aeiou"
          frequency: "daily"
        parent_campaign_id: "parent_campaign_id"
        content_type: "template"
        social_card:
          image_url: "image_url"
          description: "description"
          title: "title"
        recipients:
          segment_opts:
            prebuilt_segment_id: "subscribers-female"
            match: "any"
            saved_segment_id: 5
            conditions:
            - ""
            - ""
          list_id: "list_id"
          segment_text: "segment_text"
          recipient_count: 1
          list_name: "list_name"
          list_is_active: true
        emails_sent: 6
        id: "id"
        delivery_status:
          emails_sent: 6
          can_cancel: true
          emails_canceled: 3
          enabled: true
          status: "delivering"
        long_archive_url: "long_archive_url"
        status: "save"
        report_summary:
          subscriber_clicks: 9
          click_rate: 9.3693102714106686335071572102606296539306640625
          ecommerce:
            total_spent: 8.7620420127490010742121739895083010196685791015625
            total_revenue: 9.0183481860707832566959041287191212177276611328125
            total_orders: 6
          opens: 7
          clicks: 5
          unique_opens: 1
          open_rate: 4.9652184929849543237878606305457651615142822265625
      - archive_url: "archive_url"
        resendable: true
        settings:
          auto_footer: true
          subject_line: "subject_line"
          preview_text: "preview_text"
          use_conversation: true
          authenticate: true
          to_name: "to_name"
          timewarp: true
          title: "title"
          from_name: "from_name"
          auto_tweet: true
          auto_fb_post:
          - "auto_fb_post"
          - "auto_fb_post"
          fb_comments: true
          drag_and_drop: true
          reply_to: "reply_to"
          inline_css: true
          template_id: 5
          folder_id: "folder_id"
        variate_settings:
          send_times:
          - "2000-01-23T04:56:07.000+00:00"
          - "2000-01-23T04:56:07.000+00:00"
          combinations:
          - subject_line: 7
            send_time: 9
            reply_to: 2
            recipients: 7
            id: "id"
            from_name: 3
            content_description: 4
          - subject_line: 7
            send_time: 9
            reply_to: 2
            recipients: 7
            id: "id"
            from_name: 3
            content_description: 4
          wait_time: 5
          subject_lines:
          - "subject_lines"
          - "subject_lines"
          contents:
          - "contents"
          - "contents"
          test_size: 2
          winning_combination_id: "winning_combination_id"
          reply_to_addresses:
          - "reply_to_addresses"
          - "reply_to_addresses"
          winner_criteria: "opens"
          winning_campaign_id: "winning_campaign_id"
          from_names:
          - "from_names"
          - "from_names"
        ab_split_opts:
          pick_winner: "opens"
          wait_time: 1
          wait_units: "hours"
          subject_b: "subject_b"
          subject_a: "subject_a"
          split_test: "subject"
          from_name_a: "from_name_a"
          from_name_b: "from_name_b"
          send_time_winner: "send_time_winner"
          reply_email_b: "reply_email_b"
          reply_email_a: "reply_email_a"
          send_time_a: "2000-01-23T04:56:07.000+00:00"
          send_time_b: "2000-01-23T04:56:07.000+00:00"
          split_size: 34
        create_time: "2000-01-23T04:56:07.000+00:00"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        web_id: 0
        type: "regular"
        tracking:
          salesforce:
            notes: true
            campaign: true
          goal_tracking: true
          capsule:
            notes: true
          clicktale: "clicktale"
          text_clicks: true
          ecomm360: true
          opens: true
          google_analytics: "google_analytics"
          html_clicks: true
        needs_block_refresh: true
        send_time: "2000-01-23T04:56:07.000+00:00"
        rss_opts:
          schedule:
            hour: 2
            weekly_send_day: "sunday"
            daily_send:
              sunday: true
              saturday: true
              tuesday: true
              wednesday: true
              thursday: true
              friday: true
              monday: true
            monthly_send_date: 3.176401670446889369259224622510373592376708984375
          last_sent: "2000-01-23T04:56:07.000+00:00"
          constrain_rss_img: true
          feed_url: "http://example.com/aeiou"
          frequency: "daily"
        parent_campaign_id: "parent_campaign_id"
        content_type: "template"
        social_card:
          image_url: "image_url"
          description: "description"
          title: "title"
        recipients:
          segment_opts:
            prebuilt_segment_id: "subscribers-female"
            match: "any"
            saved_segment_id: 5
            conditions:
            - ""
            - ""
          list_id: "list_id"
          segment_text: "segment_text"
          recipient_count: 1
          list_name: "list_name"
          list_is_active: true
        emails_sent: 6
        id: "id"
        delivery_status:
          emails_sent: 6
          can_cancel: true
          emails_canceled: 3
          enabled: true
          status: "delivering"
        long_archive_url: "long_archive_url"
        status: "save"
        report_summary:
          subscriber_clicks: 9
          click_rate: 9.3693102714106686335071572102606296539306640625
          ecommerce:
            total_spent: 8.7620420127490010742121739895083010196685791015625
            total_revenue: 9.0183481860707832566959041287191212177276611328125
            total_orders: 6
          opens: 7
          clicks: 5
          unique_opens: 1
          open_rate: 4.9652184929849543237878606305457651615142822265625
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      total_items: 6
  Segment Options_2:
    type: "object"
    properties:
      saved_segment_id:
        type: "integer"
        description: "The id for an existing saved segment."
        title: "Saved Segment ID"
      match:
        type: "string"
        description: "Segment match type."
        title: "Match Type"
        enum:
        - "any"
        - "all"
      conditions:
        type: "array"
        description: "Segment match conditions. There are multiple possible types,\
          \ see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas)."
        title: "Segment Type"
        items:
          x-oneOf:
          - type: "object"
            title: "Aim Segment"
            description: "Segment by interaction with a specific campaign."
            properties:
              condition_type:
                type: "string"
                x-value: "Aim"
                enum:
                - "Aim"
              field:
                type: "string"
                enum:
                - "aim"
                title: "Segment Field"
                description: "Segment by interaction with a specific campaign."
                example: "aim"
              op:
                type: "string"
                enum:
                - "open"
                - "click"
                - "sent"
                - "noopen"
                - "noclick"
                - "nosent"
                title: "Segment Operator"
                description: "The status of the member with regard to their campaign\
                  \ interaction. One of the following: opened, clicked, was sent,\
                  \ didn't open, didn't click, or was not sent."
                example: "open"
              value:
                type: "string"
                title: "Segment Data"
                description: "Either the web id value for a specific campaign or 'any'\
                  \ to account for subscribers who have/have not interacted with any\
                  \ campaigns."
                example: "any"
          - type: "object"
            title: "Automation Segment"
            description: "Segment by interaction with an Automation workflow."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "Automation"
                enum:
                - "Automation"
              field:
                type: "string"
                enum:
                - "automation"
                title: "Segment Field"
                description: "Segment by interaction with an Automation workflow."
                example: "automation"
              op:
                type: "string"
                enum:
                - "started"
                - "completed"
                - "not_started"
                - "not_completed"
                title: "Segment Operator"
                description: "The status of the member with regard to the automation\
                  \ workflow. One of the following: has started the workflow, has\
                  \ completed the workflow, has not started the workflow, or has not\
                  \ completed the workflow."
                example: "started"
              value:
                type: "string"
                title: "Segment Data"
                description: "The web id for the automation workflow to segment against."
                example: "2135217"
          - type: "object"
            title: "Poll Activity Segment"
            description: "Segment by poll activity."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "CampaignPoll"
                enum:
                - "CampaignPoll"
              field:
                type: "string"
                enum:
                - "poll"
                title: "Segment Field"
                description: "Segment by poll activity."
                example: "poll"
              op:
                type: "string"
                enum:
                - "member"
                - "notmember"
                title: "Segment Operator"
                description: "Members have/have not interacted with a specific poll\
                  \ in a Mailchimp email."
                example: "member"
              value:
                type: "number"
                title: "Segment Operator"
                description: "The id for the poll."
                example: 409
          - type: "object"
            title: "Conversation Segment"
            description: "Segment by interaction with a campaign via Conversations."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "Conversation"
                enum:
                - "Conversation"
              field:
                type: "string"
                enum:
                - "conversation"
                title: "Segment Field"
                description: "Segment by interaction with a campaign via Conversations."
                example: "conversation"
              op:
                type: "string"
                enum:
                - "member"
                - "notmember"
                title: "Segment Operator"
                description: "The status of a member's interaction with a conversation.\
                  \ One of the following: has replied or has not replied."
                example: "member"
              value:
                type: "string"
                title: "Segment Data"
                description: "The web id value for a specific campaign or 'any' to\
                  \ account for subscribers who have/have not interacted with any\
                  \ campaigns."
                example: "any"
          - type: "object"
            title: "Date Segment"
            description: "Segment by a specific date field."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "Date"
                enum:
                - "Date"
              field:
                type: "string"
                enum:
                - "timestamp_opt"
                - "info_changed"
                - "ecomm_date"
                title: "Segment Field"
                description: "The type of date field to segment on: The opt-in time\
                  \ for a signup, the date the subscriber was last updated, or the\
                  \ date of their last ecomm purchase."
                example: "timestamp_opt"
              op:
                type: "string"
                enum:
                - "greater"
                - "less"
                - "is"
                - "not"
                - "blank"
                - "blank_not"
                - "within"
                - "notwithin"
                title: "Segment Operator"
                description: "When the event took place:  Before, after, is a specific\
                  \ date, is not a specific date, is blank, or is not blank."
                example: "greater"
              value:
                type: "string"
                title: "Segment Data"
                description: "What type of data to segment on: a specific date, a\
                  \ specific campaign, or the last campaign sent."
                example: "date"
              extra:
                type: "string"
                title: "Segment Extra Value"
                description: "When segmenting on 'date' or 'campaign', the date for\
                  \ the segment formatted as YYYY-MM-DD or the web id for the campaign."
                example: "2015-01-30"
          - type: "object"
            title: "Email Client Segment"
            description: "Segment by use of a particular email client."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "EmailClient"
                enum:
                - "EmailClient"
              field:
                type: "string"
                enum:
                - "email_client"
                title: "Segment Field"
                description: "Segment by use of a particular email client."
                example: "email_client"
              op:
                type: "string"
                enum:
                - "client_is"
                - "client_not"
                title: "Segment Operator"
                description: "The operation to determine whether we select clients\
                  \ that match the value, or clients that do not match the value."
                example: "client_is"
              value:
                type: "string"
                title: "Segment Data"
                description: "The name of the email client."
                example: "Gmail"
          - type: "object"
            title: "Language Segment"
            description: "Segment by language."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "Language"
                enum:
                - "Language"
              field:
                type: "string"
                enum:
                - "language"
                title: "Segment Field"
                description: "Segmenting based off of a subscriber's language."
                example: "language"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                title: "Segment Operator"
                description: "Whether the member's language is or is not set to a\
                  \ specific language."
                example: "is"
              value:
                type: "string"
                title: "Segment Data"
                description: "A two-letter language identifier."
                example: "en"
          - type: "object"
            title: "Member Rating Segment"
            description: "Segment by member rating."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "MemberRating"
                enum:
                - "MemberRating"
              field:
                type: "string"
                enum:
                - "rating"
                title: "Segment Field"
                description: "Segment by member rating."
                example: "rating"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "greater"
                - "less"
                title: "Segment Operator"
                description: "Members who have have a rating that is/not exactly a\
                  \ given number or members who have a rating greater/less than a\
                  \ given number."
                example: "greater"
              value:
                type: "number"
                title: "Segment Operator"
                description: "The star rating number to segment against."
                example: 4
          - type: "object"
            title: "Signup Source Segment"
            description: "Segment by signup source."
            required:
            - "field"
            - "condition_type"
            - "op"
            properties:
              condition_type:
                type: "string"
                enum:
                - "SignupSource"
                x-value: "SignupSource"
                title: "Type"
              field:
                type: "string"
                enum:
                - "source"
                title: "Segment Field"
                example: "source"
              op:
                type: "string"
                enum:
                - "source_is"
                - "source_not"
                title: "Segment Operator"
                description: "Whether the member's signup source was/was not a particular\
                  \ value."
                example: "source_is"
              value:
                type: "string"
                title: "Segment Data"
                description: "The signup source."
                example: "List Import"
          - type: "object"
            title: "Survey Monkey Segment"
            description: "Segment by interaction with a SurveyMonkey survey."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "SurveyMonkey"
                enum:
                - "SurveyMonkey"
              field:
                type: "string"
                enum:
                - "survey_monkey"
                title: "Segment Field"
                description: "Segment by interaction with a SurveyMonkey survey."
                example: "survey_monkey"
              op:
                type: "string"
                enum:
                - "started"
                - "completed"
                - "not_started"
                - "not_completed"
                title: "Segment Operator"
                description: "The status of the member with regard to the survey.One\
                  \ of the following: has started the survey, has completed the survey,\
                  \ has not started the survey, or has not completed the survey."
                example: "started"
              value:
                type: "string"
                title: "Survey ID"
                description: "The unique ID of the survey monkey survey."
                example: "32179586"
          - type: "object"
            title: "VIP Segment"
            description: "Segment by VIP status."
            required:
            - "field"
            - "op"
            properties:
              condition_type:
                type: "string"
                x-value: "VIP"
                enum:
                - "VIP"
              field:
                type: "string"
                enum:
                - "gmonkey"
                title: "Segment Field"
                description: "Segment by VIP status."
                example: "gmonkey"
              op:
                type: "string"
                enum:
                - "member"
                - "notmember"
                title: "Segment Operator"
                description: "Whether the member is or is not marked as VIP."
                example: "member"
          - type: "object"
            title: "Interests Segment"
            description: "Segment by an interest group merge field."
            properties:
              condition_type:
                type: "string"
                x-value: "Interests"
                enum:
                - "Interests"
              field:
                type: "string"
                title: "Segment Field"
                description: "Segmenting based on interest group information. This\
                  \ should start with 'interests-' followed by the grouping id. Ex.\
                  \ 'interests-123'."
                example: "interests-123"
              op:
                type: "string"
                enum:
                - "interestcontains"
                - "interestcontainsall"
                - "interestnotcontains"
                title: "Segment Operator"
                description: "Whether the member is a part of one, all, or none of\
                  \ the groups."
                example: "interestcontains"
              value:
                type: "array"
                title: "Segment Value"
                description: "An array containing strings, each representing a group\
                  \ id."
                items:
                  type: "string"
                  example:
                  - "44401"
                  - "44405"
                  - "44409"
          - type: "object"
            title: "Ecommerce Category Segment"
            description: "Segment by purchases in specific items or categories."
            properties:
              condition_type:
                type: "string"
                x-value: "EcommCategory"
                enum:
                - "EcommCategory"
              field:
                type: "string"
                enum:
                - "ecomm_cat"
                - "ecomm_prod"
                title: "Segment Field"
                description: "Segment by purchases in specific items or categories."
                example: "ecomm_cat"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "contains"
                - "notcontain"
                - "starts"
                - "ends"
                title: "Segment Operator"
                description: "A member who has purchased from a category/specific\
                  \ item that is/is not a specific name, where the category/item name\
                  \ contains/doesn't contain a specific phrase or string, or a category/item\
                  \ name that starts/ends with a string."
                example: "is"
              value:
                type: "string"
                title: "Segment Data"
                description: "The ecommerce category/item information."
                example: "Product"
          - type: "object"
            title: "Ecommerce Number Segment"
            description: "Segment by average spent total, number of orders, total\
              \ number of products purchased, or average number of products per order."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "EcommNumber"
                enum:
                - "EcommNumber"
              field:
                type: "string"
                enum:
                - "ecomm_spent_avg"
                - "ecomm_orders"
                - "ecomm_prod_all"
                - "ecomm_avg_ord"
                title: "Segment Field"
                description: "Segment by average spent total, number of orders, total\
                  \ number of products purchased, or average number of products per\
                  \ order."
                example: "ecomm_orders"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "greater"
                - "less"
                title: "Segment Operator"
                description: "Members who have spent exactly, have not spent exactly,\
                  \ spent more, or spent less than the segment value."
                example: "greater"
              value:
                type: "number"
                title: "Segment Operator"
                description: "Members who have spent exactly, have not spent exactly,\
                  \ spent more, or spent less than this amount."
                example: 42
          - type: "object"
            title: "Ecommerce Purchased Segment"
            description: "Segment by whether someone has purchased anything."
            properties:
              condition_type:
                type: "string"
                x-value: "EcommPurchased"
                enum:
                - "EcommPurchased"
              field:
                type: "string"
                enum:
                - "ecomm_purchased"
                title: "Segment Field"
                description: "Segment by whether someone has purchased anything."
                example: "ecomm_purchased"
              op:
                type: "string"
                enum:
                - "member"
                - "notmember"
                title: "Segment Operator"
                description: "Members who have have ('member') or have not ('notmember')\
                  \ purchased."
                example: "member"
          - type: "object"
            title: "Ecommerce Spent Segment"
            description: "Segment by amount spent on a single order or across all\
              \ orders."
            properties:
              condition_type:
                type: "string"
                x-value: "EcommSpent"
                enum:
                - "EcommSpent"
              field:
                type: "string"
                enum:
                - "ecomm_spent_one"
                - "ecomm_spent_all"
                title: "Segment Field"
                description: "Segment by amount spent on a single order or across\
                  \ all orders."
                example: "ecomm_spent_one"
              op:
                type: "string"
                enum:
                - "greater"
                - "less"
                title: "Segment Operator"
                description: "Members who have spent 'more' or 'less' than then specified\
                  \ value."
                example: "greater"
              value:
                type: "integer"
                title: "Segment Data"
                description: "The total amount a member spent."
                example: 42
          - type: "object"
            title: "Ecommerce Purchased Store Segment"
            description: "Segment by purchases from a specific store."
            properties:
              condition_type:
                type: "string"
                x-value: "EcommStore"
                enum:
                - "EcommStore"
              field:
                type: "string"
                enum:
                - "ecomm_store"
                title: "Segment Field"
                description: "Segment by purchases from a specific store."
                example: "ecomm_store"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                title: "Segment Operator"
                description: "Members who have or have not purchased from a specific\
                  \ store."
                example: "is"
              value:
                type: "string"
                title: "Segment Operator"
                description: "The store id to segment against."
                example: "289"
          - type: "object"
            title: "Goal Activity Segment"
            description: "Segment by Goal activity."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "GoalActivity"
                enum:
                - "GoalActivity"
              field:
                type: "string"
                enum:
                - "goal"
                title: "Segment Field"
                description: "Segment by Goal activity."
                example: "goal"
              op:
                type: "string"
                enum:
                - "is"
                - "goal_not"
                - "contains"
                - "goal_notcontain"
                - "starts"
                - "ends"
                title: "Segment Operator"
                description: "Whether the website URL is/not exactly, contains/doesn't\
                  \ contain, starts with/ends with a string."
                example: "is"
              value:
                type: "string"
                title: "Segment Value"
                description: "The URL to check Goal activity against."
          - type: "object"
            title: "Goal Timestamp Segment"
            description: "Segment by most recent interaction with a website."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "GoalTimestamp"
                enum:
                - "GoalTimestamp"
              field:
                type: "string"
                enum:
                - "goal_last_visited"
                title: "Segment Field"
                description: "Segment by most recent interaction with a website."
                example: "goal_last_visited"
              op:
                type: "string"
                enum:
                - "greater"
                - "less"
                - "is"
                title: "Segment Operator"
                description: "Whether the website activity happened after, before,\
                  \ or at a given timestamp."
                example: "greater"
              value:
                type: "string"
                title: "Segment Value"
                description: "The date to check Goal activity against."
                example: "2015-07-20 19:45:21"
          - type: "object"
            title: "Similar Subscribers Segment Member Segment"
            description: "Segment by similar subscribers."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "FuzzySegment"
                enum:
                - "FuzzySegment"
              field:
                type: "string"
                enum:
                - "fuzzy_segment"
                title: "Segment Field"
                description: "Segment by similar subscribers."
                example: "fuzzy_segment"
              op:
                type: "string"
                enum:
                - "fuzzy_is"
                - "fuzzy_not"
                title: "Segment Operator"
                description: "Members who are/are not apart of a 'similar subscribers'\
                  \ segment."
                example: "fuzzy_is"
              value:
                type: "number"
                title: "Segment Operator"
                description: "The id for the 'similar subscribers' segment."
                example: 48433
          - type: "object"
            title: "Static Segment Member Segment"
            description: "Segment by a given static segment."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "StaticSegment"
                enum:
                - "StaticSegment"
              field:
                type: "string"
                enum:
                - "static_segment"
                title: "Segment Field"
                description: "Segment by a given static segment."
                example: "static_segment"
              op:
                type: "string"
                enum:
                - "static_is"
                - "static_not"
                title: "Segment Operator"
                description: "Members who are/are not apart of a static segment."
                example: "static_is"
              value:
                type: "number"
                title: "Segment Operator"
                description: "The id for the static segment."
                example: 48433
          - type: "object"
            title: "Location-Based Segment"
            description: "Segment by a specific country or US state."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "IPGeoCountryState"
                enum:
                - "IPGeoCountryState"
              field:
                type: "string"
                enum:
                - "ipgeo"
                title: "Segment Field"
                description: "Segmenting subscribers who are within a specific location."
                example: "ipgeo"
              op:
                type: "string"
                enum:
                - "ipgeocountry"
                - "ipgeonotcountry"
                - "ipgeostate"
                - "ipgeonotstate"
                title: "Segment Operator"
                description: "Segment members who are within a specific country or\
                  \ US state."
                example: "ipgeocountry"
              value:
                type: "string"
                title: "Segment Data"
                description: "The two-letter country code or US state abbreviation."
                example: "US"
          - type: "object"
            title: "Geolocation Segment"
            description: "Segment by a specific geographic region."
            required:
            - "field"
            - "op"
            - "value"
            - "addr"
            - "lat"
            - "lng"
            properties:
              condition_type:
                type: "string"
                x-value: "IPGeoIn"
                enum:
                - "IPGeoIn"
              field:
                type: "string"
                enum:
                - "ipgeo"
                title: "Segment Field"
                description: "Segmenting subscribers who are within a specific location."
                example: "ipgeo"
              op:
                type: "string"
                enum:
                - "ipgeoin"
                - "ipgeonotin"
                title: "Segment Operator"
                description: "Segment members who are within a specific geographic\
                  \ region."
                example: "ipgeoin"
              value:
                type: "integer"
                title: "Segment Data"
                description: "The radius of the target location."
                example: 42
              addr:
                type: "string"
                title: "Segment Location Address"
                description: "The address of the target location."
                example: "Atlanta, GA, USA"
              lat:
                type: "string"
                title: "Segment Location Latitude"
                description: "The latitude of the target location."
                example: "33.7489954"
              lng:
                type: "string"
                title: "Segment Location Longitude"
                description: "The longitude of the target location."
                example: "-84.3879824"
          - type: "object"
            title: "US Zip Code Segment"
            description: "Segment by a specific US ZIP code."
            required:
            - "field"
            - "op"
            - "value"
            - "extra"
            properties:
              condition_type:
                type: "string"
                x-value: "IPGeoInZip"
                enum:
                - "IPGeoInZip"
              field:
                type: "string"
                enum:
                - "ipgeo"
                title: "Segment Field"
                description: "Segmenting subscribers who are within a specific location."
                example: "ipgeo"
              op:
                type: "string"
                enum:
                - "ipgeoinzip"
                title: "Segment Operator"
                description: "Segment members who are within a specific US zip code."
                example: "ipgeoinzip"
              value:
                type: "integer"
                title: "Segment Data"
                description: "The radius of the target location."
                example: 25
              extra:
                type: "integer"
                title: "Extra Data"
                description: "The zip code to segment against."
                example: 30318
          - type: "object"
            title: "Unknown Location-Based Segment"
            description: "Segment members whose location information is unknown."
            required:
            - "field"
            - "op"
            properties:
              condition_type:
                type: "string"
                x-value: "IPGeoUnknown"
                enum:
                - "IPGeoUnknown"
              field:
                type: "string"
                enum:
                - "ipgeo"
                title: "Segment Field"
                description: "Segmenting subscribers who are within a specific location."
                example: "ipgeo"
              op:
                type: "string"
                enum:
                - "ipgeounknown"
                title: "Segment Operator"
                description: "Segment members for which location information is unknown."
                example: "ipgeounknown"
          - type: "object"
            title: "Zip Code Location-Based Segment"
            description: "Segment by a specific US ZIP code."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "IPGeoZip"
                enum:
                - "IPGeoZip"
              field:
                type: "string"
                enum:
                - "ipgeo"
                title: "Segment Field"
                description: "Segmenting subscribers who are within a specific location."
                example: "ipgeo"
              op:
                type: "string"
                enum:
                - "ipgeoiszip"
                - "ipgeonotzip"
                title: "Segment Operator"
                description: "Segment members who are/are not within a specific US\
                  \ zip code."
                example: "ipgeonotzip"
              value:
                type: "integer"
                title: "Segment Data"
                description: "The 5-digit zip code."
                example: 30318
          - type: "object"
            title: "Social Profiles Age Segment"
            description: "Segment by age ranges in Social Profiles data."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "SocialAge"
                enum:
                - "SocialAge"
              field:
                type: "string"
                enum:
                - "social_age"
                title: "Segment Field"
                description: "Segment by age ranges in Social Profiles data."
                example: "social_age"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                title: "Segment Operator"
                description: "Members who are/not the exact criteria listed."
                example: "is"
              value:
                type: "string"
                enum:
                - "18-24"
                - "25-34"
                - "35-54"
                - "55+"
                title: "Segment Operator"
                description: "The age range to segment."
                example: "35-54"
          - type: "object"
            title: "Social Profiles Gender Segment"
            description: "Segment by listed gender in Social Profiles data."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "SocialGender"
                enum:
                - "SocialGender"
              field:
                type: "string"
                enum:
                - "social_gender"
                title: "Segment Field"
                description: "Segment by listed gender in Social Profiles data."
                example: "social_gender"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                title: "Segment Operator"
                description: "Members who are/not the exact criteria listed."
                example: "is"
              value:
                type: "string"
                enum:
                - "male"
                - "female"
                title: "Segment Operator"
                description: "The Social Profiles gender to segment."
                example: "female"
          - type: "object"
            title: "Social Profiles Influence Segment"
            description: "Segment by influence rating in Social Profiles data."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "SocialInfluence"
                enum:
                - "SocialInfluence"
              field:
                type: "string"
                enum:
                - "social_influence"
                title: "Segment Field"
                description: "Segment by influence rating in Social Profiles data."
                example: "social_influence"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "greater"
                - "less"
                title: "Segment Operator"
                description: "Members who have a rating that is/not or greater/less\
                  \ than the rating provided."
                example: "greater"
              value:
                type: "number"
                title: "Segment Operator"
                description: "The Social Profiles influence rating to segment."
                example: 2
          - type: "object"
            title: "Social Profiles Social Network Segment"
            description: "Segment by social network in Social Profiles data."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "SocialNetworkMember"
                enum:
                - "SocialNetworkMember"
              field:
                type: "string"
                enum:
                - "social_network"
                title: "Segment Field"
                description: "Segment by social network in Social Profiles data."
                example: "social_network"
              op:
                type: "string"
                enum:
                - "member"
                - "notmember"
                title: "Segment Operator"
                description: "Members who are/not on a given social network."
                example: "member"
              value:
                type: "string"
                enum:
                - "twitter"
                - "facebook"
                - "linkedin"
                - "flickr"
                - "foursquare"
                - "lastfm"
                - "myspace"
                - "quora"
                - "vimeo"
                - "yelp"
                - "youtube"
                title: "Segment Operator"
                description: "The social network to segment against."
                example: "twitter"
          - type: "object"
            title: "Social Profiles Social Network Follow Segment"
            description: "Segment by social network in Social Profiles data."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "SocialNetworkFollow"
                enum:
                - "SocialNetworkFollow"
              field:
                type: "string"
                enum:
                - "social_network"
                title: "Segment Field"
                description: "Segment by social network in Social Profiles data."
                example: "social_network"
              op:
                type: "string"
                enum:
                - "follow"
                - "notfollow"
                title: "Segment Operator"
                description: "Members who are/not following a linked account on a\
                  \ given social network."
                example: "follow"
              value:
                type: "string"
                enum:
                - "twitter_follow"
                title: "Segment Operator"
                description: "The social network to segment against."
                example: "twitter_follow"
          - type: "object"
            title: "Address Merge Field Segment"
            description: "Segment by an address-type merge field."
            required:
            - "field"
            - "op"
            properties:
              condition_type:
                type: "string"
                x-value: "AddressMerge"
                enum:
                - "AddressMerge"
              field:
                type: "string"
                title: "Segment Field"
                description: "An address-type merge field to segment."
                example: "MMERGE3"
              op:
                type: "string"
                enum:
                - "contains"
                - "notcontain"
                - "blank"
                - "blank_not"
                title: "Segment Operator"
                description: "Whether the member's address merge field contains/does\
                  \ not contain a value or is/is not blank."
                example: "contains"
              value:
                type: "string"
                title: "Segment Value"
                description: "The value to segment a text merge field with."
                example: "Atlanta"
          - type: "object"
            title: "Address/Zip Merge Field Segment"
            description: "Segment by an address-type merge field within a given distance."
            required:
            - "field"
            - "op"
            - "value"
            - "extra"
            properties:
              condition_type:
                type: "string"
                x-value: "ZipMerge"
                enum:
                - "ZipMerge"
              field:
                type: "string"
                title: "Segment Field"
                description: "An address or zip-type merge field to segment."
                example: "MMERGE2"
              op:
                type: "string"
                enum:
                - "geoin"
                title: "Segment Operator"
                description: "Whether the member's address merge field is within a\
                  \ given distance from a city or zip."
                example: "geoin"
              value:
                type: "string"
                title: "Segment Value"
                description: "The distance from the city/zip."
                example: "25"
              extra:
                type: "string"
                title: "Segment Extra"
                description: "The city or the zip being used to segment against."
                example: "30318"
          - type: "object"
            title: "Birthday Merge Field Segment"
            description: "Segment by a contact's birthday."
            required:
            - "field"
            - "op"
            properties:
              condition_type:
                type: "string"
                x-value: "BirthdayMerge"
                enum:
                - "BirthdayMerge"
              field:
                type: "string"
                title: "Segment Field"
                description: "A date merge field to segment."
                example: "MMERGE4"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "blank"
                - "blank_not"
                title: "Segment Operator"
                description: "Whether the member's birthday merge information is/is\
                  \ not a certain date or is/is not blank."
                example: "is"
              value:
                type: "string"
                title: "Segment Value"
                description: "A date to segment against (mm/dd)."
                example: "01/30"
          - type: "object"
            title: "Date Merge Field Segment"
            description: "Segment by a given date merge field."
            required:
            - "field"
            - "op"
            properties:
              condition_type:
                type: "string"
                x-value: "DateMerge"
                enum:
                - "DateMerge"
              field:
                type: "string"
                title: "Segment Field"
                description: "A date merge field to segment."
                example: "MMERGE5"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "less"
                - "blank"
                - "blank_not"
                - "greater"
                title: "Segment Operator"
                description: "Whether the member's merge information is/is not, is\
                  \ greater/less than a value or is/is not blank."
                example: "is"
              value:
                type: "string"
                title: "Segment Value"
                description: "A date to segment against."
                example: "01/30/2015"
          - type: "object"
            title: "Dropdown/Radio Merge Field Segment"
            description: "An individual segment condition"
            required:
            - "field"
            - "op"
            properties:
              condition_type:
                type: "string"
                x-value: "SelectMerge"
                enum:
                - "SelectMerge"
              field:
                type: "string"
                title: "Segment Field"
                description: "A merge field to segment."
                example: "MMERGE6"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "blank"
                - "blank_not"
                - "notcontain"
                - "contains"
                title: "Segment Operator"
                description: "Whether the member's merge information is/is not a value\
                  \ or is/is not blank."
                example: "is"
              value:
                type: "string"
                title: "Segment Value"
                description: "The value to segment a text merge field with."
                example: "Second Choice"
          - type: "object"
            title: "Text or Number Merge Field Segment"
            description: "Segment by a given text or number merge field."
            required:
            - "field"
            - "op"
            properties:
              condition_type:
                type: "string"
                x-value: "TextMerge"
                enum:
                - "TextMerge"
              field:
                type: "string"
                title: "Segment Field"
                description: "A text or number merge field to segment."
                example: "MMERGE7"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "contains"
                - "notcontain"
                - "starts"
                - "ends"
                - "greater"
                - "less"
                - "blank"
                - "blank_not"
                title: "Segment Operator"
                description: "Whether the member's merge information is/is not, contains/does\
                  \ not contain, starts/ends with, or is greater/less than a value"
                example: "contains"
              value:
                type: "string"
                title: "Segment Value"
                description: "The value to segment a text or number merge field with."
                example: "Freddie's Jokes"
          - type: "object"
            title: "Email Segment"
            description: "Segment by email address."
            required:
            - "field"
            - "op"
            properties:
              condition_type:
                type: "string"
                x-value: "EmailAddress"
                enum:
                - "EmailAddress"
              field:
                type: "string"
                enum:
                - "merge0"
                - "EMAIL"
                title: "Segment Field"
                description: "Segmenting based off of a subscriber's email address."
                example: "EMAIL"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "contains"
                - "notcontain"
                - "starts"
                - "ends"
                - "greater"
                - "less"
                title: "Segment Operator"
                description: "Whether the email address is/not exactly, contains/doesn't\
                  \ contain, starts/ends with a string."
              value:
                type: "string"
                title: "Segment Value"
                description: "The value to compare the email against."
                example: "urist.mcvankab@freddiesjokes.com"
          - type: "object"
            title: "Predicted Gender Segment"
            description: "Segment by predicted gender."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "PredictedGender"
                enum:
                - "PredictedGender"
              field:
                type: "string"
                enum:
                - "predicted_gender"
                title: "Segment Field"
                description: "Segment by predicted gender."
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                title: "Segment Operator"
                description: "Members who are/not the exact criteria listed."
                example: "is"
              value:
                type: "string"
                enum:
                - "male"
                - "female"
                title: "Segment Operator"
                description: "The predicted gender to segment."
                example: "female"
          - type: "object"
            title: "Predicted Age Segment"
            description: "Segment by predicted age."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "PredictedAge"
                enum:
                - "PredictedAge"
              field:
                type: "string"
                enum:
                - "predicted_age_range"
                title: "Segment Field"
                description: "Segment by predicted age."
              op:
                type: "string"
                enum:
                - "is"
                title: "Segment Operator"
                description: "Members who are/not the exact criteria listed."
                example: "is"
              value:
                type: "string"
                enum:
                - "18-24"
                - "25-34"
                - "35-44"
                - "45-54"
                - "55-64"
                - "65+"
                title: "Segment Operator"
                description: "The predicted age to segment."
                example: "female"
          - type: "object"
            title: "New Subscribers Prebuilt Segment"
            description: "Segment by when people subscribed."
            properties:
              condition_type:
                type: "string"
                x-value: "NewSubscribers"
                enum:
                - "NewSubscribers"
              field:
                type: "string"
                enum:
                - "timestamp_opt"
                title: "Segment Field"
                description: "Segment by when people subscribed."
              op:
                type: "string"
                enum:
                - "date_within"
                title: "Segment Operator"
                description: "Whe the event took place, namely within a time frame."
              value:
                type: "string"
                title: "Segment Data"
                description: "What type of data to segment on: a specific date, a\
                  \ specific campaign, or the last campaign sent."
          x-discriminator:
            type: "string"
            propertyName: "condition_type"
    description: "An object representing all segmentation options. This object should\
      \ contain a `saved_segment_id` to use an existing segment, or you can create\
      \ a new segment by including both `match` and `conditions` options."
  List_4:
    type: "object"
    required:
    - "list_id"
    properties:
      list_id:
        type: "string"
        description: "The unique list id."
        title: "List ID"
      segment_opts:
        $ref: "#/definitions/Segment Options_2"
    description: "List settings for the campaign."
  Campaign Settings_3:
    type: "object"
    properties:
      subject_line:
        type: "string"
        description: "The subject line for the campaign."
        title: "Campaign Subject Line"
      preview_text:
        type: "string"
        description: "The preview text for the campaign."
        title: "Campaign Preview Text"
      title:
        type: "string"
        description: "The title of the campaign."
        title: "Campaign Title"
      from_name:
        type: "string"
        description: "The 'from' name on the campaign (not an email address)."
        title: "From Name"
      reply_to:
        type: "string"
        description: "The reply-to email address for the campaign. Note: while this\
          \ field is not required for campaign creation, it is required for sending."
        title: "Reply To Address"
      use_conversation:
        type: "boolean"
        description: "Use Mailchimp Conversation feature to manage out-of-office replies."
        title: "Conversation"
      to_name:
        type: "string"
        description: "The campaign's custom 'To' name. Typically the first name [audience\
          \ field](https://mailchimp.com/help/getting-started-with-merge-tags/)."
        title: "To Name"
      folder_id:
        type: "string"
        description: "If the campaign is listed in a folder, the id for that folder."
        title: "Folder ID"
      authenticate:
        type: "boolean"
        description: "Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/)\
          \ the campaign. Defaults to `true`."
        title: "Authentication"
      auto_footer:
        type: "boolean"
        description: "Automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/)\
          \ to the campaign."
        title: "Auto-Footer"
      inline_css:
        type: "boolean"
        description: "Automatically inline the CSS included with the campaign content."
        title: "Inline CSS"
      auto_tweet:
        type: "boolean"
        description: "Automatically tweet a link to the [campaign archive](https://mailchimp.com/help/about-email-campaign-archives-and-pages/)\
          \ page when the campaign is sent."
        title: "Auto-Tweet"
      auto_fb_post:
        type: "array"
        description: "An array of [Facebook](https://mailchimp.com/help/connect-or-disconnect-the-facebook-integration/)\
          \ page ids to auto-post to."
        title: "Auto Post to Facebook"
        items:
          type: "string"
      fb_comments:
        type: "boolean"
        description: "Allows Facebook comments on the campaign (also force-enables\
          \ the Campaign Archive toolbar). Defaults to `true`."
        title: "Facebook Comments"
      template_id:
        type: "integer"
        description: "The id of the template to use."
        title: "Template ID"
    description: "The settings for your campaign, including subject, from name, reply-to\
      \ address, and more."
  AB Test Options_1:
    type: "object"
    required:
    - "winner_criteria"
    properties:
      winner_criteria:
        type: "string"
        description: "The combination that performs the best. This may be determined\
          \ automatically by click rate, open rate, or total revenue -- or you may\
          \ choose manually based on the reporting data you find the most valuable.\
          \ For Multivariate Campaigns testing send_time, winner_criteria is ignored.\
          \ For Multivariate Campaigns with 'manual' as the winner_criteria, the winner\
          \ must be chosen in the Mailchimp web application."
        title: "Winning Criteria"
        enum:
        - "opens"
        - "clicks"
        - "manual"
        - "total_revenue"
      wait_time:
        type: "integer"
        description: "The number of minutes to wait before choosing the winning campaign.\
          \ The value of wait_time must be greater than 0 and in whole hours, specified\
          \ in minutes."
        title: "Wait Time"
      test_size:
        type: "integer"
        description: "The percentage of recipients to send the test combinations to,\
          \ must be a value between 10 and 100."
        title: "Test Size"
      subject_lines:
        type: "array"
        description: "The possible subject lines to test. If no subject lines are\
          \ provided, settings.subject_line will be used."
        title: "Subject Lines"
        items:
          type: "string"
      send_times:
        type: "array"
        description: "The possible send times to test. The times provided should be\
          \ in the format YYYY-MM-DD HH:MM:SS. If send_times are provided to test,\
          \ the test_size will be set to 100% and winner_criteria will be ignored."
        title: "Send Times"
        items:
          type: "string"
          format: "date-time"
      from_names:
        type: "array"
        description: "The possible from names. The number of from_names provided must\
          \ match the number of reply_to_addresses. If no from_names are provided,\
          \ settings.from_name will be used."
        title: "From Names"
        items:
          type: "string"
      reply_to_addresses:
        type: "array"
        description: "The possible reply-to addresses. The number of reply_to_addresses\
          \ provided must match the number of from_names. If no reply_to_addresses\
          \ are provided, settings.reply_to will be used."
        title: "Reply To Addresses"
        items:
          type: "string"
    description: "The settings specific to A/B test campaigns."
  RSS Options_1:
    type: "object"
    required:
    - "feed_url"
    - "frequency"
    properties:
      feed_url:
        type: "string"
        format: "uri"
        description: "The URL for the RSS feed."
        title: "Feed URL"
      frequency:
        type: "string"
        description: "The frequency of the RSS Campaign."
        title: "Frequency"
        enum:
        - "daily"
        - "weekly"
        - "monthly"
      schedule:
        $ref: "#/definitions/Sending Schedule"
      constrain_rss_img:
        type: "boolean"
        description: "Whether to add CSS to images in the RSS feed to constrain their\
          \ width in campaigns."
        title: "Constrain RSS Images"
    description: "[RSS](https://mailchimp.com/help/share-your-blog-posts-with-mailchimp/)\
      \ options, specific to an RSS campaign."
  Campaign_1:
    type: "object"
    required:
    - "type"
    properties:
      type:
        type: "string"
        description: "There are four types of [campaigns](https://mailchimp.com/help/getting-started-with-campaigns/)\
          \ you can create in Mailchimp. A/B Split campaigns have been deprecated\
          \ and variate campaigns should be used instead."
        title: "Campaign Type"
        enum:
        - "regular"
        - "plaintext"
        - "absplit"
        - "rss"
        - "variate"
      recipients:
        $ref: "#/definitions/List_4"
      settings:
        $ref: "#/definitions/Campaign Settings_3"
      variate_settings:
        $ref: "#/definitions/AB Test Options_1"
      tracking:
        $ref: "#/definitions/Campaign Tracking Options_1"
      rss_opts:
        $ref: "#/definitions/RSS Options_1"
      social_card:
        $ref: "#/definitions/Campaign Social Card"
      content_type:
        type: "string"
        example: "template"
        description: "How the campaign's content is put together. The old drag and\
          \ drop editor uses 'template' while the new editor uses 'multichannel'.\
          \ Defaults to template."
        title: "Content Type"
        enum:
        - "template"
        - "multichannel"
    title: "Campaign"
    description: "A summary of an individual campaign's settings and content."
  List_5:
    type: "object"
    required:
    - "list_id"
    properties:
      list_id:
        type: "string"
        description: "The unique list id."
        title: "List ID"
      segment_opts:
        $ref: "#/definitions/Segment Options_1"
    description: "List settings for the campaign."
  Campaign Settings_4:
    type: "object"
    required:
    - "from_name"
    - "reply_to"
    - "subject_line"
    properties:
      subject_line:
        type: "string"
        description: "The subject line for the campaign."
        title: "Campaign Subject Line"
      preview_text:
        type: "string"
        description: "The preview text for the campaign."
        title: "Campaign Preview Text"
      title:
        type: "string"
        description: "The title of the campaign."
        title: "Campaign Title"
      from_name:
        type: "string"
        description: "The 'from' name on the campaign (not an email address)."
        title: "From Name"
      reply_to:
        type: "string"
        description: "The reply-to email address for the campaign."
        title: "Reply To Address"
      use_conversation:
        type: "boolean"
        description: "Use Mailchimp Conversation feature to manage out-of-office replies."
        title: "Conversation"
      to_name:
        type: "string"
        description: "The campaign's custom 'To' name. Typically the first name [audience\
          \ field](https://mailchimp.com/help/getting-started-with-merge-tags/)."
        title: "To Name"
      folder_id:
        type: "string"
        description: "If the campaign is listed in a folder, the id for that folder."
        title: "Folder ID"
      authenticate:
        type: "boolean"
        description: "Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/)\
          \ the campaign. Defaults to `true`."
        title: "Authentication"
      auto_footer:
        type: "boolean"
        description: "Automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/)\
          \ to the campaign."
        title: "Auto-Footer"
      inline_css:
        type: "boolean"
        description: "Automatically inline the CSS included with the campaign content."
        title: "Inline CSS"
      auto_tweet:
        type: "boolean"
        description: "Automatically tweet a link to the [campaign archive](https://mailchimp.com/help/about-email-campaign-archives-and-pages/)\
          \ page when the campaign is sent."
        title: "Auto-Tweet"
      auto_fb_post:
        type: "array"
        description: "An array of [Facebook](https://mailchimp.com/help/connect-or-disconnect-the-facebook-integration/)\
          \ page ids to auto-post to."
        title: "Auto Post to Facebook"
        items:
          type: "string"
      fb_comments:
        type: "boolean"
        description: "Allows Facebook comments on the campaign (also force-enables\
          \ the Campaign Archive toolbar). Defaults to `true`."
        title: "Facebook Comments"
      template_id:
        type: "integer"
        description: "The id of the template to use."
        title: "Template ID"
    description: "The settings for your campaign, including subject, from name, reply-to\
      \ address, and more."
  RSS Options_2:
    type: "object"
    required:
    - "feed_url"
    - "frequency"
    properties:
      feed_url:
        type: "string"
        format: "uri"
        description: "The URL for the RSS feed."
        title: "Feed URL"
      frequency:
        type: "string"
        description: "The frequency of the RSS Campaign."
        title: "Frequency"
        enum:
        - "daily"
        - "weekly"
        - "monthly"
      schedule:
        $ref: "#/definitions/Sending Schedule"
      constrain_rss_img:
        type: "boolean"
        description: "Whether to add CSS to images in the RSS feed to constrain their\
          \ width in campaigns."
        title: "Constrain RSS Images"
    description: "[RSS](https://mailchimp.com/help/share-your-blog-posts-with-mailchimp/)\
      \ options for a campaign."
  Campaign_2:
    type: "object"
    required:
    - "settings"
    properties:
      recipients:
        $ref: "#/definitions/List_5"
      settings:
        $ref: "#/definitions/Campaign Settings_4"
      variate_settings:
        $ref: "#/definitions/AB Test Options_1"
      tracking:
        $ref: "#/definitions/Campaign Tracking Options_1"
      rss_opts:
        $ref: "#/definitions/RSS Options_2"
      social_card:
        $ref: "#/definitions/Campaign Social Card"
    title: "Campaign"
    description: "A summary of an individual campaign's settings and content."
  List_6:
    type: "object"
    required:
    - "list_id"
    properties:
      list_id:
        type: "string"
        description: "The unique list id."
        title: "List ID"
      list_name:
        type: "string"
        description: "The name of the list."
        title: "List Name"
        readOnly: true
      segment_text:
        type: "string"
        description: "A description of the [segment](https://mailchimp.com/help/save-and-manage-segments/)\
          \ used for the campaign. Formatted as a string marked up with HTML."
        title: "Segment Text"
        readOnly: true
      recipient_count:
        type: "integer"
        description: "Count of the recipients on the associated list. Formatted as\
          \ an integer."
        title: "Recipient Count"
        readOnly: true
      segment_opts:
        $ref: "#/definitions/Segment Options_1"
    description: "List settings for the campaign."
    example:
      segment_opts:
        prebuilt_segment_id: "subscribers-female"
        match: "any"
        saved_segment_id: 5
        conditions:
        - ""
        - ""
      list_id: "list_id"
      segment_text: "segment_text"
      recipient_count: 1
      list_name: "list_name"
  Campaign Settings_5:
    type: "object"
    properties:
      subject_line:
        type: "string"
        description: "The subject line for the campaign."
        title: "Campaign Subject Line"
      preview_text:
        type: "string"
        description: "The preview text for the campaign."
        title: "Campaign Preview Text"
      title:
        type: "string"
        description: "The title of the campaign."
        title: "Campaign Title"
      from_name:
        type: "string"
        description: "The 'from' name on the campaign (not an email address)."
        title: "From Name"
      reply_to:
        type: "string"
        description: "The reply-to email address for the campaign."
        title: "Reply To Address"
      use_conversation:
        type: "boolean"
        description: "Use Mailchimp Conversation feature to manage replies."
        title: "Conversation"
      to_name:
        type: "string"
        description: "The campaign's custom 'To' name. Typically the first name [audience\
          \ field](https://mailchimp.com/help/getting-started-with-merge-tags/)."
        title: "To Name"
      folder_id:
        type: "string"
        description: "If the campaign is listed in a folder, the id for that folder."
        title: "Folder ID"
      authenticate:
        type: "boolean"
        description: "Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/)\
          \ the campaign. Defaults to `true`."
        title: "Authentication"
      auto_footer:
        type: "boolean"
        description: "Automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/)\
          \ to the campaign."
        title: "Auto-Footer"
      inline_css:
        type: "boolean"
        description: "Automatically inline the CSS included with the campaign content."
        title: "Inline CSS"
      auto_tweet:
        type: "boolean"
        description: "Automatically tweet a link to the [campaign archive](https://mailchimp.com/help/about-email-campaign-archives-and-pages/)\
          \ page when the campaign is sent."
        title: "Auto-Tweet"
      auto_fb_post:
        type: "array"
        description: "An array of [Facebook](https://mailchimp.com/help/connect-or-disconnect-the-facebook-integration/)\
          \ page ids to auto-post to."
        title: "Auto Post to Facebook"
        items:
          type: "string"
      fb_comments:
        type: "boolean"
        description: "Allows Facebook comments on the campaign (also force-enables\
          \ the Campaign Archive toolbar). Defaults to `true`."
        title: "Facebook Comments"
      timewarp:
        type: "boolean"
        description: "Send this campaign using [Timewarp](https://mailchimp.com/help/use-timewarp/)."
        title: "Timewarp Send"
        readOnly: true
      template_id:
        type: "integer"
        description: "The id for the template used in this campaign."
        title: "Template ID"
        readOnly: true
      drag_and_drop:
        type: "boolean"
        description: "Whether the campaign uses the drag-and-drop editor."
        title: "Drag And Drop Campaign"
        readOnly: true
    description: "The settings for your campaign, including subject, from name, reply-to\
      \ address, and more."
    example:
      auto_footer: true
      subject_line: "subject_line"
      preview_text: "preview_text"
      use_conversation: true
      authenticate: true
      to_name: "to_name"
      timewarp: true
      title: "title"
      from_name: "from_name"
      auto_tweet: true
      auto_fb_post:
      - "auto_fb_post"
      - "auto_fb_post"
      fb_comments: true
      drag_and_drop: true
      reply_to: "reply_to"
      inline_css: true
      template_id: 5
      folder_id: "folder_id"
  AB Test Options_2:
    type: "object"
    required:
    - "winner_criteria"
    properties:
      winning_combination_id:
        type: "string"
        description: "ID for the winning combination."
        title: "Winning Combination ID"
        readOnly: true
      winning_campaign_id:
        type: "string"
        description: "ID of the campaign that was sent to the remaining recipients\
          \ based on the winning combination."
        title: "Winning Campaign ID"
        readOnly: true
      winner_criteria:
        type: "string"
        description: "The combination that performs the best. This may be determined\
          \ automatically by click rate, open rate, or total revenue -- or you may\
          \ choose manually based on the reporting data you find the most valuable.\
          \ For Multivariate Campaigns testing send_time, winner_criteria is ignored.\
          \ For Multivariate Campaigns with 'manual' as the winner_criteria, the winner\
          \ must be chosen in the Mailchimp web application."
        title: "Winning Criteria"
        enum:
        - "opens"
        - "clicks"
        - "manual"
        - "total_revenue"
      wait_time:
        type: "integer"
        description: "The number of minutes to wait before choosing the winning campaign.\
          \ The value of wait_time must be greater than 0 and in whole hours, specified\
          \ in minutes."
        title: "Wait Time"
      test_size:
        type: "integer"
        description: "The percentage of recipients to send the test combinations to,\
          \ must be a value between 10 and 100."
        title: "Test Size"
      subject_lines:
        type: "array"
        description: "The possible subject lines to test. If no subject lines are\
          \ provided, settings.subject_line will be used."
        title: "Subject Lines"
        items:
          type: "string"
      send_times:
        type: "array"
        description: "The possible send times to test. The times provided should be\
          \ in the format YYYY-MM-DD HH:MM:SS. If send_times are provided to test,\
          \ the test_size will be set to 100% and winner_criteria will be ignored."
        title: "Send Times"
        items:
          type: "string"
          format: "date-time"
      from_names:
        type: "array"
        description: "The possible from names. The number of from_names provided must\
          \ match the number of reply_to_addresses. If no from_names are provided,\
          \ settings.from_name will be used."
        title: "From Names"
        items:
          type: "string"
      reply_to_addresses:
        type: "array"
        description: "The possible reply-to addresses. The number of reply_to_addresses\
          \ provided must match the number of from_names. If no reply_to_addresses\
          \ are provided, settings.reply_to will be used."
        title: "Reply To Addresses"
        items:
          type: "string"
      contents:
        type: "array"
        description: "Descriptions of possible email contents. To set campaign contents,\
          \ make a PUT request to /campaigns/{campaign_id}/content with the field\
          \ 'variate_contents'."
        title: "Content Descriptions"
        readOnly: true
        items:
          type: "string"
      combinations:
        type: "array"
        description: "Combinations of possible variables used to build emails."
        title: "Combinations"
        readOnly: true
        items:
          $ref: "#/definitions/AB Test Options_combinations"
    description: "The settings specific to A/B test campaigns."
    example:
      send_times:
      - "2000-01-23T04:56:07.000+00:00"
      - "2000-01-23T04:56:07.000+00:00"
      combinations:
      - subject_line: 7
        send_time: 9
        reply_to: 2
        recipients: 7
        id: "id"
        from_name: 3
        content_description: 4
      - subject_line: 7
        send_time: 9
        reply_to: 2
        recipients: 7
        id: "id"
        from_name: 3
        content_description: 4
      wait_time: 5
      subject_lines:
      - "subject_lines"
      - "subject_lines"
      contents:
      - "contents"
      - "contents"
      test_size: 2
      winning_combination_id: "winning_combination_id"
      reply_to_addresses:
      - "reply_to_addresses"
      - "reply_to_addresses"
      winner_criteria: "opens"
      winning_campaign_id: "winning_campaign_id"
      from_names:
      - "from_names"
      - "from_names"
  Sending Schedule_1:
    type: "object"
    properties:
      hour:
        type: "integer"
        description: "The hour to send the campaign in local time. Acceptable hours\
          \ are 0-23. For example, '4' would be 4am in [your account's default time\
          \ zone](https://mailchimp.com/help/set-account-details/)."
        title: "Sending Hour"
        minimum: 0
        maximum: 23
      daily_send:
        $ref: "#/definitions/Daily Sending Days"
      weekly_send_day:
        type: "string"
        description: "The day of the week to send a weekly RSS Campaign."
        title: "Weekly Sending Day"
        enum:
        - "sunday"
        - "monday"
        - "tuesday"
        - "wednesday"
        - "thursday"
        - "friday"
        - "saturday"
      monthly_send_date:
        type: "number"
        description: "The day of the month to send a monthly RSS Campaign. Acceptable\
          \ days are 0-31, where '0' is always the last day of a month. Months with\
          \ fewer than the selected number of days will not have an RSS campaign sent\
          \ out that day. For example, RSS Campaigns set to send on the 30th will\
          \ not go out in February."
        title: "Monthly Sending Day"
        minimum: 0
        maximum: 31
    description: "The schedule for sending the RSS Campaign."
    example:
      hour: 16
      weekly_send_day: "sunday"
      daily_send:
        sunday: true
        saturday: true
        tuesday: true
        wednesday: true
        thursday: true
        friday: true
        monday: true
      monthly_send_date: 28.83447715619098516981466673314571380615234375
  RSS Options_3:
    type: "object"
    required:
    - "feed_url"
    - "frequency"
    properties:
      feed_url:
        type: "string"
        format: "uri"
        description: "The URL for the RSS feed."
        title: "Feed URL"
      frequency:
        type: "string"
        description: "The frequency of the RSS Campaign."
        title: "Frequency"
        enum:
        - "daily"
        - "weekly"
        - "monthly"
      schedule:
        $ref: "#/definitions/Sending Schedule_1"
      last_sent:
        type: "string"
        format: "date-time"
        description: "The date the campaign was last sent."
        title: "Last Sent"
        readOnly: true
      constrain_rss_img:
        type: "boolean"
        description: "Whether to add CSS to images in the RSS feed to constrain their\
          \ width in campaigns."
        title: "Constrain RSS Images"
    description: "[RSS](https://mailchimp.com/help/share-your-blog-posts-with-mailchimp/)\
      \ options for a campaign."
    example:
      schedule:
        hour: 16
        weekly_send_day: "sunday"
        daily_send:
          sunday: true
          saturday: true
          tuesday: true
          wednesday: true
          thursday: true
          friday: true
          monday: true
        monthly_send_date: 28.83447715619098516981466673314571380615234375
      last_sent: "2000-01-23T04:56:07.000+00:00"
      constrain_rss_img: true
      feed_url: "http://example.com/aeiou"
      frequency: "daily"
  Campaign Report Summary_3:
    type: "object"
    properties:
      opens:
        type: "integer"
        description: "The total number of opens for a campaign."
        title: "Automation Opens"
        readOnly: true
      unique_opens:
        type: "integer"
        description: "The number of unique opens."
        title: "Unique Opens"
        readOnly: true
      open_rate:
        type: "number"
        description: "The number of unique opens divided by the total number of successful\
          \ deliveries."
        title: "Open Rate"
        readOnly: true
      clicks:
        type: "integer"
        description: "The total number of clicks for an campaign."
        title: "Total Clicks"
        readOnly: true
      subscriber_clicks:
        type: "integer"
        description: "The number of unique clicks."
        title: "Unique Subscriber Clicks"
        readOnly: true
      click_rate:
        type: "number"
        description: "The number of unique clicks divided by the total number of successful\
          \ deliveries."
        title: "Click Rate"
        readOnly: true
      ecommerce:
        $ref: "#/definitions/ECommerce Report"
    description: "For sent campaigns, a summary of opens and clicks."
    example:
      subscriber_clicks: 1
      click_rate: 1.024645700144157789424070870154537260532379150390625
      ecommerce:
        total_spent: 8.7620420127490010742121739895083010196685791015625
        total_revenue: 9.0183481860707832566959041287191212177276611328125
        total_orders: 6
      opens: 3
      clicks: 7
      unique_opens: 2
      open_rate: 4.1456080298839363962315474054776132106781005859375
  Campaign_3:
    type: "object"
    required:
    - "type"
    properties:
      id:
        type: "string"
        description: "A string that uniquely identifies this campaign."
        title: "Campaign ID"
        readOnly: true
      web_id:
        type: "integer"
        description: "The ID used in the Mailchimp web application. View this campaign\
          \ in your Mailchimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`."
        title: "Campaign Web ID"
        readOnly: true
      parent_campaign_id:
        type: "string"
        description: "If this campaign is the child of another campaign, this identifies\
          \ the parent campaign. For Example, for RSS or Automation children."
        title: "Parent Campaign ID"
        readOnly: true
      type:
        type: "string"
        description: "There are four types of [campaigns](https://mailchimp.com/help/getting-started-with-campaigns/)\
          \ you can create in Mailchimp. A/B Split campaigns have been deprecated\
          \ and variate campaigns should be used instead."
        title: "Campaign Type"
        enum:
        - "regular"
        - "plaintext"
        - "absplit"
        - "rss"
        - "variate"
      create_time:
        type: "string"
        format: "date-time"
        description: "The date and time the campaign was created in ISO 8601 format."
        title: "Create Time"
        readOnly: true
      archive_url:
        type: "string"
        description: "The link to the campaign's archive version."
        title: "Archive URL"
        readOnly: true
      long_archive_url:
        type: "string"
        description: "The original link to the campaign's archive version."
        title: "Long Archive URL"
        readOnly: true
      status:
        type: "string"
        description: "The current status of the campaign."
        title: "Campaign Status"
        readOnly: true
        enum:
        - "save"
        - "paused"
        - "schedule"
        - "sending"
        - "sent"
        - "canceled"
        - "canceling"
        - "archived"
      emails_sent:
        type: "integer"
        description: "The total number of emails sent for this campaign."
        title: "Emails Sent"
        readOnly: true
      send_time:
        type: "string"
        format: "date-time"
        description: "The date and time a campaign was sent in ISO 8601 format."
        title: "Send Time"
        readOnly: true
      content_type:
        type: "string"
        description: "How the campaign's content is put together ('template', 'drag_and_drop',\
          \ 'html', 'url')."
        title: "Content Type"
        readOnly: true
      needs_block_refresh:
        type: "boolean"
        description: "Determines if the campaign needs its blocks refreshed by opening\
          \ the web-based campaign editor. Deprecated and will always return false."
        title: "Needs Block Refresh"
        readOnly: true
      resendable:
        type: "boolean"
        description: "Determines if the campaign qualifies to be resent to non-openers."
        title: "Resendable"
        readOnly: true
      recipients:
        $ref: "#/definitions/List_6"
      settings:
        $ref: "#/definitions/Campaign Settings_5"
      variate_settings:
        $ref: "#/definitions/AB Test Options_2"
      tracking:
        $ref: "#/definitions/Campaign Tracking Options_1"
      rss_opts:
        $ref: "#/definitions/RSS Options_3"
      ab_split_opts:
        $ref: "#/definitions/AB Testing Options"
      social_card:
        $ref: "#/definitions/Campaign Social Card"
      report_summary:
        $ref: "#/definitions/Campaign Report Summary_3"
      delivery_status:
        $ref: "#/definitions/Campaign Delivery Status"
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A summary of an individual campaign's settings and content."
    example:
      archive_url: "archive_url"
      resendable: true
      settings:
        auto_footer: true
        subject_line: "subject_line"
        preview_text: "preview_text"
        use_conversation: true
        authenticate: true
        to_name: "to_name"
        timewarp: true
        title: "title"
        from_name: "from_name"
        auto_tweet: true
        auto_fb_post:
        - "auto_fb_post"
        - "auto_fb_post"
        fb_comments: true
        drag_and_drop: true
        reply_to: "reply_to"
        inline_css: true
        template_id: 5
        folder_id: "folder_id"
      variate_settings:
        send_times:
        - "2000-01-23T04:56:07.000+00:00"
        - "2000-01-23T04:56:07.000+00:00"
        combinations:
        - subject_line: 7
          send_time: 9
          reply_to: 2
          recipients: 7
          id: "id"
          from_name: 3
          content_description: 4
        - subject_line: 7
          send_time: 9
          reply_to: 2
          recipients: 7
          id: "id"
          from_name: 3
          content_description: 4
        wait_time: 5
        subject_lines:
        - "subject_lines"
        - "subject_lines"
        contents:
        - "contents"
        - "contents"
        test_size: 2
        winning_combination_id: "winning_combination_id"
        reply_to_addresses:
        - "reply_to_addresses"
        - "reply_to_addresses"
        winner_criteria: "opens"
        winning_campaign_id: "winning_campaign_id"
        from_names:
        - "from_names"
        - "from_names"
      ab_split_opts:
        pick_winner: "opens"
        wait_time: 1
        wait_units: "hours"
        subject_b: "subject_b"
        subject_a: "subject_a"
        split_test: "subject"
        from_name_a: "from_name_a"
        from_name_b: "from_name_b"
        send_time_winner: "send_time_winner"
        reply_email_b: "reply_email_b"
        reply_email_a: "reply_email_a"
        send_time_a: "2000-01-23T04:56:07.000+00:00"
        send_time_b: "2000-01-23T04:56:07.000+00:00"
        split_size: 34
      create_time: "2000-01-23T04:56:07.000+00:00"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      web_id: 0
      type: "regular"
      tracking:
        salesforce:
          notes: true
          campaign: true
        goal_tracking: true
        capsule:
          notes: true
        clicktale: "clicktale"
        text_clicks: true
        ecomm360: true
        opens: true
        google_analytics: "google_analytics"
        html_clicks: true
      needs_block_refresh: true
      send_time: "2000-01-23T04:56:07.000+00:00"
      rss_opts:
        schedule:
          hour: 16
          weekly_send_day: "sunday"
          daily_send:
            sunday: true
            saturday: true
            tuesday: true
            wednesday: true
            thursday: true
            friday: true
            monday: true
          monthly_send_date: 28.83447715619098516981466673314571380615234375
        last_sent: "2000-01-23T04:56:07.000+00:00"
        constrain_rss_img: true
        feed_url: "http://example.com/aeiou"
        frequency: "daily"
      parent_campaign_id: "parent_campaign_id"
      content_type: "content_type"
      social_card:
        image_url: "image_url"
        description: "description"
        title: "title"
      recipients:
        segment_opts:
          prebuilt_segment_id: "subscribers-female"
          match: "any"
          saved_segment_id: 5
          conditions:
          - ""
          - ""
        list_id: "list_id"
        segment_text: "segment_text"
        recipient_count: 1
        list_name: "list_name"
      emails_sent: 6
      id: "id"
      delivery_status:
        emails_sent: 6
        can_cancel: true
        emails_canceled: 3
        enabled: true
        status: "delivering"
      long_archive_url: "long_archive_url"
      status: "save"
      report_summary:
        subscriber_clicks: 1
        click_rate: 1.024645700144157789424070870154537260532379150390625
        ecommerce:
          total_spent: 8.7620420127490010742121739895083010196685791015625
          total_revenue: 9.0183481860707832566959041287191212177276611328125
          total_orders: 6
        opens: 3
        clicks: 7
        unique_opens: 2
        open_rate: 4.1456080298839363962315474054776132106781005859375
  Batch Delivery:
    type: "object"
    required:
    - "batch_count"
    - "batch_delay"
    properties:
      batch_delay:
        type: "integer"
        description: "The delay, in minutes, between batches."
        title: "Batch Delay"
      batch_count:
        type: "integer"
        description: "The number of batches for the campaign send."
        title: "Batch Count"
    description: "Choose whether the campaign should use [Batch Delivery](https://mailchimp.com/help/schedule-batch-delivery/).\
      \ Cannot be set to `true` for campaigns using [Timewarp](https://mailchimp.com/help/use-timewarp/)."
  body_1:
    type: "object"
    required:
    - "schedule_time"
    properties:
      schedule_time:
        type: "string"
        format: "date-time"
        description: "The UTC date and time to schedule the campaign for delivery\
          \ in ISO 8601 format. Campaigns may only be scheduled to send on the quarter-hour\
          \ (:00, :15, :30, :45)."
        title: "Schedule Time"
      timewarp:
        type: "boolean"
        description: "Choose whether the campaign should use [Timewarp](https://mailchimp.com/help/use-timewarp/)\
          \ when sending. Campaigns scheduled with Timewarp are localized based on\
          \ the recipients' time zones. For example, a Timewarp campaign with a `schedule_time`\
          \ of 13:00 will be sent to each recipient at 1:00pm in their local time.\
          \ Cannot be set to `true` for campaigns using [Batch Delivery](https://mailchimp.com/help/schedule-batch-delivery/)."
        title: "Timewarp"
      batch_delivery:
        $ref: "#/definitions/Batch Delivery"
  body_2:
    type: "object"
    required:
    - "send_type"
    - "test_emails"
    properties:
      test_emails:
        type: "array"
        description: "An array of email addresses to send the test email to."
        title: "Test Emails"
        items:
          type: "string"
      send_type:
        type: "string"
        description: "Choose the type of test email to send."
        title: "Type of email to test"
        enum:
        - "html"
        - "plaintext"
  Campaign Content_variate_contents:
    type: "object"
    properties:
      content_label:
        type: "string"
        example: "Green header"
        description: "Label used to identify the content option."
        title: "Content Label"
      plain_text:
        type: "string"
        description: "The plain-text portion of the campaign. If left unspecified,\
          \ we'll generate this automatically."
        title: "Plain Text"
      html:
        type: "string"
        example: "<!DOCTYPE html><html xmlns=http://www.w3.org/1999/xhtml><head><meta\
          \ http-equiv=Content-Type content=\"text/html; charset=UTF-8\"><title>*|MC:SUBJECT|*</title><style\
          \ type=text/css>body{background-color:#d0e4fe}</style><body leftmargin=0\
          \ marginwidth=0 topmargin=0 marginheight=0 offset=0>"
        description: "The raw HTML for the campaign."
        title: "Campaign HTML"
    example:
      content_label: "Green header"
      plain_text: "plain_text"
      html: "<!DOCTYPE html><html xmlns=http://www.w3.org/1999/xhtml><head><meta http-equiv=Content-Type\
        \ content=\"text/html; charset=UTF-8\"><title>*|MC:SUBJECT|*</title><style\
        \ type=text/css>body{background-color:#d0e4fe}</style><body leftmargin=0 marginwidth=0\
        \ topmargin=0 marginheight=0 offset=0>"
  Campaign Content:
    type: "object"
    properties:
      variate_contents:
        type: "array"
        description: "Content options for multivariate campaigns."
        title: "Variate Contents"
        items:
          $ref: "#/definitions/Campaign Content_variate_contents"
      plain_text:
        type: "string"
        description: "The plain-text portion of the campaign. If left unspecified,\
          \ we'll generate this automatically."
        title: "Plain Text"
      html:
        type: "string"
        description: "The raw HTML for the campaign."
        title: "Campaign HTML"
      archive_html:
        type: "string"
        example: "<!DOCTYPE html><html xmlns=http://www.w3.org/1999/xhtml><head><meta\
          \ http-equiv=Content-Type content=\"text/html; charset=UTF-8\"><title>My\
          \ Subject</title><style type=text/css>body{background-color:#d0e4fe}</style><body\
          \ leftmargin=0 marginwidth=0 topmargin=0 marginheight=0 offset=0>"
        description: "The Archive HTML for the campaign."
        title: "Campaign Archive HTML"
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "The HTML and plain-text content for a campaign."
    example:
      archive_html: "<!DOCTYPE html><html xmlns=http://www.w3.org/1999/xhtml><head><meta\
        \ http-equiv=Content-Type content=\"text/html; charset=UTF-8\"><title>My Subject</title><style\
        \ type=text/css>body{background-color:#d0e4fe}</style><body leftmargin=0 marginwidth=0\
        \ topmargin=0 marginheight=0 offset=0>"
      plain_text: "plain_text"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      variate_contents:
      - content_label: "Green header"
        plain_text: "plain_text"
        html: "<!DOCTYPE html><html xmlns=http://www.w3.org/1999/xhtml><head><meta\
          \ http-equiv=Content-Type content=\"text/html; charset=UTF-8\"><title>*|MC:SUBJECT|*</title><style\
          \ type=text/css>body{background-color:#d0e4fe}</style><body leftmargin=0\
          \ marginwidth=0 topmargin=0 marginheight=0 offset=0>"
      - content_label: "Green header"
        plain_text: "plain_text"
        html: "<!DOCTYPE html><html xmlns=http://www.w3.org/1999/xhtml><head><meta\
          \ http-equiv=Content-Type content=\"text/html; charset=UTF-8\"><title>*|MC:SUBJECT|*</title><style\
          \ type=text/css>body{background-color:#d0e4fe}</style><body leftmargin=0\
          \ marginwidth=0 topmargin=0 marginheight=0 offset=0>"
      html: "html"
  Template Content:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        description: "The id of the template to use."
        title: "Template ID"
      sections:
        type: "object"
        description: "Content for the sections of the template. Each key should be\
          \ the unique [mc:edit area](https://mailchimp.com/help/create-editable-content-areas-with-mailchimps-template-language/)\
          \ name from the template."
        title: "Template Sections"
        properties: {}
    description: "Use this template to generate the HTML content of the campaign"
  Upload Archive:
    type: "object"
    required:
    - "archive_content"
    properties:
      archive_content:
        type: "string"
        description: "The base64-encoded representation of the archive file."
        title: "Archive Content"
      archive_type:
        type: "string"
        description: "The type of encoded file. Defaults to zip."
        title: "Archive Type"
        enum:
        - "zip"
        - "tar.gz"
        - "tar.bz2"
        - "tar"
        - "tgz"
        - "tbz"
    description: "Available when uploading an archive to create campaign content.\
      \ The archive should include all campaign content and images. [Learn more](https://mailchimp.com/help/import-a-custom-html-template/)."
  Template Content_1:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        description: "The id of the template to use."
        title: "Template ID"
      sections:
        type: "object"
        description: "Content for the sections of the template. Each key should be\
          \ the unique [mc:edit area](https://mailchimp.com/help/create-editable-content-areas-with-mailchimps-template-language/)\
          \ name from the template."
        title: "Template Sections"
        properties: {}
    description: "Use this template to generate the HTML content for the campaign."
  campaignscampaign_idcontent_variate_contents:
    type: "object"
    required:
    - "content_label"
    properties:
      content_label:
        type: "string"
        description: "The label used to identify the content option."
        title: "Content Label"
      plain_text:
        type: "string"
        description: "The plain-text portion of the campaign. If left unspecified,\
          \ we'll generate this automatically."
        title: "Plain Text"
      html:
        type: "string"
        description: "The raw HTML for the campaign."
        title: "Campaign HTML"
      url:
        type: "string"
        description: "When importing a campaign, the URL for the HTML."
        title: "Campaign URL"
      template:
        $ref: "#/definitions/Template Content_1"
      archive:
        $ref: "#/definitions/Upload Archive"
  Campaign Content_1:
    type: "object"
    properties:
      plain_text:
        type: "string"
        description: "The plain-text portion of the campaign. If left unspecified,\
          \ we'll generate this automatically."
        title: "Plain Text"
      html:
        type: "string"
        description: "The raw HTML for the campaign."
        title: "Campaign HTML"
      url:
        type: "string"
        description: "When importing a campaign, the URL where the HTML lives."
        title: "Campaign URL"
      template:
        $ref: "#/definitions/Template Content"
      archive:
        $ref: "#/definitions/Upload Archive"
      variate_contents:
        type: "array"
        description: "Content options for [Multivariate Campaigns](https://mailchimp.com/help/about-multivariate-campaigns/).\
          \ Each content option must provide HTML content and may optionally provide\
          \ plain text. For campaigns not testing content, only one object should\
          \ be provided."
        title: "Variate Contents"
        items:
          $ref: "#/definitions/campaignscampaign_idcontent_variate_contents"
    title: "Campaign Content"
    description: "The HTML and plain-text content for a campaign"
  Campaign Feedback:
    type: "object"
    required:
    - "message"
    properties:
      feedback_id:
        type: "integer"
        description: "The individual id for the feedback item."
        title: "Feedback ID"
        readOnly: true
      parent_id:
        type: "integer"
        description: "If a reply, the id of the parent feedback item."
        title: "Parent ID"
        readOnly: true
      block_id:
        type: "integer"
        description: "The block id for the editable block that the feedback addresses."
        title: "Block ID"
      message:
        type: "string"
        description: "The content of the feedback."
        title: "Message"
      is_complete:
        type: "boolean"
        description: "The status of feedback."
        title: "Complete"
      created_by:
        type: "string"
        description: "The login name of the user who created the feedback."
        title: "Created By"
        readOnly: true
      created_at:
        type: "string"
        format: "date-time"
        description: "The date and time the feedback item was created in ISO 8601\
          \ format."
        title: "Created At"
        readOnly: true
      updated_at:
        type: "string"
        format: "date-time"
        description: "The date and time the feedback was last updated in ISO 8601\
          \ format."
        title: "Updated At"
        readOnly: true
      source:
        type: "string"
        description: "The source of the feedback."
        title: "Source"
        readOnly: true
        enum:
        - "api"
        - "email"
        - "sms"
        - "web"
        - "ios"
        - "android"
      campaign_id:
        type: "string"
        description: "The unique id for the campaign."
        title: "Campaign ID"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A specific feedback message from a specific campaign."
    example:
      updated_at: "2000-01-23T04:56:07.000+00:00"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      parent_id: 6
      feedback_id: 0
      created_at: "2000-01-23T04:56:07.000+00:00"
      is_complete: true
      source: "api"
      message: "message"
      created_by: "created_by"
      block_id: 1
      campaign_id: "campaign_id"
  Campaign Reports:
    type: "object"
    properties:
      feedback:
        type: "array"
        description: "A collection of feedback items for a campaign."
        title: "Campaign Feedback"
        items:
          $ref: "#/definitions/Campaign Feedback"
      campaign_id:
        type: "string"
        description: "The unique id for the campaign."
        title: "Campaign ID"
        readOnly: true
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A summary of the comment feedback for a specific campaign."
    example:
      feedback:
      - updated_at: "2000-01-23T04:56:07.000+00:00"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        parent_id: 6
        feedback_id: 0
        created_at: "2000-01-23T04:56:07.000+00:00"
        is_complete: true
        source: "api"
        message: "message"
        created_by: "created_by"
        block_id: 1
        campaign_id: "campaign_id"
      - updated_at: "2000-01-23T04:56:07.000+00:00"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        parent_id: 6
        feedback_id: 0
        created_at: "2000-01-23T04:56:07.000+00:00"
        is_complete: true
        source: "api"
        message: "message"
        created_by: "created_by"
        block_id: 1
        campaign_id: "campaign_id"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      total_items: 5
      campaign_id: "campaign_id"
  Campaign Feedback_1:
    type: "object"
    required:
    - "message"
    properties:
      block_id:
        type: "integer"
        description: "The block id for the editable block that the feedback addresses."
        title: "Block ID"
      message:
        type: "string"
        description: "The content of the feedback."
        title: "Message"
      is_complete:
        type: "boolean"
        description: "The status of feedback."
        title: "Complete"
    title: "Campaign Feedback"
    description: "A specific feedback message from a specific campaign."
  Campaign Feedback_2:
    type: "object"
    properties:
      feedback_id:
        type: "integer"
        description: "The individual id for the feedback item."
        title: "Feedback ID"
        readOnly: true
      parent_id:
        type: "integer"
        description: "If a reply, the id of the parent feedback item."
        title: "Parent ID"
        readOnly: true
      block_id:
        type: "integer"
        description: "The block id for the editable block that the feedback addresses."
        title: "Block ID"
      message:
        type: "string"
        description: "The content of the feedback."
        title: "Message"
      is_complete:
        type: "boolean"
        description: "The status of feedback."
        title: "Complete"
      created_by:
        type: "string"
        description: "The login name of the user who created the feedback."
        title: "Created By"
        readOnly: true
      created_at:
        type: "string"
        format: "date-time"
        description: "The date and time the feedback item was created in ISO 8601\
          \ format."
        title: "Created At"
        readOnly: true
      updated_at:
        type: "string"
        format: "date-time"
        description: "The date and time the feedback was last updated in ISO 8601\
          \ format."
        title: "Updated At"
        readOnly: true
      source:
        type: "string"
        description: "The source of the feedback."
        title: "Source"
        readOnly: true
        enum:
        - "api"
        - "email"
        - "sms"
        - "web"
        - "ios"
        - "android"
      campaign_id:
        type: "string"
        description: "The unique id for the campaign."
        title: "Campaign ID"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A specific feedback message from a specific campaign."
    example:
      updated_at: "2000-01-23T04:56:07.000+00:00"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      parent_id: 6
      feedback_id: 0
      created_at: "2000-01-23T04:56:07.000+00:00"
      is_complete: true
      source: "api"
      message: "message"
      created_by: "created_by"
      block_id: 1
      campaign_id: "campaign_id"
  Campaign Feedback_3:
    type: "object"
    properties:
      block_id:
        type: "integer"
        description: "The block id for the editable block that the feedback addresses."
        title: "Block ID"
      message:
        type: "string"
        description: "The content of the feedback."
        title: "Message"
      is_complete:
        type: "boolean"
        description: "The status of feedback."
        title: "Complete"
    title: "Campaign Feedback"
    description: "A specific feedback message from a specific campaign."
  Send Checklist_items:
    type: "object"
    properties:
      type:
        type: "string"
        description: "The item type."
        title: "Type"
        enum:
        - "success"
        - "warning"
        - "error"
      id:
        type: "integer"
        description: "The ID for the specific item."
        title: "ID"
      heading:
        type: "string"
        description: "The heading for the specific item."
        title: "Heading"
      details:
        type: "string"
        description: "Details about the specific feedback item."
        title: "Details"
    example:
      heading: "heading"
      details: "details"
      id: 0
      type: "success"
  Send Checklist:
    type: "object"
    properties:
      is_ready:
        type: "boolean"
        description: "Whether the campaign is ready to send."
        title: "Ready?"
      items:
        type: "array"
        description: "A list of feedback items to review before sending your campaign."
        title: "Items"
        items:
          $ref: "#/definitions/Send Checklist_items"
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "The send checklist for the campaign."
    example:
      is_ready: true
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      items:
      - heading: "heading"
        details: "details"
        id: 0
        type: "success"
      - heading: "heading"
        details: "details"
        id: 0
        type: "success"
  Script:
    type: "object"
    properties:
      url:
        type: "string"
        example: "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
        description: "The URL used for any integrations that offer built-in support\
          \ for connected sites."
        title: "Script URL"
      fragment:
        type: "string"
        example: "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"\
          script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\"\
          );</script>"
        description: "A pre-built script that you can copy-and-paste into your site\
          \ to integrate it with Mailchimp."
        title: "Script Fragment"
    description: "The script used to connect your site with Mailchimp."
    example:
      fragment: "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"\
        script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\"\
        );</script>"
      url: "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
  Connected Site:
    type: "object"
    properties:
      foreign_id:
        type: "string"
        example: "a180c384d7db88b if created in-app, MC001 if created via API"
        description: "The unique identifier for the site."
        title: "Connected Site Foreign ID"
        readOnly: true
      store_id:
        type: "string"
        example: "MC001"
        description: "The unique identifier for the ecommerce store that's associated\
          \ with the connected site (if any). The store_id for a specific connected\
          \ site can't change."
        title: "Store ID"
        readOnly: true
      platform:
        type: "string"
        example: "shopify, magento, bigcommerce, woocommerce"
        description: "The platform of the connected site."
        title: "Connected Site Platform"
        readOnly: true
      domain:
        type: "string"
        example: "example.myshopify.com"
        description: "The connected site domain."
        title: "Domain"
        readOnly: true
      site_script:
        $ref: "#/definitions/Script"
      created_at:
        type: "string"
        format: "date-time"
        example: "2015-07-15T19:28:00+00:00"
        description: "The date and time the connected site was created in ISO 8601\
          \ format."
        title: "Creation Time"
        readOnly: true
      updated_at:
        type: "string"
        format: "date-time"
        example: "2015-07-15T19:35:00+00:00"
        description: "The date and time the connected site was last updated in ISO\
          \ 8601 format."
        title: "Update Time"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "Information about a specific connected site."
    example:
      foreign_id: "a180c384d7db88b if created in-app, MC001 if created via API"
      store_id: "MC001"
      updated_at: "2015-07-15T19:35:00+00:00"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      domain: "example.myshopify.com"
      site_script:
        fragment: "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"\
          script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\"\
          );</script>"
        url: "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
      created_at: "2015-07-15T19:28:00+00:00"
      platform: "shopify, magento, bigcommerce, woocommerce"
  Connected Sites:
    type: "object"
    properties:
      sites:
        type: "array"
        description: "An array of objects, each representing a connected site."
        title: "Connected Sites"
        items:
          $ref: "#/definitions/Connected Site"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A collection of connected sites in the account."
    example:
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      sites:
      - foreign_id: "a180c384d7db88b if created in-app, MC001 if created via API"
        store_id: "MC001"
        updated_at: "2015-07-15T19:35:00+00:00"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        domain: "example.myshopify.com"
        site_script:
          fragment: "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"\
            script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\"\
            );</script>"
          url: "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
        created_at: "2015-07-15T19:28:00+00:00"
        platform: "shopify, magento, bigcommerce, woocommerce"
      - foreign_id: "a180c384d7db88b if created in-app, MC001 if created via API"
        store_id: "MC001"
        updated_at: "2015-07-15T19:35:00+00:00"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        domain: "example.myshopify.com"
        site_script:
          fragment: "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"\
            script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\"\
            );</script>"
          url: "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
        created_at: "2015-07-15T19:28:00+00:00"
        platform: "shopify, magento, bigcommerce, woocommerce"
      total_items: 0
  Connected Site_1:
    type: "object"
    required:
    - "domain"
    - "foreign_id"
    properties:
      foreign_id:
        type: "string"
        example: "MC001"
        description: "The unique identifier for the site."
        title: "Connected Site Foreign ID"
      domain:
        type: "string"
        example: "example.com"
        description: "The connected site domain."
        title: "Domain"
    title: "Connected Site"
    description: "Information about a specific connected site."
  Last Message:
    type: "object"
    properties:
      from_label:
        type: "string"
        description: "A label representing the sender of this message."
        title: "From Label"
        readOnly: true
      from_email:
        type: "string"
        description: "A label representing the email of the sender of this message."
        title: "From Email"
        readOnly: true
      subject:
        type: "string"
        description: "The subject of this message."
        title: "Subject"
        readOnly: true
      message:
        type: "string"
        description: "The plain-text content of the message."
        title: "Message"
        readOnly: true
      read:
        type: "boolean"
        description: "Whether this message has been marked as read."
        title: "Read"
      timestamp:
        type: "string"
        format: "date-time"
        description: "The date and time the message was either sent or received in\
          \ ISO 8601 format."
        title: "Timestamp"
        readOnly: true
    description: "The most recent message in the conversation."
    example:
      from_email: "from_email"
      read: true
      subject: "subject"
      message: "message"
      from_label: "from_label"
      timestamp: "2000-01-23T04:56:07.000+00:00"
  Conversation:
    type: "object"
    properties:
      id:
        type: "string"
        description: "A string that uniquely identifies this conversation."
        title: "ID"
        readOnly: true
      message_count:
        type: "integer"
        description: "The total number of messages in this conversation."
        title: "Message Count"
        readOnly: true
      campaign_id:
        type: "string"
        description: "The unique identifier of the campaign for this conversation."
        title: "Campaign ID"
        readOnly: true
      list_id:
        type: "string"
        description: "The unique identifier of the list for this conversation."
        title: "List ID"
        readOnly: true
      unread_messages:
        type: "integer"
        description: "The number of unread messages in this conversation."
        title: "Unread Messages"
        readOnly: true
      from_label:
        type: "string"
        description: "A label representing the sender of this message."
        title: "From Label"
        readOnly: true
      from_email:
        type: "string"
        description: "A label representing the email of the sender of this message."
        title: "From Email"
        readOnly: true
      subject:
        type: "string"
        description: "The subject of the message."
        title: "Subject"
        readOnly: true
      last_message:
        $ref: "#/definitions/Last Message"
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "Details about an individual conversation. Conversation tracking\
      \ is a feature available to paid accounts that lets you view replies to your\
      \ campaigns in your Mailchimp account."
    example:
      from_email: "from_email"
      list_id: "list_id"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      subject: "subject"
      unread_messages: 6
      last_message:
        from_email: "from_email"
        read: true
        subject: "subject"
        message: "message"
        from_label: "from_label"
        timestamp: "2000-01-23T04:56:07.000+00:00"
      id: "id"
      message_count: 0
      from_label: "from_label"
      campaign_id: "campaign_id"
  Tracked Conversations:
    type: "object"
    properties:
      conversations:
        type: "array"
        description: "A list of conversations."
        title: "Conversations"
        items:
          $ref: "#/definitions/Conversation"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A collection of this account's tracked conversations."
    example:
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      conversations:
      - from_email: "from_email"
        list_id: "list_id"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        subject: "subject"
        unread_messages: 6
        last_message:
          from_email: "from_email"
          read: true
          subject: "subject"
          message: "message"
          from_label: "from_label"
          timestamp: "2000-01-23T04:56:07.000+00:00"
        id: "id"
        message_count: 0
        from_label: "from_label"
        campaign_id: "campaign_id"
      - from_email: "from_email"
        list_id: "list_id"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        subject: "subject"
        unread_messages: 6
        last_message:
          from_email: "from_email"
          read: true
          subject: "subject"
          message: "message"
          from_label: "from_label"
          timestamp: "2000-01-23T04:56:07.000+00:00"
        id: "id"
        message_count: 0
        from_label: "from_label"
        campaign_id: "campaign_id"
      total_items: 1
  Conversation Message:
    type: "object"
    properties:
      id:
        type: "string"
        description: "A string that uniquely identifies this message"
        title: "ID"
        readOnly: true
      conversation_id:
        type: "string"
        description: "A string that identifies this message's conversation"
        title: "Conversation ID"
        readOnly: true
      list_id:
        type: "integer"
        description: "The list's web ID"
        title: "List ID"
        readOnly: true
      from_label:
        type: "string"
        description: "A label representing the sender of this message"
        title: "From Label"
        readOnly: true
      from_email:
        type: "string"
        description: "A label representing the email of the sender of this message"
        title: "From Email"
      subject:
        type: "string"
        description: "The subject of this message"
        title: "Subject"
      message:
        type: "string"
        description: "The plain-text content of the message"
        title: "Message"
      read:
        type: "boolean"
        description: "Whether this message has been marked as read"
        title: "Read"
      timestamp:
        type: "string"
        format: "date-time"
        description: "The date and time the message was either sent or received in\
          \ ISO 8601 format."
        title: "Timestamp"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "An individual message in a conversation. Conversation tracking is\
      \ a feature available to paid accounts that lets you view replies to your campaigns\
      \ in your Mailchimp account."
    example:
      from_email: "from_email"
      read: true
      list_id: 0
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      conversation_id: "conversation_id"
      subject: "subject"
      id: "id"
      message: "message"
      from_label: "from_label"
      timestamp: "2000-01-23T04:56:07.000+00:00"
  Collection of Conversation Messages:
    type: "object"
    properties:
      conversation_messages:
        type: "array"
        description: "An array of objects, each representing a conversation messages\
          \ resources."
        title: "Conversation Messages"
        items:
          $ref: "#/definitions/Conversation Message"
      conversation_id:
        type: "string"
        description: "A string that identifies this conversation."
        title: "Conversation ID"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "Messages from a specific conversation."
    example:
      conversation_messages:
      - from_email: "from_email"
        read: true
        list_id: 0
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        conversation_id: "conversation_id"
        subject: "subject"
        id: "id"
        message: "message"
        from_label: "from_label"
        timestamp: "2000-01-23T04:56:07.000+00:00"
      - from_email: "from_email"
        read: true
        list_id: 0
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        conversation_id: "conversation_id"
        subject: "subject"
        id: "id"
        message: "message"
        from_label: "from_label"
        timestamp: "2000-01-23T04:56:07.000+00:00"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      conversation_id: "conversation_id"
      total_items: 6
  Subscriber in Customer Journeys audience:
    type: "object"
    required:
    - "email_address"
    properties:
      email_address:
        type: "string"
        description: "The list member's email address."
        title: "Email Address"
    title: "Subscriber in Customer Journey's audience"
    description: "Information about subscribers in a Customer Journey's audience."
  Gallery File:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "The unique id of the file."
        title: "File ID"
        readOnly: true
      folder_id:
        type: "integer"
        description: "The id of the folder."
        title: "Folder ID"
      type:
        type: "string"
        description: "The type of file in the File Manager."
        title: "File Type"
        readOnly: true
        enum:
        - "image"
        - "file"
      name:
        type: "string"
        description: "The name of the file."
        title: "File Name"
      full_size_url:
        type: "string"
        format: "uri"
        description: "The url of the full-size file."
        title: "File URL"
        readOnly: true
      thumbnail_url:
        type: "string"
        format: "uri"
        description: "The url of the thumbnail preview."
        title: "Thumbnail URL"
        readOnly: true
      size:
        type: "integer"
        description: "The size of the file in bytes."
        title: "File Size"
        readOnly: true
      created_at:
        type: "string"
        format: "date-time"
        description: "The date and time a file was added to the File Manager in ISO\
          \ 8601 format."
        title: "Created Date"
        readOnly: true
      created_by:
        type: "string"
        description: "The username of the profile that uploaded the file."
        title: "Created By"
        readOnly: true
      width:
        type: "integer"
        description: "The width of the image."
        title: "Image Width"
        readOnly: true
      height:
        type: "integer"
        description: "The height of an image."
        title: "Image Height"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "An individual file listed in the File Manager."
    example:
      full_size_url: "http://example.com/aeiou"
      size: 1
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      name: "name"
      width: 5
      created_at: "2000-01-23T04:56:07.000+00:00"
      id: 0
      folder_id: 6
      type: "image"
      thumbnail_url: "http://example.com/aeiou"
      created_by: "created_by"
      height: 5
  File Manager:
    type: "object"
    properties:
      files:
        type: "array"
        description: " A list of files and images in an account."
        title: "Files"
        items:
          $ref: "#/definitions/Gallery File"
      total_file_size:
        type: "number"
        description: "The total size of all File Manager files in bytes."
        title: "Total File Size"
        readOnly: true
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A list of available images and files stored in the File Manager\
      \ for the account."
    example:
      total_file_size: 2.3021358869347654518833223846741020679473876953125
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      files:
      - full_size_url: "http://example.com/aeiou"
        size: 1
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        name: "name"
        width: 5
        created_at: "2000-01-23T04:56:07.000+00:00"
        id: 0
        folder_id: 6
        type: "image"
        thumbnail_url: "http://example.com/aeiou"
        created_by: "created_by"
        height: 5
      - full_size_url: "http://example.com/aeiou"
        size: 1
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        name: "name"
        width: 5
        created_at: "2000-01-23T04:56:07.000+00:00"
        id: 0
        folder_id: 6
        type: "image"
        thumbnail_url: "http://example.com/aeiou"
        created_by: "created_by"
        height: 5
      total_items: 7
  Gallery File_1:
    type: "object"
    required:
    - "file_data"
    - "name"
    properties:
      folder_id:
        type: "integer"
        description: "The id of the folder."
        title: "Folder ID"
      name:
        type: "string"
        description: "The name of the file."
        title: "File Name"
      file_data:
        type: "string"
        description: "The base64-encoded contents of the file."
        title: "File Data"
    title: "Gallery File"
    description: "An individual file listed in the File Manager."
  Gallery File_2:
    type: "object"
    properties:
      folder_id:
        type: "integer"
        description: "The id of the folder. Setting `folder_id` to `0` will remove\
          \ a file from its current folder."
        title: "Folder ID"
      name:
        type: "string"
        description: "The name of the file."
        title: "File Name"
    title: "Gallery File"
    description: "An individual file listed in the File Manager."
  Gallery Folder:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "The unique id for the folder."
        title: "Folder ID"
        readOnly: true
      name:
        type: "string"
        description: "The name of the folder."
        title: "Folder Name"
      file_count:
        type: "integer"
        description: "The number of files in the folder."
        title: "File Count"
        readOnly: true
      created_at:
        type: "string"
        format: "date-time"
        description: "The date and time a file was added to the File Manager in ISO\
          \ 8601 format."
        title: "Created Date"
        readOnly: true
      created_by:
        type: "string"
        description: "The username of the profile that created the folder."
        title: "Created By"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "An individual folder listed in the File Manager."
    example:
      file_count: 6
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      name: "name"
      created_at: "2000-01-23T04:56:07.000+00:00"
      id: 0
      created_by: "created_by"
  File Manager Folders:
    type: "object"
    properties:
      folders:
        type: "array"
        description: "A list of all folders in the File Manager."
        title: "File Manager Folders"
        items:
          $ref: "#/definitions/Gallery Folder"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A list of all folders in the File Manager."
    example:
      folders:
      - file_count: 6
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        name: "name"
        created_at: "2000-01-23T04:56:07.000+00:00"
        id: 0
        created_by: "created_by"
      - file_count: 6
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        name: "name"
        created_at: "2000-01-23T04:56:07.000+00:00"
        id: 0
        created_by: "created_by"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      total_items: 1
  Gallery Folder_1:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        description: "The name of the folder."
        title: "Folder Name"
    title: "Gallery Folder"
    description: "An individual folder listed in the File Manager."
  Gallery Folder_2:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        description: "The name of the folder."
        title: "Folder Name"
    title: "Gallery Folder"
    description: "An individual folder listed in the File Manager."
  List Contact:
    type: "object"
    properties:
      company:
        type: "string"
        description: "The company name for the list."
        title: "Company Name"
      address1:
        type: "string"
        description: "The street address for the list contact."
        title: "Address"
      address2:
        type: "string"
        description: "The street address for the list contact."
        title: "Address"
      city:
        type: "string"
        description: "The city for the list contact."
        title: "City"
      state:
        type: "string"
        description: "The state for the list contact."
        title: "State"
      zip:
        type: "string"
        description: "The postal or zip code for the list contact."
        title: "Postal Code"
      country:
        type: "string"
        description: "A two-character ISO3166 country code. Defaults to US if invalid."
        title: "Country Code"
      phone:
        type: "string"
        description: "The phone number for the list contact."
        title: "Phone Number"
    description: "[Contact information displayed in campaign footers](https://mailchimp.com/help/about-campaign-footers/)\
      \ to comply with international spam laws."
    example:
      zip: "zip"
      country: "country"
      address2: "address2"
      city: "city"
      phone: "phone"
      address1: "address1"
      company: "company"
      state: "state"
  Campaign Defaults:
    type: "object"
    properties:
      from_name:
        type: "string"
        description: "The default from name for campaigns sent to this list."
        title: "Sender's Name"
      from_email:
        type: "string"
        description: "The default from email for campaigns sent to this list."
        title: "Sender's Email Address"
      subject:
        type: "string"
        description: "The default subject line for campaigns sent to this list."
        title: "Subject"
      language:
        type: "string"
        description: "The default language for this lists's forms."
        title: "Language"
    description: "[Default values for campaigns](https://mailchimp.com/help/edit-your-emails-subject-preview-text-from-name-or-from-email-address/)\
      \ created for this list."
    example:
      from_email: "from_email"
      subject: "subject"
      language: "language"
      from_name: "from_name"
  Statistics:
    type: "object"
    properties:
      member_count:
        type: "integer"
        description: "The number of active members in the list."
        title: "Member Count"
        readOnly: true
      total_contacts:
        type: "integer"
        description: "The number of contacts in the list, including subscribed, unsubscribed,\
          \ pending, cleaned, deleted, transactional, and those that need to be reconfirmed.\
          \ Requires include_total_contacts query parameter to be included."
        title: "Total Contacts"
        readOnly: true
      unsubscribe_count:
        type: "integer"
        description: "The number of members who have unsubscribed from the list."
        title: "Unsubscribe Count"
        readOnly: true
      cleaned_count:
        type: "integer"
        description: "The number of members cleaned from the list."
        title: "Cleaned Count"
        readOnly: true
      member_count_since_send:
        type: "integer"
        description: "The number of active members in the list since the last campaign\
          \ was sent."
        title: "Member Count Since Send"
        readOnly: true
      unsubscribe_count_since_send:
        type: "integer"
        description: "The number of members who have unsubscribed since the last campaign\
          \ was sent."
        title: "Unsubscribe Count Since Send"
        readOnly: true
      cleaned_count_since_send:
        type: "integer"
        description: "The number of members cleaned from the list since the last campaign\
          \ was sent."
        title: "Cleaned Count Since Send"
        readOnly: true
      campaign_count:
        type: "integer"
        description: "The number of campaigns in any status that use this list."
        title: "Campaign Count"
        readOnly: true
      campaign_last_sent:
        type: "string"
        format: "date-time"
        description: "The date and time the last campaign was sent to this list in\
          \ ISO 8601 format. This is updated when a campaign is sent to 10 or more\
          \ recipients."
        title: "Campaign Last Sent"
        readOnly: true
      merge_field_count:
        type: "integer"
        description: "The number of merge fields ([audience field](https://mailchimp.com/help/getting-started-with-merge-tags/))\
          \ for this list (doesn't include EMAIL)."
        title: "Merge Field Count"
        readOnly: true
      avg_sub_rate:
        type: "number"
        description: "The average number of subscriptions per month for the list (not\
          \ returned if we haven't calculated it yet)."
        title: "Average Subscription Rate"
        readOnly: true
      avg_unsub_rate:
        type: "number"
        description: "The average number of unsubscriptions per month for the list\
          \ (not returned if we haven't calculated it yet)."
        title: "Average Unsubscription Rate"
        readOnly: true
      target_sub_rate:
        type: "number"
        description: "The target number of subscriptions per month for the list to\
          \ keep it growing (not returned if we haven't calculated it yet)."
        title: "Average Subscription Rate"
        readOnly: true
      open_rate:
        type: "number"
        description: "The average open rate (a percentage represented as a number\
          \ between 0 and 100) per campaign for the list (not returned if we haven't\
          \ calculated it yet)."
        title: "Open Rate"
        readOnly: true
      click_rate:
        type: "number"
        description: "The average click rate (a percentage represented as a number\
          \ between 0 and 100) per campaign for the list (not returned if we haven't\
          \ calculated it yet)."
        title: "Click Rate"
        readOnly: true
      last_sub_date:
        type: "string"
        format: "date-time"
        description: "The date and time of the last time someone subscribed to this\
          \ list in ISO 8601 format."
        title: "Date of Last List Subscribe"
        readOnly: true
      last_unsub_date:
        type: "string"
        format: "date-time"
        description: "The date and time of the last time someone unsubscribed from\
          \ this list in ISO 8601 format."
        title: "Date of Last List Unsubscribe"
        readOnly: true
    description: "Stats for the list. Many of these are cached for at least five minutes."
    example:
      cleaned_count: 2
      unsubscribe_count_since_send: 9
      member_count_since_send: 7
      click_rate: 6.8468526983526398765889098285697400569915771484375
      cleaned_count_since_send: 3
      total_contacts: 5
      campaign_count: 2
      avg_unsub_rate: 1.231513536777255612975068288506008684635162353515625
      last_sub_date: "2000-01-23T04:56:07.000+00:00"
      unsubscribe_count: 5
      target_sub_rate: 1.024645700144157789424070870154537260532379150390625
      campaign_last_sent: "2000-01-23T04:56:07.000+00:00"
      avg_sub_rate: 7.3862819483858839220147274318151175975799560546875
      member_count: 1
      merge_field_count: 4
      open_rate: 1.489415909854170383397331534069962799549102783203125
      last_unsub_date: "2000-01-23T04:56:07.000+00:00"
  Subscriber List:
    type: "object"
    properties:
      id:
        type: "string"
        description: "A string that uniquely identifies this list."
        title: "List ID"
        readOnly: true
      web_id:
        type: "integer"
        description: "The ID used in the Mailchimp web application. View this list\
          \ in your Mailchimp account at `https://{dc}.admin.mailchimp.com/lists/members/?id={web_id}`."
        title: "List Web ID"
        readOnly: true
      name:
        type: "string"
        description: "The name of the list."
        title: "List Name"
      contact:
        $ref: "#/definitions/List Contact"
      permission_reminder:
        type: "string"
        description: "The [permission reminder](https://mailchimp.com/help/edit-the-permission-reminder/)\
          \ for the list."
        title: "Permission Reminder"
      use_archive_bar:
        type: "boolean"
        description: "Whether campaigns for this list use the [Archive Bar](https://mailchimp.com/help/about-email-campaign-archives-and-pages/)\
          \ in archives by default."
        title: "Use Archive Bar"
        default: false
      campaign_defaults:
        $ref: "#/definitions/Campaign Defaults"
      notify_on_subscribe:
        type: "string"
        description: "The email address to send [subscribe notifications](https://mailchimp.com/help/change-subscribe-and-unsubscribe-notifications/)\
          \ to."
        title: "Notify on Subscribe"
        default: "false"
      notify_on_unsubscribe:
        type: "string"
        description: "The email address to send [unsubscribe notifications](https://mailchimp.com/help/change-subscribe-and-unsubscribe-notifications/)\
          \ to."
        title: "Notify on Unsubscribe"
        default: "false"
      date_created:
        type: "string"
        format: "date-time"
        description: "The date and time that this list was created in ISO 8601 format."
        title: "Creation Date"
        readOnly: true
      list_rating:
        type: "integer"
        description: "An auto-generated activity score for the list (0-5)."
        title: "List Rating"
        readOnly: true
      email_type_option:
        type: "boolean"
        description: "Whether the list supports [multiple formats for emails](https://mailchimp.com/help/change-audience-name-defaults/).\
          \ When set to `true`, subscribers can choose whether they want to receive\
          \ HTML or plain-text emails. When set to `false`, subscribers will receive\
          \ HTML emails, with a plain-text alternative backup."
        title: "Email Type Option"
      subscribe_url_short:
        type: "string"
        description: "Our [url shortened](https://mailchimp.com/help/share-your-signup-form/)\
          \ version of this list's subscribe form."
        title: "Subscribe URL Short"
        readOnly: true
      subscribe_url_long:
        type: "string"
        description: "The full version of this list's subscribe form (host will vary)."
        title: "Subscribe URL Long"
        readOnly: true
      beamer_address:
        type: "string"
        description: "The list's [Email Beamer](https://mailchimp.com/help/use-email-beamer-to-create-a-campaign/)\
          \ address."
        title: "Beamer Address"
        readOnly: true
      visibility:
        type: "string"
        description: "Legacy - visibility settings are no longer used"
        title: "Visibility"
        enum:
        - "pub"
        - "prv"
      double_optin:
        type: "boolean"
        description: "Whether or not to require the subscriber to confirm subscription\
          \ via email."
        title: "Double Opt In"
        default: false
      has_welcome:
        type: "boolean"
        example: false
        description: "Whether or not this list has a welcome automation connected.\
          \ Welcome Automations: welcomeSeries, singleWelcome, emailFollowup."
        title: "Has Welcome"
        default: false
      marketing_permissions:
        type: "boolean"
        description: "Whether or not the list has marketing permissions (eg. GDPR)\
          \ enabled."
        title: "Marketing Permissions"
        default: false
      modules:
        type: "array"
        description: "Any list-specific modules installed for this list."
        title: "Modules"
        readOnly: true
        items:
          type: "string"
      stats:
        $ref: "#/definitions/Statistics"
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "Information about a specific list."
    example:
      notify_on_subscribe: "false"
      subscribe_url_long: "subscribe_url_long"
      marketing_permissions: false
      permission_reminder: "permission_reminder"
      use_archive_bar: false
      notify_on_unsubscribe: "false"
      visibility: "pub"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      date_created: "2000-01-23T04:56:07.000+00:00"
      campaign_defaults:
        from_email: "from_email"
        subject: "subject"
        language: "language"
        from_name: "from_name"
      web_id: 0
      modules:
      - "modules"
      - "modules"
      email_type_option: true
      beamer_address: "beamer_address"
      has_welcome: false
      stats:
        cleaned_count: 2
        unsubscribe_count_since_send: 9
        member_count_since_send: 7
        click_rate: 6.8468526983526398765889098285697400569915771484375
        cleaned_count_since_send: 3
        total_contacts: 5
        campaign_count: 2
        avg_unsub_rate: 1.231513536777255612975068288506008684635162353515625
        last_sub_date: "2000-01-23T04:56:07.000+00:00"
        unsubscribe_count: 5
        target_sub_rate: 1.024645700144157789424070870154537260532379150390625
        campaign_last_sent: "2000-01-23T04:56:07.000+00:00"
        avg_sub_rate: 7.3862819483858839220147274318151175975799560546875
        member_count: 1
        merge_field_count: 4
        open_rate: 1.489415909854170383397331534069962799549102783203125
        last_unsub_date: "2000-01-23T04:56:07.000+00:00"
      contact:
        zip: "zip"
        country: "country"
        address2: "address2"
        city: "city"
        phone: "phone"
        address1: "address1"
        company: "company"
        state: "state"
      name: "name"
      list_rating: 6
      double_optin: false
      id: "id"
      subscribe_url_short: "subscribe_url_short"
  Collection Authorization:
    type: "object"
    required:
    - "max_instances"
    - "may_create"
    properties:
      may_create:
        type: "boolean"
        description: "May the user create additional instances of this resource?"
        title: "Resource creation authorization"
      max_instances:
        type: "integer"
        description: "How many total instances of this resource are allowed? This\
          \ is independent of any filter conditions applied to the query. As a special\
          \ case, -1 indicates unlimited."
        title: "Max instances"
      current_total_instances:
        type: "integer"
        description: "How many total instances of this resource are already in use?\
          \ This is independent of any filter conditions applied to the query. Value\
          \ may be larger than max_instances. As a special case, -1 is returned when\
          \ access is unlimited."
        title: "Current total instances"
    description: "Do particular authorization constraints around this collection limit\
      \ creation of new instances?"
    example:
      may_create: true
      current_total_instances: 4
      max_instances: 1
  Subscriber Lists:
    type: "object"
    required:
    - "lists"
    properties:
      lists:
        type: "array"
        description: "An array of objects, each representing a list."
        title: "Lists"
        items:
          $ref: "#/definitions/Subscriber List"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      constraints:
        $ref: "#/definitions/Collection Authorization"
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A collection of subscriber lists for this account. Lists contain\
      \ subscribers who have opted-in to receive correspondence from you or your organization."
    example:
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      lists:
      - notify_on_subscribe: "false"
        subscribe_url_long: "subscribe_url_long"
        marketing_permissions: false
        permission_reminder: "permission_reminder"
        use_archive_bar: false
        notify_on_unsubscribe: "false"
        visibility: "pub"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        date_created: "2000-01-23T04:56:07.000+00:00"
        campaign_defaults:
          from_email: "from_email"
          subject: "subject"
          language: "language"
          from_name: "from_name"
        web_id: 0
        modules:
        - "modules"
        - "modules"
        email_type_option: true
        beamer_address: "beamer_address"
        has_welcome: false
        stats:
          cleaned_count: 2
          unsubscribe_count_since_send: 9
          member_count_since_send: 7
          click_rate: 6.8468526983526398765889098285697400569915771484375
          cleaned_count_since_send: 3
          total_contacts: 5
          campaign_count: 2
          avg_unsub_rate: 1.231513536777255612975068288506008684635162353515625
          last_sub_date: "2000-01-23T04:56:07.000+00:00"
          unsubscribe_count: 5
          target_sub_rate: 1.024645700144157789424070870154537260532379150390625
          campaign_last_sent: "2000-01-23T04:56:07.000+00:00"
          avg_sub_rate: 7.3862819483858839220147274318151175975799560546875
          member_count: 1
          merge_field_count: 4
          open_rate: 1.489415909854170383397331534069962799549102783203125
          last_unsub_date: "2000-01-23T04:56:07.000+00:00"
        contact:
          zip: "zip"
          country: "country"
          address2: "address2"
          city: "city"
          phone: "phone"
          address1: "address1"
          company: "company"
          state: "state"
        name: "name"
        list_rating: 6
        double_optin: false
        id: "id"
        subscribe_url_short: "subscribe_url_short"
      - notify_on_subscribe: "false"
        subscribe_url_long: "subscribe_url_long"
        marketing_permissions: false
        permission_reminder: "permission_reminder"
        use_archive_bar: false
        notify_on_unsubscribe: "false"
        visibility: "pub"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        date_created: "2000-01-23T04:56:07.000+00:00"
        campaign_defaults:
          from_email: "from_email"
          subject: "subject"
          language: "language"
          from_name: "from_name"
        web_id: 0
        modules:
        - "modules"
        - "modules"
        email_type_option: true
        beamer_address: "beamer_address"
        has_welcome: false
        stats:
          cleaned_count: 2
          unsubscribe_count_since_send: 9
          member_count_since_send: 7
          click_rate: 6.8468526983526398765889098285697400569915771484375
          cleaned_count_since_send: 3
          total_contacts: 5
          campaign_count: 2
          avg_unsub_rate: 1.231513536777255612975068288506008684635162353515625
          last_sub_date: "2000-01-23T04:56:07.000+00:00"
          unsubscribe_count: 5
          target_sub_rate: 1.024645700144157789424070870154537260532379150390625
          campaign_last_sent: "2000-01-23T04:56:07.000+00:00"
          avg_sub_rate: 7.3862819483858839220147274318151175975799560546875
          member_count: 1
          merge_field_count: 4
          open_rate: 1.489415909854170383397331534069962799549102783203125
          last_unsub_date: "2000-01-23T04:56:07.000+00:00"
        contact:
          zip: "zip"
          country: "country"
          address2: "address2"
          city: "city"
          phone: "phone"
          address1: "address1"
          company: "company"
          state: "state"
        name: "name"
        list_rating: 6
        double_optin: false
        id: "id"
        subscribe_url_short: "subscribe_url_short"
      total_items: 7
      constraints:
        may_create: true
        current_total_instances: 4
        max_instances: 1
  List Contact_1:
    type: "object"
    required:
    - "address1"
    - "city"
    - "company"
    - "country"
    properties:
      company:
        type: "string"
        description: "The company name for the list."
        title: "Company Name"
      address1:
        type: "string"
        description: "The street address for the list contact."
        title: "Address"
      address2:
        type: "string"
        description: "The street address for the list contact."
        title: "Address"
      city:
        type: "string"
        description: "The city for the list contact."
        title: "City"
      state:
        type: "string"
        description: "The state for the list contact."
        title: "State"
      zip:
        type: "string"
        description: "The postal or zip code for the list contact."
        title: "Postal Code"
      country:
        type: "string"
        description: "A two-character ISO3166 country code. Defaults to US if invalid."
        title: "Country Code"
      phone:
        type: "string"
        description: "The phone number for the list contact."
        title: "Phone Number"
    description: "[Contact information displayed in campaign footers](https://mailchimp.com/help/about-campaign-footers/)\
      \ to comply with international spam laws."
  Campaign Defaults_1:
    type: "object"
    required:
    - "from_email"
    - "from_name"
    - "language"
    - "subject"
    properties:
      from_name:
        type: "string"
        description: "The default from name for campaigns sent to this list."
        title: "Sender's Name"
      from_email:
        type: "string"
        description: "The default from email for campaigns sent to this list."
        title: "Sender's Email Address"
      subject:
        type: "string"
        description: "The default subject line for campaigns sent to this list."
        title: "Subject"
      language:
        type: "string"
        description: "The default language for this lists's forms."
        title: "Language"
    description: "[Default values for campaigns](https://mailchimp.com/help/edit-your-emails-subject-preview-text-from-name-or-from-email-address/)\
      \ created for this list."
  Subscriber List_1:
    type: "object"
    required:
    - "campaign_defaults"
    - "contact"
    - "email_type_option"
    - "name"
    - "permission_reminder"
    properties:
      name:
        type: "string"
        description: "The name of the list."
        title: "List Name"
      contact:
        $ref: "#/definitions/List Contact_1"
      permission_reminder:
        type: "string"
        description: "The [permission reminder](https://mailchimp.com/help/edit-the-permission-reminder/)\
          \ for the list."
        title: "Permission Reminder"
      use_archive_bar:
        type: "boolean"
        description: "Whether campaigns for this list use the [Archive Bar](https://mailchimp.com/help/about-email-campaign-archives-and-pages/)\
          \ in archives by default."
        title: "Use Archive Bar"
        default: false
      campaign_defaults:
        $ref: "#/definitions/Campaign Defaults_1"
      notify_on_subscribe:
        type: "string"
        description: "The email address to send [subscribe notifications](https://mailchimp.com/help/change-subscribe-and-unsubscribe-notifications/)\
          \ to."
        title: "Notify on Subscribe"
        default: "false"
      notify_on_unsubscribe:
        type: "string"
        description: "The email address to send [unsubscribe notifications](https://mailchimp.com/help/change-subscribe-and-unsubscribe-notifications/)\
          \ to."
        title: "Notify on Unsubscribe"
        default: "false"
      email_type_option:
        type: "boolean"
        description: "Whether the list supports [multiple formats for emails](https://mailchimp.com/help/change-audience-name-defaults/).\
          \ When set to `true`, subscribers can choose whether they want to receive\
          \ HTML or plain-text emails. When set to `false`, subscribers will receive\
          \ HTML emails, with a plain-text alternative backup."
        title: "Email Type Option"
      double_optin:
        type: "boolean"
        description: "Whether or not to require the subscriber to confirm subscription\
          \ via email."
        title: "Double Opt In"
        default: false
      marketing_permissions:
        type: "boolean"
        description: "Whether or not the list has marketing permissions (eg. GDPR)\
          \ enabled."
        title: "Marketing Permissions"
        default: false
    title: "Subscriber List"
    description: "Information about a specific list."
  Location:
    type: "object"
    properties:
      latitude:
        type: "number"
        description: "The location latitude."
        title: "Latitude"
      longitude:
        type: "number"
        description: "The location longitude."
        title: "Longitude"
    description: "Subscriber location information."
  Add List Members:
    type: "object"
    properties:
      email_address:
        type: "string"
        description: "Email address for a subscriber."
        title: "Email Address"
      email_type:
        type: "string"
        description: "Type of email this member asked to get ('html' or 'text')."
        title: "Email Type"
      status:
        type: "string"
        description: "Subscriber's current status."
        title: "Status"
        enum:
        - "subscribed"
        - "unsubscribed"
        - "cleaned"
        - "pending"
        - "transactional"
      merge_fields:
        type: "object"
        description: "A dictionary of merge fields where the keys are the merge tags.\
          \ See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
          \ for more about the structure."
        title: "Merge Fields"
        additionalProperties:
          description: "This object's keys are merge tags (like FNAME). It's values\
            \ are the values to be added to the merge field."
      interests:
        type: "object"
        description: "The key of this object's properties is the ID of the interest\
          \ in question."
        title: "Subscriber Interests"
        additionalProperties:
          type: "boolean"
          description: "Keys are interest IDs, values are booleans that describe whether\
            \ the list member is in that group or not."
          title: "Interest Value"
      language:
        type: "string"
        description: "If set/detected, the [subscriber's language](https://mailchimp.com/help/view-and-edit-contact-languages/)."
        title: "Language"
      vip:
        type: "boolean"
        description: "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/)\
          \ for subscriber."
        title: "VIP"
      location:
        $ref: "#/definitions/Location"
      ip_signup:
        type: "string"
        description: "IP address the subscriber signed up from."
        title: "Signup IP"
      timestamp_signup:
        type: "string"
        format: "date-time"
        description: "The date and time the subscriber signed up for the list in ISO\
          \ 8601 format."
        title: "Signup Timestamp"
      ip_opt:
        type: "string"
        description: "The IP address the subscriber used to confirm their opt-in status."
        title: "Opt-in IP"
      timestamp_opt:
        type: "string"
        format: "date-time"
        description: "The date and time the subscriber confirmed their opt-in status\
          \ in ISO 8601 format."
        title: "Opt-in Timestamp"
    description: "Individuals who are currently or have been previously subscribed\
      \ to this list, including members who have bounced or unsubscribed."
  Members to SubscribeUnsubscribe tofrom a List in batch:
    type: "object"
    required:
    - "members"
    properties:
      members:
        type: "array"
        description: "An array of objects, each representing an email address and\
          \ the subscription status for a specific list. Up to 500 members may be\
          \ added or updated with each API call."
        title: "List Members"
        items:
          $ref: "#/definitions/Add List Members"
      sync_tags:
        type: "boolean"
        description: "Whether this batch operation will replace all existing tags\
          \ with tags in request."
        title: "Sync Tags"
      update_existing:
        type: "boolean"
        description: "Whether this batch operation will change existing members' subscription\
          \ status."
        title: "Update Existing Members"
    title: "Members to Subscribe/Unsubscribe to/from a List in batch"
    description: "Members to subscribe to or unsubscribe from a list."
  Subscriber Stats:
    type: "object"
    properties:
      avg_open_rate:
        type: "number"
        description: "A subscriber's average open rate."
        title: "Average Open Rate"
        readOnly: true
      avg_click_rate:
        type: "number"
        description: "A subscriber's average clickthrough rate."
        title: "Average Click Rate"
        readOnly: true
    description: "Open and click rates for this subscriber."
    example:
      avg_click_rate: 6.02745618307040320615897144307382404804229736328125
      avg_open_rate: 0.80082819046101150206595775671303272247314453125
  Location_1:
    type: "object"
    properties:
      latitude:
        type: "number"
        description: "The location latitude."
        title: "Latitude"
      longitude:
        type: "number"
        description: "The location longitude."
        title: "Longitude"
      gmtoff:
        type: "integer"
        description: "The time difference in hours from GMT."
        title: "GMT Offset"
        readOnly: true
      dstoff:
        type: "integer"
        description: "The offset for timezones where daylight saving time is observed."
        title: "DST Offset"
        readOnly: true
      country_code:
        type: "string"
        description: "The unique code for the location country."
        title: "Country Code"
        readOnly: true
      timezone:
        type: "string"
        description: "The timezone for the location."
        title: "Timezone"
        readOnly: true
    description: "Subscriber location information."
    example:
      country_code: "country_code"
      dstoff: 7
      timezone: "timezone"
      latitude: 5.962133916683182377482808078639209270477294921875
      gmtoff: 2
      longitude: 5.63737665663332876420099637471139430999755859375
  Notes:
    type: "object"
    properties:
      note_id:
        type: "integer"
        description: "The note id."
        title: "Note ID"
        readOnly: true
      created_at:
        type: "string"
        format: "date-time"
        description: "The date and time the note was created in ISO 8601 format."
        title: "Created Time"
        readOnly: true
      created_by:
        type: "string"
        description: "The author of the note."
        title: "Author"
        readOnly: true
      note:
        type: "string"
        description: "The content of the note."
        title: "Note"
        readOnly: true
    description: "The most recent Note added about this member."
    example:
      note_id: 9
      note: "note"
      created_at: "2000-01-23T04:56:07.000+00:00"
      created_by: "created_by"
  Batch update List members_tags:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "The tag id."
        title: "Tag ID"
        readOnly: true
      name:
        type: "string"
        description: "The name of the tag"
        title: "Tag Name"
        readOnly: true
    example:
      name: "name"
      id: 2
  List Members:
    type: "object"
    properties:
      id:
        type: "string"
        description: "The MD5 hash of the lowercase version of the list member's email\
          \ address."
        title: "Email ID"
        readOnly: true
      email_address:
        type: "string"
        description: "Email address for a subscriber."
        title: "Email Address"
      unique_email_id:
        type: "string"
        description: "An identifier for the address across all of Mailchimp."
        title: "Unique Email ID"
        readOnly: true
      email_type:
        type: "string"
        description: "Type of email this member asked to get ('html' or 'text')."
        title: "Email Type"
      status:
        type: "string"
        description: "Subscriber's current status."
        title: "Status"
        enum:
        - "subscribed"
        - "unsubscribed"
        - "cleaned"
        - "pending"
        - "transactional"
      merge_fields:
        type: "object"
        description: "An individual merge var and value for a member."
        title: "Member Merge Var"
        additionalProperties:
          description: "This object's keys are merge tags (like FNAME). It's values\
            \ are the values to be added to the merge field."
      interests:
        type: "object"
        description: "The key of this object's properties is the ID of the interest\
          \ in question."
        title: "Subscriber Interests"
        additionalProperties:
          type: "boolean"
          description: "Keys are interest IDs, values are booleans that describe whether\
            \ the list member is in that group or not."
          title: "Interest Value"
      stats:
        $ref: "#/definitions/Subscriber Stats"
      ip_signup:
        type: "string"
        description: "IP address the subscriber signed up from."
        title: "Signup IP"
        readOnly: true
      timestamp_signup:
        type: "string"
        format: "date-time"
        description: "The date and time the subscriber signed up for the list in ISO\
          \ 8601 format."
        title: "Signup Timestamp"
        readOnly: true
      ip_opt:
        type: "string"
        description: "The IP address the subscriber used to confirm their opt-in status."
        title: "Opt-in IP"
        readOnly: true
      timestamp_opt:
        type: "string"
        format: "date-time"
        description: "The date and time the subscriber confirmed their opt-in status\
          \ in ISO 8601 format."
        title: "Opt-in Timestamp"
        readOnly: true
      member_rating:
        type: "integer"
        description: "Star rating for this member, between 1 and 5."
        title: "Member Rating"
        readOnly: true
      last_changed:
        type: "string"
        format: "date-time"
        description: "The date and time the member's info was last changed in ISO\
          \ 8601 format."
        title: "Last Changed Date"
        readOnly: true
      language:
        type: "string"
        description: "If set/detected, the [subscriber's language](https://mailchimp.com/help/view-and-edit-contact-languages/)."
        title: "Language"
      vip:
        type: "boolean"
        description: "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/)\
          \ for subscriber."
        title: "VIP"
      email_client:
        type: "string"
        description: "The list member's email client."
        title: "Email Client"
        readOnly: true
      location:
        $ref: "#/definitions/Location_1"
      last_note:
        $ref: "#/definitions/Notes"
      tags_count:
        type: "integer"
        description: "The number of tags applied to this member."
        title: "Tags Count"
        readOnly: true
      tags:
        type: "array"
        description: "The tags applied to this member."
        title: "Tags"
        items:
          $ref: "#/definitions/Batch update List members_tags"
      list_id:
        type: "string"
        description: "The list id."
        title: "List ID"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "Individuals who are currently or have been previously subscribed\
      \ to this list, including members who have bounced or unsubscribed."
    example:
      email_type: "email_type"
      list_id: "list_id"
      timestamp_opt: "2000-01-23T04:56:07.000+00:00"
      last_note:
        note_id: 9
        note: "note"
        created_at: "2000-01-23T04:56:07.000+00:00"
        created_by: "created_by"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      merge_fields:
        key: ""
      timestamp_signup: "2000-01-23T04:56:07.000+00:00"
      ip_signup: "ip_signup"
      member_rating: 1
      language: "language"
      tags:
      - name: "name"
        id: 2
      - name: "name"
        id: 2
      unique_email_id: "unique_email_id"
      email_address: "email_address"
      email_client: "email_client"
      stats:
        avg_click_rate: 6.02745618307040320615897144307382404804229736328125
        avg_open_rate: 0.80082819046101150206595775671303272247314453125
      tags_count: 3
      ip_opt: "ip_opt"
      location:
        country_code: "country_code"
        dstoff: 7
        timezone: "timezone"
        latitude: 5.962133916683182377482808078639209270477294921875
        gmtoff: 2
        longitude: 5.63737665663332876420099637471139430999755859375
      id: "id"
      interests:
        key: true
      vip: true
      status: "subscribed"
      last_changed: "2000-01-23T04:56:07.000+00:00"
  Batch update List members_errors:
    type: "object"
    properties:
      email_address:
        type: "string"
        description: "The email address that could not be added or updated."
        title: "Member Email address"
      error:
        type: "string"
        description: "The error message indicating why the email address could not\
          \ be added or updated."
        title: "Error message"
      error_code:
        type: "string"
        description: "A unique code that identifies this specifc error."
        title: "Error code"
        enum:
        - "ERROR_CONTACT_EXISTS"
        - "ERROR_GENERIC"
      field:
        type: "string"
        description: "If the error is field-related, information about which field\
          \ is at issue."
        title: "Field"
      field_message:
        type: "string"
        description: "Message indicating how to resolve a field-related error."
        title: "Field message"
    example:
      email_address: "email_address"
      field: "field"
      error_code: "ERROR_CONTACT_EXISTS"
      error: "error"
      field_message: "field_message"
  Batch update List members:
    type: "object"
    properties:
      new_members:
        type: "array"
        description: "An array of objects, each representing a new member that was\
          \ added to the list."
        title: "New members"
        items:
          $ref: "#/definitions/List Members"
      updated_members:
        type: "array"
        description: "An array of objects, each representing an existing list member\
          \ whose subscription status was updated."
        title: "Updated Members"
        items:
          $ref: "#/definitions/List Members"
      errors:
        type: "array"
        description: "An array of objects, each representing an email address that\
          \ could not be added to the list or updated and an error message providing\
          \ more details."
        title: "Errors"
        items:
          $ref: "#/definitions/Batch update List members_errors"
      total_created:
        type: "integer"
        example: 42
        description: "The total number of items matching the query, irrespective of\
          \ pagination."
        title: "Item Count"
      total_updated:
        type: "integer"
        example: 42
        description: "The total number of items matching the query, irrespective of\
          \ pagination."
        title: "Item Count"
      error_count:
        type: "integer"
        example: 42
        description: "The total number of items matching the query, irrespective of\
          \ pagination."
        title: "Item Count"
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "Batch update list members."
    example:
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      new_members:
      - email_type: "email_type"
        list_id: "list_id"
        timestamp_opt: "2000-01-23T04:56:07.000+00:00"
        last_note:
          note_id: 9
          note: "note"
          created_at: "2000-01-23T04:56:07.000+00:00"
          created_by: "created_by"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        merge_fields:
          key: ""
        timestamp_signup: "2000-01-23T04:56:07.000+00:00"
        ip_signup: "ip_signup"
        member_rating: 1
        language: "language"
        tags:
        - name: "name"
          id: 2
        - name: "name"
          id: 2
        unique_email_id: "unique_email_id"
        email_address: "email_address"
        email_client: "email_client"
        stats:
          avg_click_rate: 6.02745618307040320615897144307382404804229736328125
          avg_open_rate: 0.80082819046101150206595775671303272247314453125
        tags_count: 3
        ip_opt: "ip_opt"
        location:
          country_code: "country_code"
          dstoff: 7
          timezone: "timezone"
          latitude: 5.962133916683182377482808078639209270477294921875
          gmtoff: 2
          longitude: 5.63737665663332876420099637471139430999755859375
        id: "id"
        interests:
          key: true
        vip: true
        status: "subscribed"
        last_changed: "2000-01-23T04:56:07.000+00:00"
      - email_type: "email_type"
        list_id: "list_id"
        timestamp_opt: "2000-01-23T04:56:07.000+00:00"
        last_note:
          note_id: 9
          note: "note"
          created_at: "2000-01-23T04:56:07.000+00:00"
          created_by: "created_by"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        merge_fields:
          key: ""
        timestamp_signup: "2000-01-23T04:56:07.000+00:00"
        ip_signup: "ip_signup"
        member_rating: 1
        language: "language"
        tags:
        - name: "name"
          id: 2
        - name: "name"
          id: 2
        unique_email_id: "unique_email_id"
        email_address: "email_address"
        email_client: "email_client"
        stats:
          avg_click_rate: 6.02745618307040320615897144307382404804229736328125
          avg_open_rate: 0.80082819046101150206595775671303272247314453125
        tags_count: 3
        ip_opt: "ip_opt"
        location:
          country_code: "country_code"
          dstoff: 7
          timezone: "timezone"
          latitude: 5.962133916683182377482808078639209270477294921875
          gmtoff: 2
          longitude: 5.63737665663332876420099637471139430999755859375
        id: "id"
        interests:
          key: true
        vip: true
        status: "subscribed"
        last_changed: "2000-01-23T04:56:07.000+00:00"
      updated_members:
      - email_type: "email_type"
        list_id: "list_id"
        timestamp_opt: "2000-01-23T04:56:07.000+00:00"
        last_note:
          note_id: 9
          note: "note"
          created_at: "2000-01-23T04:56:07.000+00:00"
          created_by: "created_by"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        merge_fields:
          key: ""
        timestamp_signup: "2000-01-23T04:56:07.000+00:00"
        ip_signup: "ip_signup"
        member_rating: 1
        language: "language"
        tags:
        - name: "name"
          id: 2
        - name: "name"
          id: 2
        unique_email_id: "unique_email_id"
        email_address: "email_address"
        email_client: "email_client"
        stats:
          avg_click_rate: 6.02745618307040320615897144307382404804229736328125
          avg_open_rate: 0.80082819046101150206595775671303272247314453125
        tags_count: 3
        ip_opt: "ip_opt"
        location:
          country_code: "country_code"
          dstoff: 7
          timezone: "timezone"
          latitude: 5.962133916683182377482808078639209270477294921875
          gmtoff: 2
          longitude: 5.63737665663332876420099637471139430999755859375
        id: "id"
        interests:
          key: true
        vip: true
        status: "subscribed"
        last_changed: "2000-01-23T04:56:07.000+00:00"
      - email_type: "email_type"
        list_id: "list_id"
        timestamp_opt: "2000-01-23T04:56:07.000+00:00"
        last_note:
          note_id: 9
          note: "note"
          created_at: "2000-01-23T04:56:07.000+00:00"
          created_by: "created_by"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        merge_fields:
          key: ""
        timestamp_signup: "2000-01-23T04:56:07.000+00:00"
        ip_signup: "ip_signup"
        member_rating: 1
        language: "language"
        tags:
        - name: "name"
          id: 2
        - name: "name"
          id: 2
        unique_email_id: "unique_email_id"
        email_address: "email_address"
        email_client: "email_client"
        stats:
          avg_click_rate: 6.02745618307040320615897144307382404804229736328125
          avg_open_rate: 0.80082819046101150206595775671303272247314453125
        tags_count: 3
        ip_opt: "ip_opt"
        location:
          country_code: "country_code"
          dstoff: 7
          timezone: "timezone"
          latitude: 5.962133916683182377482808078639209270477294921875
          gmtoff: 2
          longitude: 5.63737665663332876420099637471139430999755859375
        id: "id"
        interests:
          key: true
        vip: true
        status: "subscribed"
        last_changed: "2000-01-23T04:56:07.000+00:00"
      total_created: 42
      error_count: 42
      errors:
      - email_address: "email_address"
        field: "field"
        error_code: "ERROR_CONTACT_EXISTS"
        error: "error"
        field_message: "field_message"
      - email_address: "email_address"
        field: "field"
        error_code: "ERROR_CONTACT_EXISTS"
        error: "error"
        field_message: "field_message"
      total_updated: 42
  List Contact_2:
    type: "object"
    required:
    - "address1"
    - "city"
    - "company"
    - "country"
    - "state"
    - "zip"
    properties:
      company:
        type: "string"
        description: "The company name for the list."
        title: "Company Name"
      address1:
        type: "string"
        description: "The street address for the list contact."
        title: "Address"
      address2:
        type: "string"
        description: "The street address for the list contact."
        title: "Address"
      city:
        type: "string"
        description: "The city for the list contact."
        title: "City"
      state:
        type: "string"
        description: "The state for the list contact."
        title: "State"
      zip:
        type: "string"
        description: "The postal or zip code for the list contact."
        title: "Postal Code"
      country:
        type: "string"
        description: "A two-character ISO3166 country code. Defaults to US if invalid."
        title: "Country Code"
      phone:
        type: "string"
        description: "The phone number for the list contact."
        title: "Phone Number"
    description: "[Contact information displayed in campaign footers](https://mailchimp.com/help/about-campaign-footers/)\
      \ to comply with international spam laws."
  Subscriber List_2:
    type: "object"
    required:
    - "campaign_defaults"
    - "contact"
    - "email_type_option"
    - "name"
    - "permission_reminder"
    properties:
      name:
        type: "string"
        description: "The name of the list."
        title: "List Name"
      contact:
        $ref: "#/definitions/List Contact_2"
      permission_reminder:
        type: "string"
        description: "The [permission reminder](https://mailchimp.com/help/edit-the-permission-reminder/)\
          \ for the list."
        title: "Permission Reminder"
      use_archive_bar:
        type: "boolean"
        description: "Whether campaigns for this list use the [Archive Bar](https://mailchimp.com/help/about-email-campaign-archives-and-pages/)\
          \ in archives by default."
        title: "Use Archive Bar"
        default: false
      campaign_defaults:
        $ref: "#/definitions/Campaign Defaults_1"
      notify_on_subscribe:
        type: "string"
        description: "The email address to send [subscribe notifications](https://mailchimp.com/help/change-subscribe-and-unsubscribe-notifications/)\
          \ to."
        title: "Notify on Subscribe"
        default: "false"
      notify_on_unsubscribe:
        type: "string"
        description: "The email address to send [unsubscribe notifications](https://mailchimp.com/help/change-subscribe-and-unsubscribe-notifications/)\
          \ to."
        title: "Notify on Unsubscribe"
        default: "false"
      email_type_option:
        type: "boolean"
        description: "Whether the list supports [multiple formats for emails](https://mailchimp.com/help/change-audience-name-defaults/).\
          \ When set to `true`, subscribers can choose whether they want to receive\
          \ HTML or plain-text emails. When set to `false`, subscribers will receive\
          \ HTML emails, with a plain-text alternative backup."
        title: "Email Type Option"
      double_optin:
        type: "boolean"
        description: "Whether or not to require the subscriber to confirm subscription\
          \ via email."
        title: "Double Opt In"
        default: false
      marketing_permissions:
        type: "boolean"
        description: "Whether or not the list has marketing permissions (eg. GDPR)\
          \ enabled."
        title: "Marketing Permissions"
        default: false
    title: "Subscriber List"
    description: "Information about a specific list."
  Abuse Complaint:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "The id for the abuse report"
        title: "Abuse Report ID"
        readOnly: true
      campaign_id:
        type: "string"
        description: "The campaign id for the abuse report"
        title: "Campaign ID"
        readOnly: true
      list_id:
        type: "string"
        description: "The list id for the abuse report."
        title: "List ID"
        readOnly: true
      email_id:
        type: "string"
        description: "The MD5 hash of the lowercase version of the list member's email\
          \ address."
        title: "Email Hash"
        readOnly: true
      email_address:
        type: "string"
        description: "Email address for a subscriber."
        title: "Email Address"
        readOnly: true
      merge_fields:
        type: "object"
        description: "A dictionary of merge fields where the keys are the merge tags.\
          \ See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
          \ for more about the structure."
        title: "Merge Fields"
        additionalProperties:
          description: "This object's keys are merge tags (like FNAME). It's values\
            \ are the values to be added to the merge field."
      vip:
        type: "boolean"
        description: "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/)\
          \ for subscriber."
        title: "VIP"
        readOnly: true
      date:
        type: "string"
        description: "Date for the abuse report"
        title: "Date"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "Details of abuse complaints for a specific list. An abuse complaint\
      \ occurs when your recipient clicks to 'report spam' in their email program."
    example:
      email_id: "email_id"
      date: "date"
      email_address: "email_address"
      list_id: "list_id"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      merge_fields:
        key: ""
      id: 0
      vip: true
      campaign_id: "campaign_id"
  Abuse Complaints:
    type: "object"
    properties:
      abuse_reports:
        type: "array"
        description: "An array of objects, each representing an abuse report resource."
        title: "Abuse Reports"
        items:
          $ref: "#/definitions/Abuse Complaint"
      list_id:
        type: "string"
        description: "The list id for the abuse report."
        title: "List ID"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A collection of abuse complaints for a specific list. An abuse complaint\
      \ occurs when your recipient clicks to 'report spam' in their email program."
    example:
      list_id: "list_id"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      total_items: 6
      abuse_reports:
      - email_id: "email_id"
        date: "date"
        email_address: "email_address"
        list_id: "list_id"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        merge_fields:
          key: ""
        id: 0
        vip: true
        campaign_id: "campaign_id"
      - email_id: "email_id"
        date: "date"
        email_address: "email_address"
        list_id: "list_id"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        merge_fields:
          key: ""
        id: 0
        vip: true
        campaign_id: "campaign_id"
  Daily List Activity:
    type: "object"
    properties:
      day:
        type: "string"
        description: "The date for the activity summary."
        title: "Day"
        readOnly: true
      emails_sent:
        type: "integer"
        description: "The total number of emails sent on the date for the activity\
          \ summary."
        title: "Emails Sent"
        readOnly: true
      unique_opens:
        type: "integer"
        description: "The number of unique opens."
        title: "Unique Opens"
        readOnly: true
      recipient_clicks:
        type: "integer"
        description: "The number of clicks."
        title: "Recipient Clicks"
        readOnly: true
      hard_bounce:
        type: "integer"
        description: "The number of hard bounces."
        title: "Hard Bounces"
        readOnly: true
      soft_bounce:
        type: "integer"
        description: "The number of soft bounces"
        title: "Soft Bounces"
        readOnly: true
      subs:
        type: "integer"
        description: "The number of subscribes."
        title: "Subscribes"
        readOnly: true
      unsubs:
        type: "integer"
        description: "The number of unsubscribes."
        title: "Unsubscribes"
        readOnly: true
      other_adds:
        type: "integer"
        description: "The number of subscribers who may have been added outside of\
          \ the [double opt-in process](https://mailchimp.com/help/about-double-opt-in/),\
          \ such as imports or API activity."
        title: "Other Adds"
        readOnly: true
      other_removes:
        type: "integer"
        description: "The number of subscribers who may have been removed outside\
          \ of unsubscribing or reporting an email as spam (for example, deleted subscribers)."
        title: "Other Removes"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "One day's worth of list activity. Doesn't include Automation activity."
    example:
      soft_bounce: 5
      hard_bounce: 5
      subs: 2
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      emails_sent: 0
      unsubs: 7
      recipient_clicks: 1
      other_adds: 9
      day: "day"
      unique_opens: 6
      other_removes: 3
  List Activity:
    type: "object"
    properties:
      activity:
        type: "array"
        description: "Recent list activity."
        title: "List Activity"
        items:
          $ref: "#/definitions/Daily List Activity"
      list_id:
        type: "string"
        description: "The unique id for the list."
        title: "List ID"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "Up to the previous 180 days of daily detailed aggregated activity\
      \ stats for a specific list. Does not include AutoResponder or Automation activity."
    example:
      activity:
      - soft_bounce: 5
        hard_bounce: 5
        subs: 2
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        emails_sent: 0
        unsubs: 7
        recipient_clicks: 1
        other_adds: 9
        day: "day"
        unique_opens: 6
        other_removes: 3
      - soft_bounce: 5
        hard_bounce: 5
        subs: 2
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        emails_sent: 0
        unsubs: 7
        recipient_clicks: 1
        other_adds: 9
        day: "day"
        unique_opens: 6
        other_removes: 3
      list_id: "list_id"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      total_items: 2
  Email Client:
    type: "object"
    properties:
      client:
        type: "string"
        description: "The name of the email client."
        title: "Client"
        readOnly: true
      members:
        type: "integer"
        description: "The number of subscribed members who used this email client."
        title: "Members"
        readOnly: true
    description: "The email client."
    example:
      members: 0
      client: "client"
  Email Clients:
    type: "object"
    properties:
      clients:
        type: "array"
        description: "An array of top email clients."
        title: "Email Clients"
        items:
          $ref: "#/definitions/Email Client"
      list_id:
        type: "string"
        description: "The list id."
        title: "List ID"
        readOnly: true
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "The top email clients based on user-agent strings."
    example:
      clients:
      - members: 0
        client: "client"
      - members: 0
        client: "client"
      list_id: "list_id"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      total_items: 6
  Growth History:
    type: "object"
    properties:
      history:
        type: "array"
        description: "An array of objects, each representing a monthly growth report\
          \ for a list."
        title: "Members"
        items:
          $ref: "#/definitions/Growth History"
      list_id:
        type: "string"
        description: "The list id."
        title: "List ID"
        readOnly: true
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A month-by-month summary of a specific list's growth activity."
    example:
      list_id: "list_id"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      history:
      - null
      - null
      total_items: 0
  Interest Category:
    type: "object"
    properties:
      list_id:
        type: "string"
        description: "The unique list id for the category."
        title: "List ID"
        readOnly: true
      id:
        type: "string"
        description: "The id for the interest category."
        title: "Category ID"
        readOnly: true
      title:
        type: "string"
        description: "The text description of this category. This field appears on\
          \ signup forms and is often phrased as a question."
        title: "Name"
      display_order:
        type: "integer"
        description: "The order that the categories are displayed in the list. Lower\
          \ numbers display first."
        title: "Display Order"
      type:
        type: "string"
        description: "Determines how this category’s interests appear on signup forms."
        title: "Display Type"
        enum:
        - "checkboxes"
        - "dropdown"
        - "radio"
        - "hidden"
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "Interest categories organize interests, which are used to group\
      \ subscribers based on their preferences. These correspond to Group Titles the\
      \ application."
    example:
      list_id: "list_id"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      display_order: 0
      id: "id"
      title: "title"
      type: "checkboxes"
  Interest Groupings:
    type: "object"
    properties:
      list_id:
        type: "string"
        description: "The ID for the list that this category belongs to."
        title: "List ID"
        readOnly: true
      categories:
        type: "array"
        description: "This array contains individual interest categories."
        title: "Interest Categories"
        items:
          $ref: "#/definitions/Interest Category"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "Information about this list's interest categories."
    example:
      list_id: "list_id"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      categories:
      - list_id: "list_id"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        display_order: 0
        id: "id"
        title: "title"
        type: "checkboxes"
      - list_id: "list_id"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        display_order: 0
        id: "id"
        title: "title"
        type: "checkboxes"
      total_items: 6
  Interest Category_1:
    type: "object"
    required:
    - "title"
    - "type"
    properties:
      title:
        type: "string"
        description: "The text description of this category. This field appears on\
          \ signup forms and is often phrased as a question."
        title: "Name"
      display_order:
        type: "integer"
        description: "The order that the categories are displayed in the list. Lower\
          \ numbers display first."
        title: "Display Order"
      type:
        type: "string"
        description: "Determines how this category’s interests appear on signup forms."
        title: "Display Type"
        enum:
        - "checkboxes"
        - "dropdown"
        - "radio"
        - "hidden"
    title: "Interest Category"
    description: "Interest categories organize interests, which are used to group\
      \ subscribers based on their preferences. These correspond to Group Titles the\
      \ application."
  Interest Category_2:
    type: "object"
    required:
    - "title"
    - "type"
    properties:
      title:
        type: "string"
        description: "The text description of this category. This field appears on\
          \ signup forms and is often phrased as a question."
        title: "Name"
      display_order:
        type: "integer"
        description: "The order that the categories are displayed in the list. Lower\
          \ numbers display first."
        title: "Display Order"
      type:
        type: "string"
        description: "Determines how this category’s interests appear on signup forms."
        title: "Display Type"
        enum:
        - "checkboxes"
        - "dropdown"
        - "radio"
        - "hidden"
    title: "Interest Category"
    description: "Interest categories organize interests, which are used to group\
      \ subscribers based on their preferences. These correspond to Group Titles the\
      \ application."
  Interest:
    type: "object"
    properties:
      category_id:
        type: "string"
        description: "The id for the interest category."
        title: "Interest Category ID"
        readOnly: true
      list_id:
        type: "string"
        description: "The ID for the list that this interest belongs to."
        title: "List ID"
        readOnly: true
      id:
        type: "string"
        description: "The ID for the interest."
        title: "Interest ID"
        readOnly: true
      name:
        type: "string"
        description: "The name of the interest. This can be shown publicly on a subscription\
          \ form."
        title: "Interest Name"
      subscriber_count:
        type: "string"
        description: "The number of subscribers associated with this interest."
        title: "Subscriber Count"
        readOnly: true
      display_order:
        type: "integer"
        description: "The display order for interests."
        title: "Display Order"
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "Assign subscribers to interests to group them together. Interests\
      \ are referred to as 'group names' in the Mailchimp application."
    example:
      category_id: "category_id"
      list_id: "list_id"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      subscriber_count: "subscriber_count"
      name: "name"
      display_order: 0
      id: "id"
  Interests:
    type: "object"
    properties:
      interests:
        type: "array"
        description: "An array of this category's interests"
        title: "Interests"
        items:
          $ref: "#/definitions/Interest"
      list_id:
        type: "string"
        description: "The unique list id that the interests belong to."
        title: "List ID"
      category_id:
        type: "string"
        description: "The id for the interest category."
        title: "Interest Category ID"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A list of this category's interests"
    example:
      list_id: "list_id"
      category_id: "category_id"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      interests:
      - category_id: "category_id"
        list_id: "list_id"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        subscriber_count: "subscriber_count"
        name: "name"
        display_order: 0
        id: "id"
      - category_id: "category_id"
        list_id: "list_id"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        subscriber_count: "subscriber_count"
        name: "name"
        display_order: 0
        id: "id"
      total_items: 6
  Interest_1:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        description: "The name of the interest. This can be shown publicly on a subscription\
          \ form."
        title: "Interest Name"
      display_order:
        type: "integer"
        description: "The display order for interests."
        title: "Display Order"
    title: "Interest"
    description: "Assign subscribers to interests to group them together. Interests\
      \ are referred to as 'group names' in the Mailchimp application."
  Interest_2:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        description: "The name of the interest. This can be shown publicly on a subscription\
          \ form."
        title: "Interest Name"
      display_order:
        type: "integer"
        description: "The display order for interests."
        title: "Display Order"
    title: "Interest"
    description: "Assign subscribers to interests to group them together. Interests\
      \ are referred to as 'group names' in the Mailchimp application."
  Conditions:
    type: "object"
    properties:
      match:
        type: "string"
        description: "Match type."
        title: "Match"
        enum:
        - "any"
        - "all"
      conditions:
        type: "array"
        description: "Segment match conditions. There are multiple possible types,\
          \ see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas)."
        title: "Segment Type"
        items:
          x-oneOf:
          - type: "object"
            title: "Aim Segment"
            description: "Segment by interaction with a specific campaign."
            properties:
              condition_type:
                type: "string"
                x-value: "Aim"
                enum:
                - "Aim"
              field:
                type: "string"
                enum:
                - "aim"
                title: "Segment Field"
                description: "Segment by interaction with a specific campaign."
                example: "aim"
              op:
                type: "string"
                enum:
                - "open"
                - "click"
                - "sent"
                - "noopen"
                - "noclick"
                - "nosent"
                title: "Segment Operator"
                description: "The status of the member with regard to their campaign\
                  \ interaction. One of the following: opened, clicked, was sent,\
                  \ didn't open, didn't click, or was not sent."
                example: "open"
              value:
                type: "string"
                title: "Segment Data"
                description: "Either the web id value for a specific campaign or 'any'\
                  \ to account for subscribers who have/have not interacted with any\
                  \ campaigns."
                example: "any"
          - type: "object"
            title: "Automation Segment"
            description: "Segment by interaction with an Automation workflow."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "Automation"
                enum:
                - "Automation"
              field:
                type: "string"
                enum:
                - "automation"
                title: "Segment Field"
                description: "Segment by interaction with an Automation workflow."
                example: "automation"
              op:
                type: "string"
                enum:
                - "started"
                - "completed"
                - "not_started"
                - "not_completed"
                title: "Segment Operator"
                description: "The status of the member with regard to the automation\
                  \ workflow. One of the following: has started the workflow, has\
                  \ completed the workflow, has not started the workflow, or has not\
                  \ completed the workflow."
                example: "started"
              value:
                type: "string"
                title: "Segment Data"
                description: "The web id for the automation workflow to segment against."
                example: "2135217"
          - type: "object"
            title: "Poll Activity Segment"
            description: "Segment by poll activity."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "CampaignPoll"
                enum:
                - "CampaignPoll"
              field:
                type: "string"
                enum:
                - "poll"
                title: "Segment Field"
                description: "Segment by poll activity."
                example: "poll"
              op:
                type: "string"
                enum:
                - "member"
                - "notmember"
                title: "Segment Operator"
                description: "Members have/have not interacted with a specific poll\
                  \ in a Mailchimp email."
                example: "member"
              value:
                type: "number"
                title: "Segment Operator"
                description: "The id for the poll."
                example: 409
          - type: "object"
            title: "Conversation Segment"
            description: "Segment by interaction with a campaign via Conversations."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "Conversation"
                enum:
                - "Conversation"
              field:
                type: "string"
                enum:
                - "conversation"
                title: "Segment Field"
                description: "Segment by interaction with a campaign via Conversations."
                example: "conversation"
              op:
                type: "string"
                enum:
                - "member"
                - "notmember"
                title: "Segment Operator"
                description: "The status of a member's interaction with a conversation.\
                  \ One of the following: has replied or has not replied."
                example: "member"
              value:
                type: "string"
                title: "Segment Data"
                description: "The web id value for a specific campaign or 'any' to\
                  \ account for subscribers who have/have not interacted with any\
                  \ campaigns."
                example: "any"
          - type: "object"
            title: "Date Segment"
            description: "Segment by a specific date field."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "Date"
                enum:
                - "Date"
              field:
                type: "string"
                enum:
                - "timestamp_opt"
                - "info_changed"
                - "ecomm_date"
                title: "Segment Field"
                description: "The type of date field to segment on: The opt-in time\
                  \ for a signup, the date the subscriber was last updated, or the\
                  \ date of their last ecomm purchase."
                example: "timestamp_opt"
              op:
                type: "string"
                enum:
                - "greater"
                - "less"
                - "is"
                - "not"
                - "blank"
                - "blank_not"
                - "within"
                - "notwithin"
                title: "Segment Operator"
                description: "When the event took place:  Before, after, is a specific\
                  \ date, is not a specific date, is blank, or is not blank."
                example: "greater"
              value:
                type: "string"
                title: "Segment Data"
                description: "What type of data to segment on: a specific date, a\
                  \ specific campaign, or the last campaign sent."
                example: "date"
              extra:
                type: "string"
                title: "Segment Extra Value"
                description: "When segmenting on 'date' or 'campaign', the date for\
                  \ the segment formatted as YYYY-MM-DD or the web id for the campaign."
                example: "2015-01-30"
          - type: "object"
            title: "Email Client Segment"
            description: "Segment by use of a particular email client."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "EmailClient"
                enum:
                - "EmailClient"
              field:
                type: "string"
                enum:
                - "email_client"
                title: "Segment Field"
                description: "Segment by use of a particular email client."
                example: "email_client"
              op:
                type: "string"
                enum:
                - "client_is"
                - "client_not"
                title: "Segment Operator"
                description: "The operation to determine whether we select clients\
                  \ that match the value, or clients that do not match the value."
                example: "client_is"
              value:
                type: "string"
                title: "Segment Data"
                description: "The name of the email client."
                example: "Gmail"
          - type: "object"
            title: "Language Segment"
            description: "Segment by language."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "Language"
                enum:
                - "Language"
              field:
                type: "string"
                enum:
                - "language"
                title: "Segment Field"
                description: "Segmenting based off of a subscriber's language."
                example: "language"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                title: "Segment Operator"
                description: "Whether the member's language is or is not set to a\
                  \ specific language."
                example: "is"
              value:
                type: "string"
                title: "Segment Data"
                description: "A two-letter language identifier."
                example: "en"
          - type: "object"
            title: "Member Rating Segment"
            description: "Segment by member rating."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "MemberRating"
                enum:
                - "MemberRating"
              field:
                type: "string"
                enum:
                - "rating"
                title: "Segment Field"
                description: "Segment by member rating."
                example: "rating"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "greater"
                - "less"
                title: "Segment Operator"
                description: "Members who have have a rating that is/not exactly a\
                  \ given number or members who have a rating greater/less than a\
                  \ given number."
                example: "greater"
              value:
                type: "number"
                title: "Segment Operator"
                description: "The star rating number to segment against."
                example: 4
          - type: "object"
            title: "Signup Source Segment"
            description: "Segment by signup source."
            required:
            - "field"
            - "condition_type"
            - "op"
            properties:
              condition_type:
                type: "string"
                enum:
                - "SignupSource"
                x-value: "SignupSource"
                title: "Type"
              field:
                type: "string"
                enum:
                - "source"
                title: "Segment Field"
                example: "source"
              op:
                type: "string"
                enum:
                - "source_is"
                - "source_not"
                title: "Segment Operator"
                description: "Whether the member's signup source was/was not a particular\
                  \ value."
                example: "source_is"
              value:
                type: "string"
                title: "Segment Data"
                description: "The signup source."
                example: "List Import"
          - type: "object"
            title: "Survey Monkey Segment"
            description: "Segment by interaction with a SurveyMonkey survey."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "SurveyMonkey"
                enum:
                - "SurveyMonkey"
              field:
                type: "string"
                enum:
                - "survey_monkey"
                title: "Segment Field"
                description: "Segment by interaction with a SurveyMonkey survey."
                example: "survey_monkey"
              op:
                type: "string"
                enum:
                - "started"
                - "completed"
                - "not_started"
                - "not_completed"
                title: "Segment Operator"
                description: "The status of the member with regard to the survey.One\
                  \ of the following: has started the survey, has completed the survey,\
                  \ has not started the survey, or has not completed the survey."
                example: "started"
              value:
                type: "string"
                title: "Survey ID"
                description: "The unique ID of the survey monkey survey."
                example: "32179586"
          - type: "object"
            title: "VIP Segment"
            description: "Segment by VIP status."
            required:
            - "field"
            - "op"
            properties:
              condition_type:
                type: "string"
                x-value: "VIP"
                enum:
                - "VIP"
              field:
                type: "string"
                enum:
                - "gmonkey"
                title: "Segment Field"
                description: "Segment by VIP status."
                example: "gmonkey"
              op:
                type: "string"
                enum:
                - "member"
                - "notmember"
                title: "Segment Operator"
                description: "Whether the member is or is not marked as VIP."
                example: "member"
          - type: "object"
            title: "Interests Segment"
            description: "Segment by an interest group merge field."
            properties:
              condition_type:
                type: "string"
                x-value: "Interests"
                enum:
                - "Interests"
              field:
                type: "string"
                title: "Segment Field"
                description: "Segmenting based on interest group information. This\
                  \ should start with 'interests-' followed by the grouping id. Ex.\
                  \ 'interests-123'."
                example: "interests-123"
              op:
                type: "string"
                enum:
                - "interestcontains"
                - "interestcontainsall"
                - "interestnotcontains"
                title: "Segment Operator"
                description: "Whether the member is a part of one, all, or none of\
                  \ the groups."
                example: "interestcontains"
              value:
                type: "array"
                title: "Segment Value"
                description: "An array containing strings, each representing a group\
                  \ id."
                items:
                  type: "string"
                  example:
                  - "44401"
                  - "44405"
                  - "44409"
          - type: "object"
            title: "Ecommerce Category Segment"
            description: "Segment by purchases in specific items or categories."
            properties:
              condition_type:
                type: "string"
                x-value: "EcommCategory"
                enum:
                - "EcommCategory"
              field:
                type: "string"
                enum:
                - "ecomm_cat"
                - "ecomm_prod"
                title: "Segment Field"
                description: "Segment by purchases in specific items or categories."
                example: "ecomm_cat"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "contains"
                - "notcontain"
                - "starts"
                - "ends"
                title: "Segment Operator"
                description: "A member who has purchased from a category/specific\
                  \ item that is/is not a specific name, where the category/item name\
                  \ contains/doesn't contain a specific phrase or string, or a category/item\
                  \ name that starts/ends with a string."
                example: "is"
              value:
                type: "string"
                title: "Segment Data"
                description: "The ecommerce category/item information."
                example: "Product"
          - type: "object"
            title: "Ecommerce Number Segment"
            description: "Segment by average spent total, number of orders, total\
              \ number of products purchased, or average number of products per order."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "EcommNumber"
                enum:
                - "EcommNumber"
              field:
                type: "string"
                enum:
                - "ecomm_spent_avg"
                - "ecomm_orders"
                - "ecomm_prod_all"
                - "ecomm_avg_ord"
                title: "Segment Field"
                description: "Segment by average spent total, number of orders, total\
                  \ number of products purchased, or average number of products per\
                  \ order."
                example: "ecomm_orders"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "greater"
                - "less"
                title: "Segment Operator"
                description: "Members who have spent exactly, have not spent exactly,\
                  \ spent more, or spent less than the segment value."
                example: "greater"
              value:
                type: "number"
                title: "Segment Operator"
                description: "Members who have spent exactly, have not spent exactly,\
                  \ spent more, or spent less than this amount."
                example: 42
          - type: "object"
            title: "Ecommerce Purchased Segment"
            description: "Segment by whether someone has purchased anything."
            properties:
              condition_type:
                type: "string"
                x-value: "EcommPurchased"
                enum:
                - "EcommPurchased"
              field:
                type: "string"
                enum:
                - "ecomm_purchased"
                title: "Segment Field"
                description: "Segment by whether someone has purchased anything."
                example: "ecomm_purchased"
              op:
                type: "string"
                enum:
                - "member"
                - "notmember"
                title: "Segment Operator"
                description: "Members who have have ('member') or have not ('notmember')\
                  \ purchased."
                example: "member"
          - type: "object"
            title: "Ecommerce Spent Segment"
            description: "Segment by amount spent on a single order or across all\
              \ orders."
            properties:
              condition_type:
                type: "string"
                x-value: "EcommSpent"
                enum:
                - "EcommSpent"
              field:
                type: "string"
                enum:
                - "ecomm_spent_one"
                - "ecomm_spent_all"
                title: "Segment Field"
                description: "Segment by amount spent on a single order or across\
                  \ all orders."
                example: "ecomm_spent_one"
              op:
                type: "string"
                enum:
                - "greater"
                - "less"
                title: "Segment Operator"
                description: "Members who have spent 'more' or 'less' than then specified\
                  \ value."
                example: "greater"
              value:
                type: "integer"
                title: "Segment Data"
                description: "The total amount a member spent."
                example: 42
          - type: "object"
            title: "Ecommerce Purchased Store Segment"
            description: "Segment by purchases from a specific store."
            properties:
              condition_type:
                type: "string"
                x-value: "EcommStore"
                enum:
                - "EcommStore"
              field:
                type: "string"
                enum:
                - "ecomm_store"
                title: "Segment Field"
                description: "Segment by purchases from a specific store."
                example: "ecomm_store"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                title: "Segment Operator"
                description: "Members who have or have not purchased from a specific\
                  \ store."
                example: "is"
              value:
                type: "string"
                title: "Segment Operator"
                description: "The store id to segment against."
                example: "289"
          - type: "object"
            title: "Goal Activity Segment"
            description: "Segment by Goal activity."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "GoalActivity"
                enum:
                - "GoalActivity"
              field:
                type: "string"
                enum:
                - "goal"
                title: "Segment Field"
                description: "Segment by Goal activity."
                example: "goal"
              op:
                type: "string"
                enum:
                - "is"
                - "goal_not"
                - "contains"
                - "goal_notcontain"
                - "starts"
                - "ends"
                title: "Segment Operator"
                description: "Whether the website URL is/not exactly, contains/doesn't\
                  \ contain, starts with/ends with a string."
                example: "is"
              value:
                type: "string"
                title: "Segment Value"
                description: "The URL to check Goal activity against."
          - type: "object"
            title: "Goal Timestamp Segment"
            description: "Segment by most recent interaction with a website."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "GoalTimestamp"
                enum:
                - "GoalTimestamp"
              field:
                type: "string"
                enum:
                - "goal_last_visited"
                title: "Segment Field"
                description: "Segment by most recent interaction with a website."
                example: "goal_last_visited"
              op:
                type: "string"
                enum:
                - "greater"
                - "less"
                - "is"
                title: "Segment Operator"
                description: "Whether the website activity happened after, before,\
                  \ or at a given timestamp."
                example: "greater"
              value:
                type: "string"
                title: "Segment Value"
                description: "The date to check Goal activity against."
                example: "2015-07-20 19:45:21"
          - type: "object"
            title: "Similar Subscribers Segment Member Segment"
            description: "Segment by similar subscribers."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "FuzzySegment"
                enum:
                - "FuzzySegment"
              field:
                type: "string"
                enum:
                - "fuzzy_segment"
                title: "Segment Field"
                description: "Segment by similar subscribers."
                example: "fuzzy_segment"
              op:
                type: "string"
                enum:
                - "fuzzy_is"
                - "fuzzy_not"
                title: "Segment Operator"
                description: "Members who are/are not apart of a 'similar subscribers'\
                  \ segment."
                example: "fuzzy_is"
              value:
                type: "number"
                title: "Segment Operator"
                description: "The id for the 'similar subscribers' segment."
                example: 48433
          - type: "object"
            title: "Static Segment Member Segment"
            description: "Segment by a given static segment."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "StaticSegment"
                enum:
                - "StaticSegment"
              field:
                type: "string"
                enum:
                - "static_segment"
                title: "Segment Field"
                description: "Segment by a given static segment."
                example: "static_segment"
              op:
                type: "string"
                enum:
                - "static_is"
                - "static_not"
                title: "Segment Operator"
                description: "Members who are/are not apart of a static segment."
                example: "static_is"
              value:
                type: "number"
                title: "Segment Operator"
                description: "The id for the static segment."
                example: 48433
          - type: "object"
            title: "Location-Based Segment"
            description: "Segment by a specific country or US state."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "IPGeoCountryState"
                enum:
                - "IPGeoCountryState"
              field:
                type: "string"
                enum:
                - "ipgeo"
                title: "Segment Field"
                description: "Segmenting subscribers who are within a specific location."
                example: "ipgeo"
              op:
                type: "string"
                enum:
                - "ipgeocountry"
                - "ipgeonotcountry"
                - "ipgeostate"
                - "ipgeonotstate"
                title: "Segment Operator"
                description: "Segment members who are within a specific country or\
                  \ US state."
                example: "ipgeocountry"
              value:
                type: "string"
                title: "Segment Data"
                description: "The two-letter country code or US state abbreviation."
                example: "US"
          - type: "object"
            title: "Geolocation Segment"
            description: "Segment by a specific geographic region."
            required:
            - "field"
            - "op"
            - "value"
            - "addr"
            - "lat"
            - "lng"
            properties:
              condition_type:
                type: "string"
                x-value: "IPGeoIn"
                enum:
                - "IPGeoIn"
              field:
                type: "string"
                enum:
                - "ipgeo"
                title: "Segment Field"
                description: "Segmenting subscribers who are within a specific location."
                example: "ipgeo"
              op:
                type: "string"
                enum:
                - "ipgeoin"
                - "ipgeonotin"
                title: "Segment Operator"
                description: "Segment members who are within a specific geographic\
                  \ region."
                example: "ipgeoin"
              value:
                type: "integer"
                title: "Segment Data"
                description: "The radius of the target location."
                example: 42
              addr:
                type: "string"
                title: "Segment Location Address"
                description: "The address of the target location."
                example: "Atlanta, GA, USA"
              lat:
                type: "string"
                title: "Segment Location Latitude"
                description: "The latitude of the target location."
                example: "33.7489954"
              lng:
                type: "string"
                title: "Segment Location Longitude"
                description: "The longitude of the target location."
                example: "-84.3879824"
          - type: "object"
            title: "US Zip Code Segment"
            description: "Segment by a specific US ZIP code."
            required:
            - "field"
            - "op"
            - "value"
            - "extra"
            properties:
              condition_type:
                type: "string"
                x-value: "IPGeoInZip"
                enum:
                - "IPGeoInZip"
              field:
                type: "string"
                enum:
                - "ipgeo"
                title: "Segment Field"
                description: "Segmenting subscribers who are within a specific location."
                example: "ipgeo"
              op:
                type: "string"
                enum:
                - "ipgeoinzip"
                title: "Segment Operator"
                description: "Segment members who are within a specific US zip code."
                example: "ipgeoinzip"
              value:
                type: "integer"
                title: "Segment Data"
                description: "The radius of the target location."
                example: 25
              extra:
                type: "integer"
                title: "Extra Data"
                description: "The zip code to segment against."
                example: 30318
          - type: "object"
            title: "Unknown Location-Based Segment"
            description: "Segment members whose location information is unknown."
            required:
            - "field"
            - "op"
            properties:
              condition_type:
                type: "string"
                x-value: "IPGeoUnknown"
                enum:
                - "IPGeoUnknown"
              field:
                type: "string"
                enum:
                - "ipgeo"
                title: "Segment Field"
                description: "Segmenting subscribers who are within a specific location."
                example: "ipgeo"
              op:
                type: "string"
                enum:
                - "ipgeounknown"
                title: "Segment Operator"
                description: "Segment members for which location information is unknown."
                example: "ipgeounknown"
          - type: "object"
            title: "Zip Code Location-Based Segment"
            description: "Segment by a specific US ZIP code."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "IPGeoZip"
                enum:
                - "IPGeoZip"
              field:
                type: "string"
                enum:
                - "ipgeo"
                title: "Segment Field"
                description: "Segmenting subscribers who are within a specific location."
                example: "ipgeo"
              op:
                type: "string"
                enum:
                - "ipgeoiszip"
                - "ipgeonotzip"
                title: "Segment Operator"
                description: "Segment members who are/are not within a specific US\
                  \ zip code."
                example: "ipgeonotzip"
              value:
                type: "integer"
                title: "Segment Data"
                description: "The 5-digit zip code."
                example: 30318
          - type: "object"
            title: "Social Profiles Age Segment"
            description: "Segment by age ranges in Social Profiles data."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "SocialAge"
                enum:
                - "SocialAge"
              field:
                type: "string"
                enum:
                - "social_age"
                title: "Segment Field"
                description: "Segment by age ranges in Social Profiles data."
                example: "social_age"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                title: "Segment Operator"
                description: "Members who are/not the exact criteria listed."
                example: "is"
              value:
                type: "string"
                enum:
                - "18-24"
                - "25-34"
                - "35-54"
                - "55+"
                title: "Segment Operator"
                description: "The age range to segment."
                example: "35-54"
          - type: "object"
            title: "Social Profiles Gender Segment"
            description: "Segment by listed gender in Social Profiles data."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "SocialGender"
                enum:
                - "SocialGender"
              field:
                type: "string"
                enum:
                - "social_gender"
                title: "Segment Field"
                description: "Segment by listed gender in Social Profiles data."
                example: "social_gender"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                title: "Segment Operator"
                description: "Members who are/not the exact criteria listed."
                example: "is"
              value:
                type: "string"
                enum:
                - "male"
                - "female"
                title: "Segment Operator"
                description: "The Social Profiles gender to segment."
                example: "female"
          - type: "object"
            title: "Social Profiles Influence Segment"
            description: "Segment by influence rating in Social Profiles data."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "SocialInfluence"
                enum:
                - "SocialInfluence"
              field:
                type: "string"
                enum:
                - "social_influence"
                title: "Segment Field"
                description: "Segment by influence rating in Social Profiles data."
                example: "social_influence"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "greater"
                - "less"
                title: "Segment Operator"
                description: "Members who have a rating that is/not or greater/less\
                  \ than the rating provided."
                example: "greater"
              value:
                type: "number"
                title: "Segment Operator"
                description: "The Social Profiles influence rating to segment."
                example: 2
          - type: "object"
            title: "Social Profiles Social Network Segment"
            description: "Segment by social network in Social Profiles data."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "SocialNetworkMember"
                enum:
                - "SocialNetworkMember"
              field:
                type: "string"
                enum:
                - "social_network"
                title: "Segment Field"
                description: "Segment by social network in Social Profiles data."
                example: "social_network"
              op:
                type: "string"
                enum:
                - "member"
                - "notmember"
                title: "Segment Operator"
                description: "Members who are/not on a given social network."
                example: "member"
              value:
                type: "string"
                enum:
                - "twitter"
                - "facebook"
                - "linkedin"
                - "flickr"
                - "foursquare"
                - "lastfm"
                - "myspace"
                - "quora"
                - "vimeo"
                - "yelp"
                - "youtube"
                title: "Segment Operator"
                description: "The social network to segment against."
                example: "twitter"
          - type: "object"
            title: "Social Profiles Social Network Follow Segment"
            description: "Segment by social network in Social Profiles data."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "SocialNetworkFollow"
                enum:
                - "SocialNetworkFollow"
              field:
                type: "string"
                enum:
                - "social_network"
                title: "Segment Field"
                description: "Segment by social network in Social Profiles data."
                example: "social_network"
              op:
                type: "string"
                enum:
                - "follow"
                - "notfollow"
                title: "Segment Operator"
                description: "Members who are/not following a linked account on a\
                  \ given social network."
                example: "follow"
              value:
                type: "string"
                enum:
                - "twitter_follow"
                title: "Segment Operator"
                description: "The social network to segment against."
                example: "twitter_follow"
          - type: "object"
            title: "Address Merge Field Segment"
            description: "Segment by an address-type merge field."
            required:
            - "field"
            - "op"
            properties:
              condition_type:
                type: "string"
                x-value: "AddressMerge"
                enum:
                - "AddressMerge"
              field:
                type: "string"
                title: "Segment Field"
                description: "An address-type merge field to segment."
                example: "MMERGE3"
              op:
                type: "string"
                enum:
                - "contains"
                - "notcontain"
                - "blank"
                - "blank_not"
                title: "Segment Operator"
                description: "Whether the member's address merge field contains/does\
                  \ not contain a value or is/is not blank."
                example: "contains"
              value:
                type: "string"
                title: "Segment Value"
                description: "The value to segment a text merge field with."
                example: "Atlanta"
          - type: "object"
            title: "Address/Zip Merge Field Segment"
            description: "Segment by an address-type merge field within a given distance."
            required:
            - "field"
            - "op"
            - "value"
            - "extra"
            properties:
              condition_type:
                type: "string"
                x-value: "ZipMerge"
                enum:
                - "ZipMerge"
              field:
                type: "string"
                title: "Segment Field"
                description: "An address or zip-type merge field to segment."
                example: "MMERGE2"
              op:
                type: "string"
                enum:
                - "geoin"
                title: "Segment Operator"
                description: "Whether the member's address merge field is within a\
                  \ given distance from a city or zip."
                example: "geoin"
              value:
                type: "string"
                title: "Segment Value"
                description: "The distance from the city/zip."
                example: "25"
              extra:
                type: "string"
                title: "Segment Extra"
                description: "The city or the zip being used to segment against."
                example: "30318"
          - type: "object"
            title: "Birthday Merge Field Segment"
            description: "Segment by a contact's birthday."
            required:
            - "field"
            - "op"
            properties:
              condition_type:
                type: "string"
                x-value: "BirthdayMerge"
                enum:
                - "BirthdayMerge"
              field:
                type: "string"
                title: "Segment Field"
                description: "A date merge field to segment."
                example: "MMERGE4"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "blank"
                - "blank_not"
                title: "Segment Operator"
                description: "Whether the member's birthday merge information is/is\
                  \ not a certain date or is/is not blank."
                example: "is"
              value:
                type: "string"
                title: "Segment Value"
                description: "A date to segment against (mm/dd)."
                example: "01/30"
          - type: "object"
            title: "Date Merge Field Segment"
            description: "Segment by a given date merge field."
            required:
            - "field"
            - "op"
            properties:
              condition_type:
                type: "string"
                x-value: "DateMerge"
                enum:
                - "DateMerge"
              field:
                type: "string"
                title: "Segment Field"
                description: "A date merge field to segment."
                example: "MMERGE5"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "less"
                - "blank"
                - "blank_not"
                - "greater"
                title: "Segment Operator"
                description: "Whether the member's merge information is/is not, is\
                  \ greater/less than a value or is/is not blank."
                example: "is"
              value:
                type: "string"
                title: "Segment Value"
                description: "A date to segment against."
                example: "01/30/2015"
          - type: "object"
            title: "Dropdown/Radio Merge Field Segment"
            description: "An individual segment condition"
            required:
            - "field"
            - "op"
            properties:
              condition_type:
                type: "string"
                x-value: "SelectMerge"
                enum:
                - "SelectMerge"
              field:
                type: "string"
                title: "Segment Field"
                description: "A merge field to segment."
                example: "MMERGE6"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "blank"
                - "blank_not"
                - "notcontain"
                - "contains"
                title: "Segment Operator"
                description: "Whether the member's merge information is/is not a value\
                  \ or is/is not blank."
                example: "is"
              value:
                type: "string"
                title: "Segment Value"
                description: "The value to segment a text merge field with."
                example: "Second Choice"
          - type: "object"
            title: "Text or Number Merge Field Segment"
            description: "Segment by a given text or number merge field."
            required:
            - "field"
            - "op"
            properties:
              condition_type:
                type: "string"
                x-value: "TextMerge"
                enum:
                - "TextMerge"
              field:
                type: "string"
                title: "Segment Field"
                description: "A text or number merge field to segment."
                example: "MMERGE7"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "contains"
                - "notcontain"
                - "starts"
                - "ends"
                - "greater"
                - "less"
                - "blank"
                - "blank_not"
                title: "Segment Operator"
                description: "Whether the member's merge information is/is not, contains/does\
                  \ not contain, starts/ends with, or is greater/less than a value"
                example: "contains"
              value:
                type: "string"
                title: "Segment Value"
                description: "The value to segment a text or number merge field with."
                example: "Freddie's Jokes"
          - type: "object"
            title: "Email Segment"
            description: "Segment by email address."
            required:
            - "field"
            - "op"
            properties:
              condition_type:
                type: "string"
                x-value: "EmailAddress"
                enum:
                - "EmailAddress"
              field:
                type: "string"
                enum:
                - "merge0"
                - "EMAIL"
                title: "Segment Field"
                description: "Segmenting based off of a subscriber's email address."
                example: "EMAIL"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "contains"
                - "notcontain"
                - "starts"
                - "ends"
                - "greater"
                - "less"
                title: "Segment Operator"
                description: "Whether the email address is/not exactly, contains/doesn't\
                  \ contain, starts/ends with a string."
              value:
                type: "string"
                title: "Segment Value"
                description: "The value to compare the email against."
                example: "urist.mcvankab@freddiesjokes.com"
          - type: "object"
            title: "Predicted Gender Segment"
            description: "Segment by predicted gender."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "PredictedGender"
                enum:
                - "PredictedGender"
              field:
                type: "string"
                enum:
                - "predicted_gender"
                title: "Segment Field"
                description: "Segment by predicted gender."
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                title: "Segment Operator"
                description: "Members who are/not the exact criteria listed."
                example: "is"
              value:
                type: "string"
                enum:
                - "male"
                - "female"
                title: "Segment Operator"
                description: "The predicted gender to segment."
                example: "female"
          - type: "object"
            title: "Predicted Age Segment"
            description: "Segment by predicted age."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "PredictedAge"
                enum:
                - "PredictedAge"
              field:
                type: "string"
                enum:
                - "predicted_age_range"
                title: "Segment Field"
                description: "Segment by predicted age."
              op:
                type: "string"
                enum:
                - "is"
                title: "Segment Operator"
                description: "Members who are/not the exact criteria listed."
                example: "is"
              value:
                type: "string"
                enum:
                - "18-24"
                - "25-34"
                - "35-44"
                - "45-54"
                - "55-64"
                - "65+"
                title: "Segment Operator"
                description: "The predicted age to segment."
                example: "female"
          - type: "object"
            title: "New Subscribers Prebuilt Segment"
            description: "Segment by when people subscribed."
            properties:
              condition_type:
                type: "string"
                x-value: "NewSubscribers"
                enum:
                - "NewSubscribers"
              field:
                type: "string"
                enum:
                - "timestamp_opt"
                title: "Segment Field"
                description: "Segment by when people subscribed."
              op:
                type: "string"
                enum:
                - "date_within"
                title: "Segment Operator"
                description: "Whe the event took place, namely within a time frame."
              value:
                type: "string"
                title: "Segment Data"
                description: "What type of data to segment on: a specific date, a\
                  \ specific campaign, or the last campaign sent."
          x-discriminator:
            type: "string"
            propertyName: "condition_type"
    description: "The conditions of the segment. Static segments (tags) and fuzzy\
      \ segments don't have conditions."
    example:
      match: "any"
      conditions:
      - ""
      - ""
  List_7:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "The unique id for the segment."
        title: "Segment ID"
        readOnly: true
      name:
        type: "string"
        description: "The name of the segment."
        title: "Segment Name"
      member_count:
        type: "integer"
        description: "The number of active subscribers currently included in the segment."
        title: "Member Count"
        readOnly: true
      type:
        type: "string"
        description: "The type of segment. Static segments are now known as tags.\
          \ Learn more about [tags](https://mailchimp.com/help/getting-started-tags?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
        title: "Type"
        readOnly: true
        enum:
        - "saved"
        - "static"
        - "fuzzy"
      created_at:
        type: "string"
        format: "date-time"
        description: "The date and time the segment was created in ISO 8601 format."
        title: "Date Created"
        readOnly: true
      updated_at:
        type: "string"
        format: "date-time"
        description: "The date and time the segment was last updated in ISO 8601 format."
        title: "Date Updated"
        readOnly: true
      options:
        $ref: "#/definitions/Conditions"
      list_id:
        type: "string"
        description: "The list id."
        title: "List ID"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "Information about a specific segment."
    example:
      updated_at: "2000-01-23T04:56:07.000+00:00"
      list_id: "list_id"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      name: "name"
      options:
        match: "any"
        conditions:
        - ""
        - ""
      created_at: "2000-01-23T04:56:07.000+00:00"
      id: 0
      member_count: 6
      type: "saved"
  Collection of Segments:
    type: "object"
    properties:
      segments:
        type: "array"
        description: "An array of objects, each representing a list segment."
        title: "Lists"
        items:
          $ref: "#/definitions/List_7"
      list_id:
        type: "string"
        description: "The list id."
        title: "List ID"
        readOnly: true
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A list of available segments."
    example:
      list_id: "list_id"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      total_items: 1
      segments:
      - updated_at: "2000-01-23T04:56:07.000+00:00"
        list_id: "list_id"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        name: "name"
        options:
          match: "any"
          conditions:
          - ""
          - ""
        created_at: "2000-01-23T04:56:07.000+00:00"
        id: 0
        member_count: 6
        type: "saved"
      - updated_at: "2000-01-23T04:56:07.000+00:00"
        list_id: "list_id"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        name: "name"
        options:
          match: "any"
          conditions:
          - ""
          - ""
        created_at: "2000-01-23T04:56:07.000+00:00"
        id: 0
        member_count: 6
        type: "saved"
  Conditions_1:
    type: "object"
    properties:
      match:
        type: "string"
        description: "Match type."
        title: "Match"
        enum:
        - "any"
        - "all"
      conditions:
        type: "array"
        description: "Segment match conditions. There are multiple possible types,\
          \ see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas)."
        title: "Segment Type"
        items:
          x-oneOf:
          - type: "object"
            title: "Aim Segment"
            description: "Segment by interaction with a specific campaign."
            properties:
              condition_type:
                type: "string"
                x-value: "Aim"
                enum:
                - "Aim"
              field:
                type: "string"
                enum:
                - "aim"
                title: "Segment Field"
                description: "Segment by interaction with a specific campaign."
                example: "aim"
              op:
                type: "string"
                enum:
                - "open"
                - "click"
                - "sent"
                - "noopen"
                - "noclick"
                - "nosent"
                title: "Segment Operator"
                description: "The status of the member with regard to their campaign\
                  \ interaction. One of the following: opened, clicked, was sent,\
                  \ didn't open, didn't click, or was not sent."
                example: "open"
              value:
                type: "string"
                title: "Segment Data"
                description: "Either the web id value for a specific campaign or 'any'\
                  \ to account for subscribers who have/have not interacted with any\
                  \ campaigns."
                example: "any"
          - type: "object"
            title: "Automation Segment"
            description: "Segment by interaction with an Automation workflow."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "Automation"
                enum:
                - "Automation"
              field:
                type: "string"
                enum:
                - "automation"
                title: "Segment Field"
                description: "Segment by interaction with an Automation workflow."
                example: "automation"
              op:
                type: "string"
                enum:
                - "started"
                - "completed"
                - "not_started"
                - "not_completed"
                title: "Segment Operator"
                description: "The status of the member with regard to the automation\
                  \ workflow. One of the following: has started the workflow, has\
                  \ completed the workflow, has not started the workflow, or has not\
                  \ completed the workflow."
                example: "started"
              value:
                type: "string"
                title: "Segment Data"
                description: "The web id for the automation workflow to segment against."
                example: "2135217"
          - type: "object"
            title: "Poll Activity Segment"
            description: "Segment by poll activity."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "CampaignPoll"
                enum:
                - "CampaignPoll"
              field:
                type: "string"
                enum:
                - "poll"
                title: "Segment Field"
                description: "Segment by poll activity."
                example: "poll"
              op:
                type: "string"
                enum:
                - "member"
                - "notmember"
                title: "Segment Operator"
                description: "Members have/have not interacted with a specific poll\
                  \ in a Mailchimp email."
                example: "member"
              value:
                type: "number"
                title: "Segment Operator"
                description: "The id for the poll."
                example: 409
          - type: "object"
            title: "Conversation Segment"
            description: "Segment by interaction with a campaign via Conversations."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "Conversation"
                enum:
                - "Conversation"
              field:
                type: "string"
                enum:
                - "conversation"
                title: "Segment Field"
                description: "Segment by interaction with a campaign via Conversations."
                example: "conversation"
              op:
                type: "string"
                enum:
                - "member"
                - "notmember"
                title: "Segment Operator"
                description: "The status of a member's interaction with a conversation.\
                  \ One of the following: has replied or has not replied."
                example: "member"
              value:
                type: "string"
                title: "Segment Data"
                description: "The web id value for a specific campaign or 'any' to\
                  \ account for subscribers who have/have not interacted with any\
                  \ campaigns."
                example: "any"
          - type: "object"
            title: "Date Segment"
            description: "Segment by a specific date field."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "Date"
                enum:
                - "Date"
              field:
                type: "string"
                enum:
                - "timestamp_opt"
                - "info_changed"
                - "ecomm_date"
                title: "Segment Field"
                description: "The type of date field to segment on: The opt-in time\
                  \ for a signup, the date the subscriber was last updated, or the\
                  \ date of their last ecomm purchase."
                example: "timestamp_opt"
              op:
                type: "string"
                enum:
                - "greater"
                - "less"
                - "is"
                - "not"
                - "blank"
                - "blank_not"
                - "within"
                - "notwithin"
                title: "Segment Operator"
                description: "When the event took place:  Before, after, is a specific\
                  \ date, is not a specific date, is blank, or is not blank."
                example: "greater"
              value:
                type: "string"
                title: "Segment Data"
                description: "What type of data to segment on: a specific date, a\
                  \ specific campaign, or the last campaign sent."
                example: "date"
              extra:
                type: "string"
                title: "Segment Extra Value"
                description: "When segmenting on 'date' or 'campaign', the date for\
                  \ the segment formatted as YYYY-MM-DD or the web id for the campaign."
                example: "2015-01-30"
          - type: "object"
            title: "Email Client Segment"
            description: "Segment by use of a particular email client."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "EmailClient"
                enum:
                - "EmailClient"
              field:
                type: "string"
                enum:
                - "email_client"
                title: "Segment Field"
                description: "Segment by use of a particular email client."
                example: "email_client"
              op:
                type: "string"
                enum:
                - "client_is"
                - "client_not"
                title: "Segment Operator"
                description: "The operation to determine whether we select clients\
                  \ that match the value, or clients that do not match the value."
                example: "client_is"
              value:
                type: "string"
                title: "Segment Data"
                description: "The name of the email client."
                example: "Gmail"
          - type: "object"
            title: "Language Segment"
            description: "Segment by language."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "Language"
                enum:
                - "Language"
              field:
                type: "string"
                enum:
                - "language"
                title: "Segment Field"
                description: "Segmenting based off of a subscriber's language."
                example: "language"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                title: "Segment Operator"
                description: "Whether the member's language is or is not set to a\
                  \ specific language."
                example: "is"
              value:
                type: "string"
                title: "Segment Data"
                description: "A two-letter language identifier."
                example: "en"
          - type: "object"
            title: "Member Rating Segment"
            description: "Segment by member rating."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "MemberRating"
                enum:
                - "MemberRating"
              field:
                type: "string"
                enum:
                - "rating"
                title: "Segment Field"
                description: "Segment by member rating."
                example: "rating"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "greater"
                - "less"
                title: "Segment Operator"
                description: "Members who have have a rating that is/not exactly a\
                  \ given number or members who have a rating greater/less than a\
                  \ given number."
                example: "greater"
              value:
                type: "number"
                title: "Segment Operator"
                description: "The star rating number to segment against."
                example: 4
          - type: "object"
            title: "Signup Source Segment"
            description: "Segment by signup source."
            required:
            - "field"
            - "condition_type"
            - "op"
            properties:
              condition_type:
                type: "string"
                enum:
                - "SignupSource"
                x-value: "SignupSource"
                title: "Type"
              field:
                type: "string"
                enum:
                - "source"
                title: "Segment Field"
                example: "source"
              op:
                type: "string"
                enum:
                - "source_is"
                - "source_not"
                title: "Segment Operator"
                description: "Whether the member's signup source was/was not a particular\
                  \ value."
                example: "source_is"
              value:
                type: "string"
                title: "Segment Data"
                description: "The signup source."
                example: "List Import"
          - type: "object"
            title: "Survey Monkey Segment"
            description: "Segment by interaction with a SurveyMonkey survey."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "SurveyMonkey"
                enum:
                - "SurveyMonkey"
              field:
                type: "string"
                enum:
                - "survey_monkey"
                title: "Segment Field"
                description: "Segment by interaction with a SurveyMonkey survey."
                example: "survey_monkey"
              op:
                type: "string"
                enum:
                - "started"
                - "completed"
                - "not_started"
                - "not_completed"
                title: "Segment Operator"
                description: "The status of the member with regard to the survey.One\
                  \ of the following: has started the survey, has completed the survey,\
                  \ has not started the survey, or has not completed the survey."
                example: "started"
              value:
                type: "string"
                title: "Survey ID"
                description: "The unique ID of the survey monkey survey."
                example: "32179586"
          - type: "object"
            title: "VIP Segment"
            description: "Segment by VIP status."
            required:
            - "field"
            - "op"
            properties:
              condition_type:
                type: "string"
                x-value: "VIP"
                enum:
                - "VIP"
              field:
                type: "string"
                enum:
                - "gmonkey"
                title: "Segment Field"
                description: "Segment by VIP status."
                example: "gmonkey"
              op:
                type: "string"
                enum:
                - "member"
                - "notmember"
                title: "Segment Operator"
                description: "Whether the member is or is not marked as VIP."
                example: "member"
          - type: "object"
            title: "Interests Segment"
            description: "Segment by an interest group merge field."
            properties:
              condition_type:
                type: "string"
                x-value: "Interests"
                enum:
                - "Interests"
              field:
                type: "string"
                title: "Segment Field"
                description: "Segmenting based on interest group information. This\
                  \ should start with 'interests-' followed by the grouping id. Ex.\
                  \ 'interests-123'."
                example: "interests-123"
              op:
                type: "string"
                enum:
                - "interestcontains"
                - "interestcontainsall"
                - "interestnotcontains"
                title: "Segment Operator"
                description: "Whether the member is a part of one, all, or none of\
                  \ the groups."
                example: "interestcontains"
              value:
                type: "array"
                title: "Segment Value"
                description: "An array containing strings, each representing a group\
                  \ id."
                items:
                  type: "string"
                  example:
                  - "44401"
                  - "44405"
                  - "44409"
          - type: "object"
            title: "Ecommerce Category Segment"
            description: "Segment by purchases in specific items or categories."
            properties:
              condition_type:
                type: "string"
                x-value: "EcommCategory"
                enum:
                - "EcommCategory"
              field:
                type: "string"
                enum:
                - "ecomm_cat"
                - "ecomm_prod"
                title: "Segment Field"
                description: "Segment by purchases in specific items or categories."
                example: "ecomm_cat"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "contains"
                - "notcontain"
                - "starts"
                - "ends"
                title: "Segment Operator"
                description: "A member who has purchased from a category/specific\
                  \ item that is/is not a specific name, where the category/item name\
                  \ contains/doesn't contain a specific phrase or string, or a category/item\
                  \ name that starts/ends with a string."
                example: "is"
              value:
                type: "string"
                title: "Segment Data"
                description: "The ecommerce category/item information."
                example: "Product"
          - type: "object"
            title: "Ecommerce Number Segment"
            description: "Segment by average spent total, number of orders, total\
              \ number of products purchased, or average number of products per order."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "EcommNumber"
                enum:
                - "EcommNumber"
              field:
                type: "string"
                enum:
                - "ecomm_spent_avg"
                - "ecomm_orders"
                - "ecomm_prod_all"
                - "ecomm_avg_ord"
                title: "Segment Field"
                description: "Segment by average spent total, number of orders, total\
                  \ number of products purchased, or average number of products per\
                  \ order."
                example: "ecomm_orders"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "greater"
                - "less"
                title: "Segment Operator"
                description: "Members who have spent exactly, have not spent exactly,\
                  \ spent more, or spent less than the segment value."
                example: "greater"
              value:
                type: "number"
                title: "Segment Operator"
                description: "Members who have spent exactly, have not spent exactly,\
                  \ spent more, or spent less than this amount."
                example: 42
          - type: "object"
            title: "Ecommerce Purchased Segment"
            description: "Segment by whether someone has purchased anything."
            properties:
              condition_type:
                type: "string"
                x-value: "EcommPurchased"
                enum:
                - "EcommPurchased"
              field:
                type: "string"
                enum:
                - "ecomm_purchased"
                title: "Segment Field"
                description: "Segment by whether someone has purchased anything."
                example: "ecomm_purchased"
              op:
                type: "string"
                enum:
                - "member"
                - "notmember"
                title: "Segment Operator"
                description: "Members who have have ('member') or have not ('notmember')\
                  \ purchased."
                example: "member"
          - type: "object"
            title: "Ecommerce Spent Segment"
            description: "Segment by amount spent on a single order or across all\
              \ orders."
            properties:
              condition_type:
                type: "string"
                x-value: "EcommSpent"
                enum:
                - "EcommSpent"
              field:
                type: "string"
                enum:
                - "ecomm_spent_one"
                - "ecomm_spent_all"
                title: "Segment Field"
                description: "Segment by amount spent on a single order or across\
                  \ all orders."
                example: "ecomm_spent_one"
              op:
                type: "string"
                enum:
                - "greater"
                - "less"
                title: "Segment Operator"
                description: "Members who have spent 'more' or 'less' than then specified\
                  \ value."
                example: "greater"
              value:
                type: "integer"
                title: "Segment Data"
                description: "The total amount a member spent."
                example: 42
          - type: "object"
            title: "Ecommerce Purchased Store Segment"
            description: "Segment by purchases from a specific store."
            properties:
              condition_type:
                type: "string"
                x-value: "EcommStore"
                enum:
                - "EcommStore"
              field:
                type: "string"
                enum:
                - "ecomm_store"
                title: "Segment Field"
                description: "Segment by purchases from a specific store."
                example: "ecomm_store"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                title: "Segment Operator"
                description: "Members who have or have not purchased from a specific\
                  \ store."
                example: "is"
              value:
                type: "string"
                title: "Segment Operator"
                description: "The store id to segment against."
                example: "289"
          - type: "object"
            title: "Goal Activity Segment"
            description: "Segment by Goal activity."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "GoalActivity"
                enum:
                - "GoalActivity"
              field:
                type: "string"
                enum:
                - "goal"
                title: "Segment Field"
                description: "Segment by Goal activity."
                example: "goal"
              op:
                type: "string"
                enum:
                - "is"
                - "goal_not"
                - "contains"
                - "goal_notcontain"
                - "starts"
                - "ends"
                title: "Segment Operator"
                description: "Whether the website URL is/not exactly, contains/doesn't\
                  \ contain, starts with/ends with a string."
                example: "is"
              value:
                type: "string"
                title: "Segment Value"
                description: "The URL to check Goal activity against."
          - type: "object"
            title: "Goal Timestamp Segment"
            description: "Segment by most recent interaction with a website."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "GoalTimestamp"
                enum:
                - "GoalTimestamp"
              field:
                type: "string"
                enum:
                - "goal_last_visited"
                title: "Segment Field"
                description: "Segment by most recent interaction with a website."
                example: "goal_last_visited"
              op:
                type: "string"
                enum:
                - "greater"
                - "less"
                - "is"
                title: "Segment Operator"
                description: "Whether the website activity happened after, before,\
                  \ or at a given timestamp."
                example: "greater"
              value:
                type: "string"
                title: "Segment Value"
                description: "The date to check Goal activity against."
                example: "2015-07-20 19:45:21"
          - type: "object"
            title: "Similar Subscribers Segment Member Segment"
            description: "Segment by similar subscribers."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "FuzzySegment"
                enum:
                - "FuzzySegment"
              field:
                type: "string"
                enum:
                - "fuzzy_segment"
                title: "Segment Field"
                description: "Segment by similar subscribers."
                example: "fuzzy_segment"
              op:
                type: "string"
                enum:
                - "fuzzy_is"
                - "fuzzy_not"
                title: "Segment Operator"
                description: "Members who are/are not apart of a 'similar subscribers'\
                  \ segment."
                example: "fuzzy_is"
              value:
                type: "number"
                title: "Segment Operator"
                description: "The id for the 'similar subscribers' segment."
                example: 48433
          - type: "object"
            title: "Static Segment Member Segment"
            description: "Segment by a given static segment."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "StaticSegment"
                enum:
                - "StaticSegment"
              field:
                type: "string"
                enum:
                - "static_segment"
                title: "Segment Field"
                description: "Segment by a given static segment."
                example: "static_segment"
              op:
                type: "string"
                enum:
                - "static_is"
                - "static_not"
                title: "Segment Operator"
                description: "Members who are/are not apart of a static segment."
                example: "static_is"
              value:
                type: "number"
                title: "Segment Operator"
                description: "The id for the static segment."
                example: 48433
          - type: "object"
            title: "Location-Based Segment"
            description: "Segment by a specific country or US state."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "IPGeoCountryState"
                enum:
                - "IPGeoCountryState"
              field:
                type: "string"
                enum:
                - "ipgeo"
                title: "Segment Field"
                description: "Segmenting subscribers who are within a specific location."
                example: "ipgeo"
              op:
                type: "string"
                enum:
                - "ipgeocountry"
                - "ipgeonotcountry"
                - "ipgeostate"
                - "ipgeonotstate"
                title: "Segment Operator"
                description: "Segment members who are within a specific country or\
                  \ US state."
                example: "ipgeocountry"
              value:
                type: "string"
                title: "Segment Data"
                description: "The two-letter country code or US state abbreviation."
                example: "US"
          - type: "object"
            title: "Geolocation Segment"
            description: "Segment by a specific geographic region."
            required:
            - "field"
            - "op"
            - "value"
            - "addr"
            - "lat"
            - "lng"
            properties:
              condition_type:
                type: "string"
                x-value: "IPGeoIn"
                enum:
                - "IPGeoIn"
              field:
                type: "string"
                enum:
                - "ipgeo"
                title: "Segment Field"
                description: "Segmenting subscribers who are within a specific location."
                example: "ipgeo"
              op:
                type: "string"
                enum:
                - "ipgeoin"
                - "ipgeonotin"
                title: "Segment Operator"
                description: "Segment members who are within a specific geographic\
                  \ region."
                example: "ipgeoin"
              value:
                type: "integer"
                title: "Segment Data"
                description: "The radius of the target location."
                example: 42
              addr:
                type: "string"
                title: "Segment Location Address"
                description: "The address of the target location."
                example: "Atlanta, GA, USA"
              lat:
                type: "string"
                title: "Segment Location Latitude"
                description: "The latitude of the target location."
                example: "33.7489954"
              lng:
                type: "string"
                title: "Segment Location Longitude"
                description: "The longitude of the target location."
                example: "-84.3879824"
          - type: "object"
            title: "US Zip Code Segment"
            description: "Segment by a specific US ZIP code."
            required:
            - "field"
            - "op"
            - "value"
            - "extra"
            properties:
              condition_type:
                type: "string"
                x-value: "IPGeoInZip"
                enum:
                - "IPGeoInZip"
              field:
                type: "string"
                enum:
                - "ipgeo"
                title: "Segment Field"
                description: "Segmenting subscribers who are within a specific location."
                example: "ipgeo"
              op:
                type: "string"
                enum:
                - "ipgeoinzip"
                title: "Segment Operator"
                description: "Segment members who are within a specific US zip code."
                example: "ipgeoinzip"
              value:
                type: "integer"
                title: "Segment Data"
                description: "The radius of the target location."
                example: 25
              extra:
                type: "integer"
                title: "Extra Data"
                description: "The zip code to segment against."
                example: 30318
          - type: "object"
            title: "Unknown Location-Based Segment"
            description: "Segment members whose location information is unknown."
            required:
            - "field"
            - "op"
            properties:
              condition_type:
                type: "string"
                x-value: "IPGeoUnknown"
                enum:
                - "IPGeoUnknown"
              field:
                type: "string"
                enum:
                - "ipgeo"
                title: "Segment Field"
                description: "Segmenting subscribers who are within a specific location."
                example: "ipgeo"
              op:
                type: "string"
                enum:
                - "ipgeounknown"
                title: "Segment Operator"
                description: "Segment members for which location information is unknown."
                example: "ipgeounknown"
          - type: "object"
            title: "Zip Code Location-Based Segment"
            description: "Segment by a specific US ZIP code."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "IPGeoZip"
                enum:
                - "IPGeoZip"
              field:
                type: "string"
                enum:
                - "ipgeo"
                title: "Segment Field"
                description: "Segmenting subscribers who are within a specific location."
                example: "ipgeo"
              op:
                type: "string"
                enum:
                - "ipgeoiszip"
                - "ipgeonotzip"
                title: "Segment Operator"
                description: "Segment members who are/are not within a specific US\
                  \ zip code."
                example: "ipgeonotzip"
              value:
                type: "integer"
                title: "Segment Data"
                description: "The 5-digit zip code."
                example: 30318
          - type: "object"
            title: "Social Profiles Age Segment"
            description: "Segment by age ranges in Social Profiles data."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "SocialAge"
                enum:
                - "SocialAge"
              field:
                type: "string"
                enum:
                - "social_age"
                title: "Segment Field"
                description: "Segment by age ranges in Social Profiles data."
                example: "social_age"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                title: "Segment Operator"
                description: "Members who are/not the exact criteria listed."
                example: "is"
              value:
                type: "string"
                enum:
                - "18-24"
                - "25-34"
                - "35-54"
                - "55+"
                title: "Segment Operator"
                description: "The age range to segment."
                example: "35-54"
          - type: "object"
            title: "Social Profiles Gender Segment"
            description: "Segment by listed gender in Social Profiles data."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "SocialGender"
                enum:
                - "SocialGender"
              field:
                type: "string"
                enum:
                - "social_gender"
                title: "Segment Field"
                description: "Segment by listed gender in Social Profiles data."
                example: "social_gender"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                title: "Segment Operator"
                description: "Members who are/not the exact criteria listed."
                example: "is"
              value:
                type: "string"
                enum:
                - "male"
                - "female"
                title: "Segment Operator"
                description: "The Social Profiles gender to segment."
                example: "female"
          - type: "object"
            title: "Social Profiles Influence Segment"
            description: "Segment by influence rating in Social Profiles data."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "SocialInfluence"
                enum:
                - "SocialInfluence"
              field:
                type: "string"
                enum:
                - "social_influence"
                title: "Segment Field"
                description: "Segment by influence rating in Social Profiles data."
                example: "social_influence"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "greater"
                - "less"
                title: "Segment Operator"
                description: "Members who have a rating that is/not or greater/less\
                  \ than the rating provided."
                example: "greater"
              value:
                type: "number"
                title: "Segment Operator"
                description: "The Social Profiles influence rating to segment."
                example: 2
          - type: "object"
            title: "Social Profiles Social Network Segment"
            description: "Segment by social network in Social Profiles data."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "SocialNetworkMember"
                enum:
                - "SocialNetworkMember"
              field:
                type: "string"
                enum:
                - "social_network"
                title: "Segment Field"
                description: "Segment by social network in Social Profiles data."
                example: "social_network"
              op:
                type: "string"
                enum:
                - "member"
                - "notmember"
                title: "Segment Operator"
                description: "Members who are/not on a given social network."
                example: "member"
              value:
                type: "string"
                enum:
                - "twitter"
                - "facebook"
                - "linkedin"
                - "flickr"
                - "foursquare"
                - "lastfm"
                - "myspace"
                - "quora"
                - "vimeo"
                - "yelp"
                - "youtube"
                title: "Segment Operator"
                description: "The social network to segment against."
                example: "twitter"
          - type: "object"
            title: "Social Profiles Social Network Follow Segment"
            description: "Segment by social network in Social Profiles data."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "SocialNetworkFollow"
                enum:
                - "SocialNetworkFollow"
              field:
                type: "string"
                enum:
                - "social_network"
                title: "Segment Field"
                description: "Segment by social network in Social Profiles data."
                example: "social_network"
              op:
                type: "string"
                enum:
                - "follow"
                - "notfollow"
                title: "Segment Operator"
                description: "Members who are/not following a linked account on a\
                  \ given social network."
                example: "follow"
              value:
                type: "string"
                enum:
                - "twitter_follow"
                title: "Segment Operator"
                description: "The social network to segment against."
                example: "twitter_follow"
          - type: "object"
            title: "Address Merge Field Segment"
            description: "Segment by an address-type merge field."
            required:
            - "field"
            - "op"
            properties:
              condition_type:
                type: "string"
                x-value: "AddressMerge"
                enum:
                - "AddressMerge"
              field:
                type: "string"
                title: "Segment Field"
                description: "An address-type merge field to segment."
                example: "MMERGE3"
              op:
                type: "string"
                enum:
                - "contains"
                - "notcontain"
                - "blank"
                - "blank_not"
                title: "Segment Operator"
                description: "Whether the member's address merge field contains/does\
                  \ not contain a value or is/is not blank."
                example: "contains"
              value:
                type: "string"
                title: "Segment Value"
                description: "The value to segment a text merge field with."
                example: "Atlanta"
          - type: "object"
            title: "Address/Zip Merge Field Segment"
            description: "Segment by an address-type merge field within a given distance."
            required:
            - "field"
            - "op"
            - "value"
            - "extra"
            properties:
              condition_type:
                type: "string"
                x-value: "ZipMerge"
                enum:
                - "ZipMerge"
              field:
                type: "string"
                title: "Segment Field"
                description: "An address or zip-type merge field to segment."
                example: "MMERGE2"
              op:
                type: "string"
                enum:
                - "geoin"
                title: "Segment Operator"
                description: "Whether the member's address merge field is within a\
                  \ given distance from a city or zip."
                example: "geoin"
              value:
                type: "string"
                title: "Segment Value"
                description: "The distance from the city/zip."
                example: "25"
              extra:
                type: "string"
                title: "Segment Extra"
                description: "The city or the zip being used to segment against."
                example: "30318"
          - type: "object"
            title: "Birthday Merge Field Segment"
            description: "Segment by a contact's birthday."
            required:
            - "field"
            - "op"
            properties:
              condition_type:
                type: "string"
                x-value: "BirthdayMerge"
                enum:
                - "BirthdayMerge"
              field:
                type: "string"
                title: "Segment Field"
                description: "A date merge field to segment."
                example: "MMERGE4"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "blank"
                - "blank_not"
                title: "Segment Operator"
                description: "Whether the member's birthday merge information is/is\
                  \ not a certain date or is/is not blank."
                example: "is"
              value:
                type: "string"
                title: "Segment Value"
                description: "A date to segment against (mm/dd)."
                example: "01/30"
          - type: "object"
            title: "Date Merge Field Segment"
            description: "Segment by a given date merge field."
            required:
            - "field"
            - "op"
            properties:
              condition_type:
                type: "string"
                x-value: "DateMerge"
                enum:
                - "DateMerge"
              field:
                type: "string"
                title: "Segment Field"
                description: "A date merge field to segment."
                example: "MMERGE5"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "less"
                - "blank"
                - "blank_not"
                - "greater"
                title: "Segment Operator"
                description: "Whether the member's merge information is/is not, is\
                  \ greater/less than a value or is/is not blank."
                example: "is"
              value:
                type: "string"
                title: "Segment Value"
                description: "A date to segment against."
                example: "01/30/2015"
          - type: "object"
            title: "Dropdown/Radio Merge Field Segment"
            description: "An individual segment condition"
            required:
            - "field"
            - "op"
            properties:
              condition_type:
                type: "string"
                x-value: "SelectMerge"
                enum:
                - "SelectMerge"
              field:
                type: "string"
                title: "Segment Field"
                description: "A merge field to segment."
                example: "MMERGE6"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "blank"
                - "blank_not"
                - "notcontain"
                - "contains"
                title: "Segment Operator"
                description: "Whether the member's merge information is/is not a value\
                  \ or is/is not blank."
                example: "is"
              value:
                type: "string"
                title: "Segment Value"
                description: "The value to segment a text merge field with."
                example: "Second Choice"
          - type: "object"
            title: "Text or Number Merge Field Segment"
            description: "Segment by a given text or number merge field."
            required:
            - "field"
            - "op"
            properties:
              condition_type:
                type: "string"
                x-value: "TextMerge"
                enum:
                - "TextMerge"
              field:
                type: "string"
                title: "Segment Field"
                description: "A text or number merge field to segment."
                example: "MMERGE7"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "contains"
                - "notcontain"
                - "starts"
                - "ends"
                - "greater"
                - "less"
                - "blank"
                - "blank_not"
                title: "Segment Operator"
                description: "Whether the member's merge information is/is not, contains/does\
                  \ not contain, starts/ends with, or is greater/less than a value"
                example: "contains"
              value:
                type: "string"
                title: "Segment Value"
                description: "The value to segment a text or number merge field with."
                example: "Freddie's Jokes"
          - type: "object"
            title: "Email Segment"
            description: "Segment by email address."
            required:
            - "field"
            - "op"
            properties:
              condition_type:
                type: "string"
                x-value: "EmailAddress"
                enum:
                - "EmailAddress"
              field:
                type: "string"
                enum:
                - "merge0"
                - "EMAIL"
                title: "Segment Field"
                description: "Segmenting based off of a subscriber's email address."
                example: "EMAIL"
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                - "contains"
                - "notcontain"
                - "starts"
                - "ends"
                - "greater"
                - "less"
                title: "Segment Operator"
                description: "Whether the email address is/not exactly, contains/doesn't\
                  \ contain, starts/ends with a string."
              value:
                type: "string"
                title: "Segment Value"
                description: "The value to compare the email against."
                example: "urist.mcvankab@freddiesjokes.com"
          - type: "object"
            title: "Predicted Gender Segment"
            description: "Segment by predicted gender."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "PredictedGender"
                enum:
                - "PredictedGender"
              field:
                type: "string"
                enum:
                - "predicted_gender"
                title: "Segment Field"
                description: "Segment by predicted gender."
              op:
                type: "string"
                enum:
                - "is"
                - "not"
                title: "Segment Operator"
                description: "Members who are/not the exact criteria listed."
                example: "is"
              value:
                type: "string"
                enum:
                - "male"
                - "female"
                title: "Segment Operator"
                description: "The predicted gender to segment."
                example: "female"
          - type: "object"
            title: "Predicted Age Segment"
            description: "Segment by predicted age."
            required:
            - "field"
            - "op"
            - "value"
            properties:
              condition_type:
                type: "string"
                x-value: "PredictedAge"
                enum:
                - "PredictedAge"
              field:
                type: "string"
                enum:
                - "predicted_age_range"
                title: "Segment Field"
                description: "Segment by predicted age."
              op:
                type: "string"
                enum:
                - "is"
                title: "Segment Operator"
                description: "Members who are/not the exact criteria listed."
                example: "is"
              value:
                type: "string"
                enum:
                - "18-24"
                - "25-34"
                - "35-44"
                - "45-54"
                - "55-64"
                - "65+"
                title: "Segment Operator"
                description: "The predicted age to segment."
                example: "female"
          - type: "object"
            title: "New Subscribers Prebuilt Segment"
            description: "Segment by when people subscribed."
            properties:
              condition_type:
                type: "string"
                x-value: "NewSubscribers"
                enum:
                - "NewSubscribers"
              field:
                type: "string"
                enum:
                - "timestamp_opt"
                title: "Segment Field"
                description: "Segment by when people subscribed."
              op:
                type: "string"
                enum:
                - "date_within"
                title: "Segment Operator"
                description: "Whe the event took place, namely within a time frame."
              value:
                type: "string"
                title: "Segment Data"
                description: "What type of data to segment on: a specific date, a\
                  \ specific campaign, or the last campaign sent."
          x-discriminator:
            type: "string"
            propertyName: "condition_type"
    description: "The [conditions of the segment](https://mailchimp.com/help/save-and-manage-segments/).\
      \ Static and fuzzy segments don't have conditions."
  List_8:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        description: "The name of the segment."
        title: "Segment Name"
      static_segment:
        type: "array"
        description: "An array of emails to be used for a static segment. Any emails\
          \ provided that are not present on the list will be ignored. Passing an\
          \ empty array will create a static segment without any subscribers. This\
          \ field cannot be provided with the options field."
        title: "Static Segment"
        items:
          type: "string"
      options:
        $ref: "#/definitions/Conditions_1"
    title: "List"
    description: "Information about a specific list segment."
  Members to addremove tofrom a static segment:
    type: "object"
    properties:
      members_to_add:
        type: "array"
        description: "An array of emails to be used for a static segment. Any emails\
          \ provided that are not present on the list will be ignored. A maximum of\
          \ 500 members can be sent."
        title: "Members to add to the static segment"
        items:
          type: "string"
      members_to_remove:
        type: "array"
        description: "An array of emails to be used for a static segment. Any emails\
          \ provided that are not present on the list will be ignored. A maximum of\
          \ 500 members can be sent."
        title: "Members to remove from the static segment"
        items:
          type: "string"
    title: "Members to add/remove to/from a static segment"
    description: "Members to add/remove to/from a static segment"
  Batch addremove List members tofrom static segment_errors:
    type: "object"
    properties:
      email_addresses:
        type: "array"
        description: "Email addresses added to the static segment or removed"
        title: "Email addresses added to the static segment or removed"
        items:
          type: "string"
      error:
        type: "string"
        description: "The error message indicating why the email addresses could not\
          \ be added or updated."
        title: "Error message"
    example:
      email_addresses:
      - "email_addresses"
      - "email_addresses"
      error: "error"
  Batch addremove List members tofrom static segment:
    type: "object"
    properties:
      members_added:
        type: "array"
        description: "An array of objects, each representing a new member that was\
          \ added to the static segment."
        title: "Members Added"
        items:
          $ref: "#/definitions/List Members"
      members_removed:
        type: "array"
        description: "An array of objects, each representing an existing list member\
          \ that got deleted from the static segment."
        title: "Members Removed"
        items:
          $ref: "#/definitions/List Members"
      errors:
        type: "array"
        description: "An array of objects, each representing an array of email addresses\
          \ that could not be added to the segment or removed and an error message\
          \ providing more details."
        title: "Errors"
        items:
          $ref: "#/definitions/Batch addremove List members tofrom static segment_errors"
      total_added:
        type: "integer"
        example: 42
        description: "The total number of items matching the query, irrespective of\
          \ pagination."
        title: "Item Count"
      total_removed:
        type: "integer"
        example: 42
        description: "The total number of items matching the query, irrespective of\
          \ pagination."
        title: "Item Count"
      error_count:
        type: "integer"
        example: 42
        description: "The total number of items matching the query, irrespective of\
          \ pagination."
        title: "Item Count"
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "Batch add/remove List members to/from static segment"
    example:
      members_removed:
      - email_type: "email_type"
        list_id: "list_id"
        timestamp_opt: "2000-01-23T04:56:07.000+00:00"
        last_note:
          note_id: 9
          note: "note"
          created_at: "2000-01-23T04:56:07.000+00:00"
          created_by: "created_by"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        merge_fields:
          key: ""
        timestamp_signup: "2000-01-23T04:56:07.000+00:00"
        ip_signup: "ip_signup"
        member_rating: 1
        language: "language"
        tags:
        - name: "name"
          id: 2
        - name: "name"
          id: 2
        unique_email_id: "unique_email_id"
        email_address: "email_address"
        email_client: "email_client"
        stats:
          avg_click_rate: 6.02745618307040320615897144307382404804229736328125
          avg_open_rate: 0.80082819046101150206595775671303272247314453125
        tags_count: 3
        ip_opt: "ip_opt"
        location:
          country_code: "country_code"
          dstoff: 7
          timezone: "timezone"
          latitude: 5.962133916683182377482808078639209270477294921875
          gmtoff: 2
          longitude: 5.63737665663332876420099637471139430999755859375
        id: "id"
        interests:
          key: true
        vip: true
        status: "subscribed"
        last_changed: "2000-01-23T04:56:07.000+00:00"
      - email_type: "email_type"
        list_id: "list_id"
        timestamp_opt: "2000-01-23T04:56:07.000+00:00"
        last_note:
          note_id: 9
          note: "note"
          created_at: "2000-01-23T04:56:07.000+00:00"
          created_by: "created_by"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        merge_fields:
          key: ""
        timestamp_signup: "2000-01-23T04:56:07.000+00:00"
        ip_signup: "ip_signup"
        member_rating: 1
        language: "language"
        tags:
        - name: "name"
          id: 2
        - name: "name"
          id: 2
        unique_email_id: "unique_email_id"
        email_address: "email_address"
        email_client: "email_client"
        stats:
          avg_click_rate: 6.02745618307040320615897144307382404804229736328125
          avg_open_rate: 0.80082819046101150206595775671303272247314453125
        tags_count: 3
        ip_opt: "ip_opt"
        location:
          country_code: "country_code"
          dstoff: 7
          timezone: "timezone"
          latitude: 5.962133916683182377482808078639209270477294921875
          gmtoff: 2
          longitude: 5.63737665663332876420099637471139430999755859375
        id: "id"
        interests:
          key: true
        vip: true
        status: "subscribed"
        last_changed: "2000-01-23T04:56:07.000+00:00"
      total_added: 42
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      members_added:
      - email_type: "email_type"
        list_id: "list_id"
        timestamp_opt: "2000-01-23T04:56:07.000+00:00"
        last_note:
          note_id: 9
          note: "note"
          created_at: "2000-01-23T04:56:07.000+00:00"
          created_by: "created_by"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        merge_fields:
          key: ""
        timestamp_signup: "2000-01-23T04:56:07.000+00:00"
        ip_signup: "ip_signup"
        member_rating: 1
        language: "language"
        tags:
        - name: "name"
          id: 2
        - name: "name"
          id: 2
        unique_email_id: "unique_email_id"
        email_address: "email_address"
        email_client: "email_client"
        stats:
          avg_click_rate: 6.02745618307040320615897144307382404804229736328125
          avg_open_rate: 0.80082819046101150206595775671303272247314453125
        tags_count: 3
        ip_opt: "ip_opt"
        location:
          country_code: "country_code"
          dstoff: 7
          timezone: "timezone"
          latitude: 5.962133916683182377482808078639209270477294921875
          gmtoff: 2
          longitude: 5.63737665663332876420099637471139430999755859375
        id: "id"
        interests:
          key: true
        vip: true
        status: "subscribed"
        last_changed: "2000-01-23T04:56:07.000+00:00"
      - email_type: "email_type"
        list_id: "list_id"
        timestamp_opt: "2000-01-23T04:56:07.000+00:00"
        last_note:
          note_id: 9
          note: "note"
          created_at: "2000-01-23T04:56:07.000+00:00"
          created_by: "created_by"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        merge_fields:
          key: ""
        timestamp_signup: "2000-01-23T04:56:07.000+00:00"
        ip_signup: "ip_signup"
        member_rating: 1
        language: "language"
        tags:
        - name: "name"
          id: 2
        - name: "name"
          id: 2
        unique_email_id: "unique_email_id"
        email_address: "email_address"
        email_client: "email_client"
        stats:
          avg_click_rate: 6.02745618307040320615897144307382404804229736328125
          avg_open_rate: 0.80082819046101150206595775671303272247314453125
        tags_count: 3
        ip_opt: "ip_opt"
        location:
          country_code: "country_code"
          dstoff: 7
          timezone: "timezone"
          latitude: 5.962133916683182377482808078639209270477294921875
          gmtoff: 2
          longitude: 5.63737665663332876420099637471139430999755859375
        id: "id"
        interests:
          key: true
        vip: true
        status: "subscribed"
        last_changed: "2000-01-23T04:56:07.000+00:00"
      total_removed: 42
      error_count: 42
      errors:
      - email_addresses:
        - "email_addresses"
        - "email_addresses"
        error: "error"
      - email_addresses:
        - "email_addresses"
        - "email_addresses"
        error: "error"
  Conditions_2:
    type: "object"
    properties:
      match:
        type: "string"
        description: "Match type."
        title: "Match"
        enum:
        - "any"
        - "all"
      conditions:
        type: "array"
        description: "An array of segment conditions."
        title: "Segment Conditions"
        items:
          type: "array"
          description: "Segment match conditions. There are multiple possible types,\
            \ see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas)."
          title: "Segment Type"
          items:
            x-oneOf:
            - type: "object"
              title: "Aim Segment"
              description: "Segment by interaction with a specific campaign."
              properties:
                condition_type:
                  type: "string"
                  x-value: "Aim"
                  enum:
                  - "Aim"
                field:
                  type: "string"
                  enum:
                  - "aim"
                  title: "Segment Field"
                  description: "Segment by interaction with a specific campaign."
                  example: "aim"
                op:
                  type: "string"
                  enum:
                  - "open"
                  - "click"
                  - "sent"
                  - "noopen"
                  - "noclick"
                  - "nosent"
                  title: "Segment Operator"
                  description: "The status of the member with regard to their campaign\
                    \ interaction. One of the following: opened, clicked, was sent,\
                    \ didn't open, didn't click, or was not sent."
                  example: "open"
                value:
                  type: "string"
                  title: "Segment Data"
                  description: "Either the web id value for a specific campaign or\
                    \ 'any' to account for subscribers who have/have not interacted\
                    \ with any campaigns."
                  example: "any"
            - type: "object"
              title: "Automation Segment"
              description: "Segment by interaction with an Automation workflow."
              required:
              - "field"
              - "op"
              - "value"
              properties:
                condition_type:
                  type: "string"
                  x-value: "Automation"
                  enum:
                  - "Automation"
                field:
                  type: "string"
                  enum:
                  - "automation"
                  title: "Segment Field"
                  description: "Segment by interaction with an Automation workflow."
                  example: "automation"
                op:
                  type: "string"
                  enum:
                  - "started"
                  - "completed"
                  - "not_started"
                  - "not_completed"
                  title: "Segment Operator"
                  description: "The status of the member with regard to the automation\
                    \ workflow. One of the following: has started the workflow, has\
                    \ completed the workflow, has not started the workflow, or has\
                    \ not completed the workflow."
                  example: "started"
                value:
                  type: "string"
                  title: "Segment Data"
                  description: "The web id for the automation workflow to segment\
                    \ against."
                  example: "2135217"
            - type: "object"
              title: "Poll Activity Segment"
              description: "Segment by poll activity."
              required:
              - "field"
              - "op"
              - "value"
              properties:
                condition_type:
                  type: "string"
                  x-value: "CampaignPoll"
                  enum:
                  - "CampaignPoll"
                field:
                  type: "string"
                  enum:
                  - "poll"
                  title: "Segment Field"
                  description: "Segment by poll activity."
                  example: "poll"
                op:
                  type: "string"
                  enum:
                  - "member"
                  - "notmember"
                  title: "Segment Operator"
                  description: "Members have/have not interacted with a specific poll\
                    \ in a Mailchimp email."
                  example: "member"
                value:
                  type: "number"
                  title: "Segment Operator"
                  description: "The id for the poll."
                  example: 409
            - type: "object"
              title: "Conversation Segment"
              description: "Segment by interaction with a campaign via Conversations."
              required:
              - "field"
              - "op"
              - "value"
              properties:
                condition_type:
                  type: "string"
                  x-value: "Conversation"
                  enum:
                  - "Conversation"
                field:
                  type: "string"
                  enum:
                  - "conversation"
                  title: "Segment Field"
                  description: "Segment by interaction with a campaign via Conversations."
                  example: "conversation"
                op:
                  type: "string"
                  enum:
                  - "member"
                  - "notmember"
                  title: "Segment Operator"
                  description: "The status of a member's interaction with a conversation.\
                    \ One of the following: has replied or has not replied."
                  example: "member"
                value:
                  type: "string"
                  title: "Segment Data"
                  description: "The web id value for a specific campaign or 'any'\
                    \ to account for subscribers who have/have not interacted with\
                    \ any campaigns."
                  example: "any"
            - type: "object"
              title: "Date Segment"
              description: "Segment by a specific date field."
              required:
              - "field"
              - "op"
              - "value"
              properties:
                condition_type:
                  type: "string"
                  x-value: "Date"
                  enum:
                  - "Date"
                field:
                  type: "string"
                  enum:
                  - "timestamp_opt"
                  - "info_changed"
                  - "ecomm_date"
                  title: "Segment Field"
                  description: "The type of date field to segment on: The opt-in time\
                    \ for a signup, the date the subscriber was last updated, or the\
                    \ date of their last ecomm purchase."
                  example: "timestamp_opt"
                op:
                  type: "string"
                  enum:
                  - "greater"
                  - "less"
                  - "is"
                  - "not"
                  - "blank"
                  - "blank_not"
                  - "within"
                  - "notwithin"
                  title: "Segment Operator"
                  description: "When the event took place:  Before, after, is a specific\
                    \ date, is not a specific date, is blank, or is not blank."
                  example: "greater"
                value:
                  type: "string"
                  title: "Segment Data"
                  description: "What type of data to segment on: a specific date,\
                    \ a specific campaign, or the last campaign sent."
                  example: "date"
                extra:
                  type: "string"
                  title: "Segment Extra Value"
                  description: "When segmenting on 'date' or 'campaign', the date\
                    \ for the segment formatted as YYYY-MM-DD or the web id for the\
                    \ campaign."
                  example: "2015-01-30"
            - type: "object"
              title: "Email Client Segment"
              description: "Segment by use of a particular email client."
              required:
              - "field"
              - "op"
              - "value"
              properties:
                condition_type:
                  type: "string"
                  x-value: "EmailClient"
                  enum:
                  - "EmailClient"
                field:
                  type: "string"
                  enum:
                  - "email_client"
                  title: "Segment Field"
                  description: "Segment by use of a particular email client."
                  example: "email_client"
                op:
                  type: "string"
                  enum:
                  - "client_is"
                  - "client_not"
                  title: "Segment Operator"
                  description: "The operation to determine whether we select clients\
                    \ that match the value, or clients that do not match the value."
                  example: "client_is"
                value:
                  type: "string"
                  title: "Segment Data"
                  description: "The name of the email client."
                  example: "Gmail"
            - type: "object"
              title: "Language Segment"
              description: "Segment by language."
              required:
              - "field"
              - "op"
              - "value"
              properties:
                condition_type:
                  type: "string"
                  x-value: "Language"
                  enum:
                  - "Language"
                field:
                  type: "string"
                  enum:
                  - "language"
                  title: "Segment Field"
                  description: "Segmenting based off of a subscriber's language."
                  example: "language"
                op:
                  type: "string"
                  enum:
                  - "is"
                  - "not"
                  title: "Segment Operator"
                  description: "Whether the member's language is or is not set to\
                    \ a specific language."
                  example: "is"
                value:
                  type: "string"
                  title: "Segment Data"
                  description: "A two-letter language identifier."
                  example: "en"
            - type: "object"
              title: "Member Rating Segment"
              description: "Segment by member rating."
              required:
              - "field"
              - "op"
              - "value"
              properties:
                condition_type:
                  type: "string"
                  x-value: "MemberRating"
                  enum:
                  - "MemberRating"
                field:
                  type: "string"
                  enum:
                  - "rating"
                  title: "Segment Field"
                  description: "Segment by member rating."
                  example: "rating"
                op:
                  type: "string"
                  enum:
                  - "is"
                  - "not"
                  - "greater"
                  - "less"
                  title: "Segment Operator"
                  description: "Members who have have a rating that is/not exactly\
                    \ a given number or members who have a rating greater/less than\
                    \ a given number."
                  example: "greater"
                value:
                  type: "number"
                  title: "Segment Operator"
                  description: "The star rating number to segment against."
                  example: 4
            - type: "object"
              title: "Signup Source Segment"
              description: "Segment by signup source."
              required:
              - "field"
              - "condition_type"
              - "op"
              properties:
                condition_type:
                  type: "string"
                  enum:
                  - "SignupSource"
                  x-value: "SignupSource"
                  title: "Type"
                field:
                  type: "string"
                  enum:
                  - "source"
                  title: "Segment Field"
                  example: "source"
                op:
                  type: "string"
                  enum:
                  - "source_is"
                  - "source_not"
                  title: "Segment Operator"
                  description: "Whether the member's signup source was/was not a particular\
                    \ value."
                  example: "source_is"
                value:
                  type: "string"
                  title: "Segment Data"
                  description: "The signup source."
                  example: "List Import"
            - type: "object"
              title: "Survey Monkey Segment"
              description: "Segment by interaction with a SurveyMonkey survey."
              required:
              - "field"
              - "op"
              - "value"
              properties:
                condition_type:
                  type: "string"
                  x-value: "SurveyMonkey"
                  enum:
                  - "SurveyMonkey"
                field:
                  type: "string"
                  enum:
                  - "survey_monkey"
                  title: "Segment Field"
                  description: "Segment by interaction with a SurveyMonkey survey."
                  example: "survey_monkey"
                op:
                  type: "string"
                  enum:
                  - "started"
                  - "completed"
                  - "not_started"
                  - "not_completed"
                  title: "Segment Operator"
                  description: "The status of the member with regard to the survey.One\
                    \ of the following: has started the survey, has completed the\
                    \ survey, has not started the survey, or has not completed the\
                    \ survey."
                  example: "started"
                value:
                  type: "string"
                  title: "Survey ID"
                  description: "The unique ID of the survey monkey survey."
                  example: "32179586"
            - type: "object"
              title: "VIP Segment"
              description: "Segment by VIP status."
              required:
              - "field"
              - "op"
              properties:
                condition_type:
                  type: "string"
                  x-value: "VIP"
                  enum:
                  - "VIP"
                field:
                  type: "string"
                  enum:
                  - "gmonkey"
                  title: "Segment Field"
                  description: "Segment by VIP status."
                  example: "gmonkey"
                op:
                  type: "string"
                  enum:
                  - "member"
                  - "notmember"
                  title: "Segment Operator"
                  description: "Whether the member is or is not marked as VIP."
                  example: "member"
            - type: "object"
              title: "Interests Segment"
              description: "Segment by an interest group merge field."
              properties:
                condition_type:
                  type: "string"
                  x-value: "Interests"
                  enum:
                  - "Interests"
                field:
                  type: "string"
                  title: "Segment Field"
                  description: "Segmenting based on interest group information. This\
                    \ should start with 'interests-' followed by the grouping id.\
                    \ Ex. 'interests-123'."
                  example: "interests-123"
                op:
                  type: "string"
                  enum:
                  - "interestcontains"
                  - "interestcontainsall"
                  - "interestnotcontains"
                  title: "Segment Operator"
                  description: "Whether the member is a part of one, all, or none\
                    \ of the groups."
                  example: "interestcontains"
                value:
                  type: "array"
                  title: "Segment Value"
                  description: "An array containing strings, each representing a group\
                    \ id."
                  items:
                    type: "string"
                    example:
                    - "44401"
                    - "44405"
                    - "44409"
            - type: "object"
              title: "Ecommerce Category Segment"
              description: "Segment by purchases in specific items or categories."
              properties:
                condition_type:
                  type: "string"
                  x-value: "EcommCategory"
                  enum:
                  - "EcommCategory"
                field:
                  type: "string"
                  enum:
                  - "ecomm_cat"
                  - "ecomm_prod"
                  title: "Segment Field"
                  description: "Segment by purchases in specific items or categories."
                  example: "ecomm_cat"
                op:
                  type: "string"
                  enum:
                  - "is"
                  - "not"
                  - "contains"
                  - "notcontain"
                  - "starts"
                  - "ends"
                  title: "Segment Operator"
                  description: "A member who has purchased from a category/specific\
                    \ item that is/is not a specific name, where the category/item\
                    \ name contains/doesn't contain a specific phrase or string, or\
                    \ a category/item name that starts/ends with a string."
                  example: "is"
                value:
                  type: "string"
                  title: "Segment Data"
                  description: "The ecommerce category/item information."
                  example: "Product"
            - type: "object"
              title: "Ecommerce Number Segment"
              description: "Segment by average spent total, number of orders, total\
                \ number of products purchased, or average number of products per\
                \ order."
              required:
              - "field"
              - "op"
              - "value"
              properties:
                condition_type:
                  type: "string"
                  x-value: "EcommNumber"
                  enum:
                  - "EcommNumber"
                field:
                  type: "string"
                  enum:
                  - "ecomm_spent_avg"
                  - "ecomm_orders"
                  - "ecomm_prod_all"
                  - "ecomm_avg_ord"
                  title: "Segment Field"
                  description: "Segment by average spent total, number of orders,\
                    \ total number of products purchased, or average number of products\
                    \ per order."
                  example: "ecomm_orders"
                op:
                  type: "string"
                  enum:
                  - "is"
                  - "not"
                  - "greater"
                  - "less"
                  title: "Segment Operator"
                  description: "Members who have spent exactly, have not spent exactly,\
                    \ spent more, or spent less than the segment value."
                  example: "greater"
                value:
                  type: "number"
                  title: "Segment Operator"
                  description: "Members who have spent exactly, have not spent exactly,\
                    \ spent more, or spent less than this amount."
                  example: 42
            - type: "object"
              title: "Ecommerce Purchased Segment"
              description: "Segment by whether someone has purchased anything."
              properties:
                condition_type:
                  type: "string"
                  x-value: "EcommPurchased"
                  enum:
                  - "EcommPurchased"
                field:
                  type: "string"
                  enum:
                  - "ecomm_purchased"
                  title: "Segment Field"
                  description: "Segment by whether someone has purchased anything."
                  example: "ecomm_purchased"
                op:
                  type: "string"
                  enum:
                  - "member"
                  - "notmember"
                  title: "Segment Operator"
                  description: "Members who have have ('member') or have not ('notmember')\
                    \ purchased."
                  example: "member"
            - type: "object"
              title: "Ecommerce Spent Segment"
              description: "Segment by amount spent on a single order or across all\
                \ orders."
              properties:
                condition_type:
                  type: "string"
                  x-value: "EcommSpent"
                  enum:
                  - "EcommSpent"
                field:
                  type: "string"
                  enum:
                  - "ecomm_spent_one"
                  - "ecomm_spent_all"
                  title: "Segment Field"
                  description: "Segment by amount spent on a single order or across\
                    \ all orders."
                  example: "ecomm_spent_one"
                op:
                  type: "string"
                  enum:
                  - "greater"
                  - "less"
                  title: "Segment Operator"
                  description: "Members who have spent 'more' or 'less' than then\
                    \ specified value."
                  example: "greater"
                value:
                  type: "integer"
                  title: "Segment Data"
                  description: "The total amount a member spent."
                  example: 42
            - type: "object"
              title: "Ecommerce Purchased Store Segment"
              description: "Segment by purchases from a specific store."
              properties:
                condition_type:
                  type: "string"
                  x-value: "EcommStore"
                  enum:
                  - "EcommStore"
                field:
                  type: "string"
                  enum:
                  - "ecomm_store"
                  title: "Segment Field"
                  description: "Segment by purchases from a specific store."
                  example: "ecomm_store"
                op:
                  type: "string"
                  enum:
                  - "is"
                  - "not"
                  title: "Segment Operator"
                  description: "Members who have or have not purchased from a specific\
                    \ store."
                  example: "is"
                value:
                  type: "string"
                  title: "Segment Operator"
                  description: "The store id to segment against."
                  example: "289"
            - type: "object"
              title: "Goal Activity Segment"
              description: "Segment by Goal activity."
              required:
              - "field"
              - "op"
              - "value"
              properties:
                condition_type:
                  type: "string"
                  x-value: "GoalActivity"
                  enum:
                  - "GoalActivity"
                field:
                  type: "string"
                  enum:
                  - "goal"
                  title: "Segment Field"
                  description: "Segment by Goal activity."
                  example: "goal"
                op:
                  type: "string"
                  enum:
                  - "is"
                  - "goal_not"
                  - "contains"
                  - "goal_notcontain"
                  - "starts"
                  - "ends"
                  title: "Segment Operator"
                  description: "Whether the website URL is/not exactly, contains/doesn't\
                    \ contain, starts with/ends with a string."
                  example: "is"
                value:
                  type: "string"
                  title: "Segment Value"
                  description: "The URL to check Goal activity against."
            - type: "object"
              title: "Goal Timestamp Segment"
              description: "Segment by most recent interaction with a website."
              required:
              - "field"
              - "op"
              - "value"
              properties:
                condition_type:
                  type: "string"
                  x-value: "GoalTimestamp"
                  enum:
                  - "GoalTimestamp"
                field:
                  type: "string"
                  enum:
                  - "goal_last_visited"
                  title: "Segment Field"
                  description: "Segment by most recent interaction with a website."
                  example: "goal_last_visited"
                op:
                  type: "string"
                  enum:
                  - "greater"
                  - "less"
                  - "is"
                  title: "Segment Operator"
                  description: "Whether the website activity happened after, before,\
                    \ or at a given timestamp."
                  example: "greater"
                value:
                  type: "string"
                  title: "Segment Value"
                  description: "The date to check Goal activity against."
                  example: "2015-07-20 19:45:21"
            - type: "object"
              title: "Similar Subscribers Segment Member Segment"
              description: "Segment by similar subscribers."
              required:
              - "field"
              - "op"
              - "value"
              properties:
                condition_type:
                  type: "string"
                  x-value: "FuzzySegment"
                  enum:
                  - "FuzzySegment"
                field:
                  type: "string"
                  enum:
                  - "fuzzy_segment"
                  title: "Segment Field"
                  description: "Segment by similar subscribers."
                  example: "fuzzy_segment"
                op:
                  type: "string"
                  enum:
                  - "fuzzy_is"
                  - "fuzzy_not"
                  title: "Segment Operator"
                  description: "Members who are/are not apart of a 'similar subscribers'\
                    \ segment."
                  example: "fuzzy_is"
                value:
                  type: "number"
                  title: "Segment Operator"
                  description: "The id for the 'similar subscribers' segment."
                  example: 48433
            - type: "object"
              title: "Static Segment Member Segment"
              description: "Segment by a given static segment."
              required:
              - "field"
              - "op"
              - "value"
              properties:
                condition_type:
                  type: "string"
                  x-value: "StaticSegment"
                  enum:
                  - "StaticSegment"
                field:
                  type: "string"
                  enum:
                  - "static_segment"
                  title: "Segment Field"
                  description: "Segment by a given static segment."
                  example: "static_segment"
                op:
                  type: "string"
                  enum:
                  - "static_is"
                  - "static_not"
                  title: "Segment Operator"
                  description: "Members who are/are not apart of a static segment."
                  example: "static_is"
                value:
                  type: "number"
                  title: "Segment Operator"
                  description: "The id for the static segment."
                  example: 48433
            - type: "object"
              title: "Location-Based Segment"
              description: "Segment by a specific country or US state."
              required:
              - "field"
              - "op"
              - "value"
              properties:
                condition_type:
                  type: "string"
                  x-value: "IPGeoCountryState"
                  enum:
                  - "IPGeoCountryState"
                field:
                  type: "string"
                  enum:
                  - "ipgeo"
                  title: "Segment Field"
                  description: "Segmenting subscribers who are within a specific location."
                  example: "ipgeo"
                op:
                  type: "string"
                  enum:
                  - "ipgeocountry"
                  - "ipgeonotcountry"
                  - "ipgeostate"
                  - "ipgeonotstate"
                  title: "Segment Operator"
                  description: "Segment members who are within a specific country\
                    \ or US state."
                  example: "ipgeocountry"
                value:
                  type: "string"
                  title: "Segment Data"
                  description: "The two-letter country code or US state abbreviation."
                  example: "US"
            - type: "object"
              title: "Geolocation Segment"
              description: "Segment by a specific geographic region."
              required:
              - "field"
              - "op"
              - "value"
              - "addr"
              - "lat"
              - "lng"
              properties:
                condition_type:
                  type: "string"
                  x-value: "IPGeoIn"
                  enum:
                  - "IPGeoIn"
                field:
                  type: "string"
                  enum:
                  - "ipgeo"
                  title: "Segment Field"
                  description: "Segmenting subscribers who are within a specific location."
                  example: "ipgeo"
                op:
                  type: "string"
                  enum:
                  - "ipgeoin"
                  - "ipgeonotin"
                  title: "Segment Operator"
                  description: "Segment members who are within a specific geographic\
                    \ region."
                  example: "ipgeoin"
                value:
                  type: "integer"
                  title: "Segment Data"
                  description: "The radius of the target location."
                  example: 42
                addr:
                  type: "string"
                  title: "Segment Location Address"
                  description: "The address of the target location."
                  example: "Atlanta, GA, USA"
                lat:
                  type: "string"
                  title: "Segment Location Latitude"
                  description: "The latitude of the target location."
                  example: "33.7489954"
                lng:
                  type: "string"
                  title: "Segment Location Longitude"
                  description: "The longitude of the target location."
                  example: "-84.3879824"
            - type: "object"
              title: "US Zip Code Segment"
              description: "Segment by a specific US ZIP code."
              required:
              - "field"
              - "op"
              - "value"
              - "extra"
              properties:
                condition_type:
                  type: "string"
                  x-value: "IPGeoInZip"
                  enum:
                  - "IPGeoInZip"
                field:
                  type: "string"
                  enum:
                  - "ipgeo"
                  title: "Segment Field"
                  description: "Segmenting subscribers who are within a specific location."
                  example: "ipgeo"
                op:
                  type: "string"
                  enum:
                  - "ipgeoinzip"
                  title: "Segment Operator"
                  description: "Segment members who are within a specific US zip code."
                  example: "ipgeoinzip"
                value:
                  type: "integer"
                  title: "Segment Data"
                  description: "The radius of the target location."
                  example: 25
                extra:
                  type: "integer"
                  title: "Extra Data"
                  description: "The zip code to segment against."
                  example: 30318
            - type: "object"
              title: "Unknown Location-Based Segment"
              description: "Segment members whose location information is unknown."
              required:
              - "field"
              - "op"
              properties:
                condition_type:
                  type: "string"
                  x-value: "IPGeoUnknown"
                  enum:
                  - "IPGeoUnknown"
                field:
                  type: "string"
                  enum:
                  - "ipgeo"
                  title: "Segment Field"
                  description: "Segmenting subscribers who are within a specific location."
                  example: "ipgeo"
                op:
                  type: "string"
                  enum:
                  - "ipgeounknown"
                  title: "Segment Operator"
                  description: "Segment members for which location information is\
                    \ unknown."
                  example: "ipgeounknown"
            - type: "object"
              title: "Zip Code Location-Based Segment"
              description: "Segment by a specific US ZIP code."
              required:
              - "field"
              - "op"
              - "value"
              properties:
                condition_type:
                  type: "string"
                  x-value: "IPGeoZip"
                  enum:
                  - "IPGeoZip"
                field:
                  type: "string"
                  enum:
                  - "ipgeo"
                  title: "Segment Field"
                  description: "Segmenting subscribers who are within a specific location."
                  example: "ipgeo"
                op:
                  type: "string"
                  enum:
                  - "ipgeoiszip"
                  - "ipgeonotzip"
                  title: "Segment Operator"
                  description: "Segment members who are/are not within a specific\
                    \ US zip code."
                  example: "ipgeonotzip"
                value:
                  type: "integer"
                  title: "Segment Data"
                  description: "The 5-digit zip code."
                  example: 30318
            - type: "object"
              title: "Social Profiles Age Segment"
              description: "Segment by age ranges in Social Profiles data."
              required:
              - "field"
              - "op"
              - "value"
              properties:
                condition_type:
                  type: "string"
                  x-value: "SocialAge"
                  enum:
                  - "SocialAge"
                field:
                  type: "string"
                  enum:
                  - "social_age"
                  title: "Segment Field"
                  description: "Segment by age ranges in Social Profiles data."
                  example: "social_age"
                op:
                  type: "string"
                  enum:
                  - "is"
                  - "not"
                  title: "Segment Operator"
                  description: "Members who are/not the exact criteria listed."
                  example: "is"
                value:
                  type: "string"
                  enum:
                  - "18-24"
                  - "25-34"
                  - "35-54"
                  - "55+"
                  title: "Segment Operator"
                  description: "The age range to segment."
                  example: "35-54"
            - type: "object"
              title: "Social Profiles Gender Segment"
              description: "Segment by listed gender in Social Profiles data."
              required:
              - "field"
              - "op"
              - "value"
              properties:
                condition_type:
                  type: "string"
                  x-value: "SocialGender"
                  enum:
                  - "SocialGender"
                field:
                  type: "string"
                  enum:
                  - "social_gender"
                  title: "Segment Field"
                  description: "Segment by listed gender in Social Profiles data."
                  example: "social_gender"
                op:
                  type: "string"
                  enum:
                  - "is"
                  - "not"
                  title: "Segment Operator"
                  description: "Members who are/not the exact criteria listed."
                  example: "is"
                value:
                  type: "string"
                  enum:
                  - "male"
                  - "female"
                  title: "Segment Operator"
                  description: "The Social Profiles gender to segment."
                  example: "female"
            - type: "object"
              title: "Social Profiles Influence Segment"
              description: "Segment by influence rating in Social Profiles data."
              required:
              - "field"
              - "op"
              - "value"
              properties:
                condition_type:
                  type: "string"
                  x-value: "SocialInfluence"
                  enum:
                  - "SocialInfluence"
                field:
                  type: "string"
                  enum:
                  - "social_influence"
                  title: "Segment Field"
                  description: "Segment by influence rating in Social Profiles data."
                  example: "social_influence"
                op:
                  type: "string"
                  enum:
                  - "is"
                  - "not"
                  - "greater"
                  - "less"
                  title: "Segment Operator"
                  description: "Members who have a rating that is/not or greater/less\
                    \ than the rating provided."
                  example: "greater"
                value:
                  type: "number"
                  title: "Segment Operator"
                  description: "The Social Profiles influence rating to segment."
                  example: 2
            - type: "object"
              title: "Social Profiles Social Network Segment"
              description: "Segment by social network in Social Profiles data."
              required:
              - "field"
              - "op"
              - "value"
              properties:
                condition_type:
                  type: "string"
                  x-value: "SocialNetworkMember"
                  enum:
                  - "SocialNetworkMember"
                field:
                  type: "string"
                  enum:
                  - "social_network"
                  title: "Segment Field"
                  description: "Segment by social network in Social Profiles data."
                  example: "social_network"
                op:
                  type: "string"
                  enum:
                  - "member"
                  - "notmember"
                  title: "Segment Operator"
                  description: "Members who are/not on a given social network."
                  example: "member"
                value:
                  type: "string"
                  enum:
                  - "twitter"
                  - "facebook"
                  - "linkedin"
                  - "flickr"
                  - "foursquare"
                  - "lastfm"
                  - "myspace"
                  - "quora"
                  - "vimeo"
                  - "yelp"
                  - "youtube"
                  title: "Segment Operator"
                  description: "The social network to segment against."
                  example: "twitter"
            - type: "object"
              title: "Social Profiles Social Network Follow Segment"
              description: "Segment by social network in Social Profiles data."
              required:
              - "field"
              - "op"
              - "value"
              properties:
                condition_type:
                  type: "string"
                  x-value: "SocialNetworkFollow"
                  enum:
                  - "SocialNetworkFollow"
                field:
                  type: "string"
                  enum:
                  - "social_network"
                  title: "Segment Field"
                  description: "Segment by social network in Social Profiles data."
                  example: "social_network"
                op:
                  type: "string"
                  enum:
                  - "follow"
                  - "notfollow"
                  title: "Segment Operator"
                  description: "Members who are/not following a linked account on\
                    \ a given social network."
                  example: "follow"
                value:
                  type: "string"
                  enum:
                  - "twitter_follow"
                  title: "Segment Operator"
                  description: "The social network to segment against."
                  example: "twitter_follow"
            - type: "object"
              title: "Address Merge Field Segment"
              description: "Segment by an address-type merge field."
              required:
              - "field"
              - "op"
              properties:
                condition_type:
                  type: "string"
                  x-value: "AddressMerge"
                  enum:
                  - "AddressMerge"
                field:
                  type: "string"
                  title: "Segment Field"
                  description: "An address-type merge field to segment."
                  example: "MMERGE3"
                op:
                  type: "string"
                  enum:
                  - "contains"
                  - "notcontain"
                  - "blank"
                  - "blank_not"
                  title: "Segment Operator"
                  description: "Whether the member's address merge field contains/does\
                    \ not contain a value or is/is not blank."
                  example: "contains"
                value:
                  type: "string"
                  title: "Segment Value"
                  description: "The value to segment a text merge field with."
                  example: "Atlanta"
            - type: "object"
              title: "Address/Zip Merge Field Segment"
              description: "Segment by an address-type merge field within a given\
                \ distance."
              required:
              - "field"
              - "op"
              - "value"
              - "extra"
              properties:
                condition_type:
                  type: "string"
                  x-value: "ZipMerge"
                  enum:
                  - "ZipMerge"
                field:
                  type: "string"
                  title: "Segment Field"
                  description: "An address or zip-type merge field to segment."
                  example: "MMERGE2"
                op:
                  type: "string"
                  enum:
                  - "geoin"
                  title: "Segment Operator"
                  description: "Whether the member's address merge field is within\
                    \ a given distance from a city or zip."
                  example: "geoin"
                value:
                  type: "string"
                  title: "Segment Value"
                  description: "The distance from the city/zip."
                  example: "25"
                extra:
                  type: "string"
                  title: "Segment Extra"
                  description: "The city or the zip being used to segment against."
                  example: "30318"
            - type: "object"
              title: "Birthday Merge Field Segment"
              description: "Segment by a contact's birthday."
              required:
              - "field"
              - "op"
              properties:
                condition_type:
                  type: "string"
                  x-value: "BirthdayMerge"
                  enum:
                  - "BirthdayMerge"
                field:
                  type: "string"
                  title: "Segment Field"
                  description: "A date merge field to segment."
                  example: "MMERGE4"
                op:
                  type: "string"
                  enum:
                  - "is"
                  - "not"
                  - "blank"
                  - "blank_not"
                  title: "Segment Operator"
                  description: "Whether the member's birthday merge information is/is\
                    \ not a certain date or is/is not blank."
                  example: "is"
                value:
                  type: "string"
                  title: "Segment Value"
                  description: "A date to segment against (mm/dd)."
                  example: "01/30"
            - type: "object"
              title: "Date Merge Field Segment"
              description: "Segment by a given date merge field."
              required:
              - "field"
              - "op"
              properties:
                condition_type:
                  type: "string"
                  x-value: "DateMerge"
                  enum:
                  - "DateMerge"
                field:
                  type: "string"
                  title: "Segment Field"
                  description: "A date merge field to segment."
                  example: "MMERGE5"
                op:
                  type: "string"
                  enum:
                  - "is"
                  - "not"
                  - "less"
                  - "blank"
                  - "blank_not"
                  - "greater"
                  title: "Segment Operator"
                  description: "Whether the member's merge information is/is not,\
                    \ is greater/less than a value or is/is not blank."
                  example: "is"
                value:
                  type: "string"
                  title: "Segment Value"
                  description: "A date to segment against."
                  example: "01/30/2015"
            - type: "object"
              title: "Dropdown/Radio Merge Field Segment"
              description: "An individual segment condition"
              required:
              - "field"
              - "op"
              properties:
                condition_type:
                  type: "string"
                  x-value: "SelectMerge"
                  enum:
                  - "SelectMerge"
                field:
                  type: "string"
                  title: "Segment Field"
                  description: "A merge field to segment."
                  example: "MMERGE6"
                op:
                  type: "string"
                  enum:
                  - "is"
                  - "not"
                  - "blank"
                  - "blank_not"
                  - "notcontain"
                  - "contains"
                  title: "Segment Operator"
                  description: "Whether the member's merge information is/is not a\
                    \ value or is/is not blank."
                  example: "is"
                value:
                  type: "string"
                  title: "Segment Value"
                  description: "The value to segment a text merge field with."
                  example: "Second Choice"
            - type: "object"
              title: "Text or Number Merge Field Segment"
              description: "Segment by a given text or number merge field."
              required:
              - "field"
              - "op"
              properties:
                condition_type:
                  type: "string"
                  x-value: "TextMerge"
                  enum:
                  - "TextMerge"
                field:
                  type: "string"
                  title: "Segment Field"
                  description: "A text or number merge field to segment."
                  example: "MMERGE7"
                op:
                  type: "string"
                  enum:
                  - "is"
                  - "not"
                  - "contains"
                  - "notcontain"
                  - "starts"
                  - "ends"
                  - "greater"
                  - "less"
                  - "blank"
                  - "blank_not"
                  title: "Segment Operator"
                  description: "Whether the member's merge information is/is not,\
                    \ contains/does not contain, starts/ends with, or is greater/less\
                    \ than a value"
                  example: "contains"
                value:
                  type: "string"
                  title: "Segment Value"
                  description: "The value to segment a text or number merge field\
                    \ with."
                  example: "Freddie's Jokes"
            - type: "object"
              title: "Email Segment"
              description: "Segment by email address."
              required:
              - "field"
              - "op"
              properties:
                condition_type:
                  type: "string"
                  x-value: "EmailAddress"
                  enum:
                  - "EmailAddress"
                field:
                  type: "string"
                  enum:
                  - "merge0"
                  - "EMAIL"
                  title: "Segment Field"
                  description: "Segmenting based off of a subscriber's email address."
                  example: "EMAIL"
                op:
                  type: "string"
                  enum:
                  - "is"
                  - "not"
                  - "contains"
                  - "notcontain"
                  - "starts"
                  - "ends"
                  - "greater"
                  - "less"
                  title: "Segment Operator"
                  description: "Whether the email address is/not exactly, contains/doesn't\
                    \ contain, starts/ends with a string."
                value:
                  type: "string"
                  title: "Segment Value"
                  description: "The value to compare the email against."
                  example: "urist.mcvankab@freddiesjokes.com"
            - type: "object"
              title: "Predicted Gender Segment"
              description: "Segment by predicted gender."
              required:
              - "field"
              - "op"
              - "value"
              properties:
                condition_type:
                  type: "string"
                  x-value: "PredictedGender"
                  enum:
                  - "PredictedGender"
                field:
                  type: "string"
                  enum:
                  - "predicted_gender"
                  title: "Segment Field"
                  description: "Segment by predicted gender."
                op:
                  type: "string"
                  enum:
                  - "is"
                  - "not"
                  title: "Segment Operator"
                  description: "Members who are/not the exact criteria listed."
                  example: "is"
                value:
                  type: "string"
                  enum:
                  - "male"
                  - "female"
                  title: "Segment Operator"
                  description: "The predicted gender to segment."
                  example: "female"
            - type: "object"
              title: "Predicted Age Segment"
              description: "Segment by predicted age."
              required:
              - "field"
              - "op"
              - "value"
              properties:
                condition_type:
                  type: "string"
                  x-value: "PredictedAge"
                  enum:
                  - "PredictedAge"
                field:
                  type: "string"
                  enum:
                  - "predicted_age_range"
                  title: "Segment Field"
                  description: "Segment by predicted age."
                op:
                  type: "string"
                  enum:
                  - "is"
                  title: "Segment Operator"
                  description: "Members who are/not the exact criteria listed."
                  example: "is"
                value:
                  type: "string"
                  enum:
                  - "18-24"
                  - "25-34"
                  - "35-44"
                  - "45-54"
                  - "55-64"
                  - "65+"
                  title: "Segment Operator"
                  description: "The predicted age to segment."
                  example: "female"
            - type: "object"
              title: "New Subscribers Prebuilt Segment"
              description: "Segment by when people subscribed."
              properties:
                condition_type:
                  type: "string"
                  x-value: "NewSubscribers"
                  enum:
                  - "NewSubscribers"
                field:
                  type: "string"
                  enum:
                  - "timestamp_opt"
                  title: "Segment Field"
                  description: "Segment by when people subscribed."
                op:
                  type: "string"
                  enum:
                  - "date_within"
                  title: "Segment Operator"
                  description: "Whe the event took place, namely within a time frame."
                value:
                  type: "string"
                  title: "Segment Data"
                  description: "What type of data to segment on: a specific date,\
                    \ a specific campaign, or the last campaign sent."
            x-discriminator:
              type: "string"
              propertyName: "condition_type"
    description: "The [conditions of the segment](https://mailchimp.com/help/save-and-manage-segments/).\
      \ Static and fuzzy segments don't have conditions."
  List_9:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        description: "The name of the segment."
        title: "Segment Name"
      static_segment:
        type: "array"
        description: "An array of emails to be used for a static segment. Any emails\
          \ provided that are not present on the list will be ignored. Passing an\
          \ empty array for an existing static segment will reset that segment and\
          \ remove all members. This field cannot be provided with the `options` field."
        title: "Static Segment"
        items:
          type: "string"
      options:
        $ref: "#/definitions/Conditions_2"
    title: "List"
    description: "Information about a specific list segment."
  List Members_1:
    type: "object"
    properties:
      id:
        type: "string"
        description: "The MD5 hash of the lowercase version of the list member's email\
          \ address."
        title: "Email ID"
        readOnly: true
      email_address:
        type: "string"
        description: "Email address for a subscriber."
        title: "Email Address"
        readOnly: true
      unique_email_id:
        type: "string"
        description: "An identifier for the address across all of Mailchimp."
        title: "Unique Email ID"
        readOnly: true
      email_type:
        type: "string"
        description: "Type of email this member asked to get ('html' or 'text')."
        title: "Email Type"
      status:
        type: "string"
        description: "Subscriber's current status."
        title: "Status"
        enum:
        - "subscribed"
        - "unsubscribed"
        - "cleaned"
        - "pending"
        - "transactional"
      merge_fields:
        type: "object"
        description: "A dictionary of merge fields where the keys are the merge tags.\
          \ See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
          \ for more about the structure."
        title: "Merge Fields"
        additionalProperties:
          description: "This object's keys are merge tags (like FNAME). It's values\
            \ are the values to be added to the merge field."
      interests:
        type: "object"
        description: "The key of this object's properties is the ID of the interest\
          \ in question."
        title: "Subscriber Interests"
        additionalProperties:
          type: "boolean"
          description: "Keys are interest IDs, values are booleans that describe whether\
            \ the list member is in that group or not."
          title: "Interest Value"
      stats:
        $ref: "#/definitions/Subscriber Stats"
      ip_signup:
        type: "string"
        description: "IP address the subscriber signed up from."
        title: "Signup IP"
        readOnly: true
      timestamp_signup:
        type: "string"
        format: "date-time"
        description: "The date and time the subscriber signed up for the list in ISO\
          \ 8601 format."
        title: "Signup Timestamp"
        readOnly: true
      ip_opt:
        type: "string"
        description: "The IP address the subscriber used to confirm their opt-in status."
        title: "Opt-in IP"
        readOnly: true
      timestamp_opt:
        type: "string"
        format: "date-time"
        description: "The date and time the subscriber confirmed their opt-in status\
          \ in ISO 8601 format."
        title: "Opt-in Timestamp"
        readOnly: true
      member_rating:
        type: "integer"
        description: "Star rating for this member, between 1 and 5."
        title: "Member Rating"
        readOnly: true
      last_changed:
        type: "string"
        format: "date-time"
        description: "The date and time the member's info was last changed in ISO\
          \ 8601 format."
        title: "Last Changed Date"
        readOnly: true
      language:
        type: "string"
        description: "If set/detected, the [subscriber's language](https://mailchimp.com/help/view-and-edit-contact-languages/)."
        title: "Language"
      vip:
        type: "boolean"
        description: "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/)\
          \ for subscriber."
        title: "VIP"
      email_client:
        type: "string"
        description: "The list member's email client."
        title: "Email Client"
        readOnly: true
      location:
        $ref: "#/definitions/Location_1"
      last_note:
        $ref: "#/definitions/Notes"
      list_id:
        type: "string"
        description: "The list id."
        title: "List ID"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "Individuals who are currently or have been previously subscribed\
      \ to this list, including members who have bounced or unsubscribed."
    example:
      email_type: "email_type"
      list_id: "list_id"
      timestamp_opt: "2000-01-23T04:56:07.000+00:00"
      last_note:
        note_id: 9
        note: "note"
        created_at: "2000-01-23T04:56:07.000+00:00"
        created_by: "created_by"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      merge_fields:
        key: ""
      timestamp_signup: "2000-01-23T04:56:07.000+00:00"
      ip_signup: "ip_signup"
      member_rating: 0
      language: "language"
      unique_email_id: "unique_email_id"
      email_address: "email_address"
      email_client: "email_client"
      stats:
        avg_click_rate: 6.02745618307040320615897144307382404804229736328125
        avg_open_rate: 0.80082819046101150206595775671303272247314453125
      ip_opt: "ip_opt"
      location:
        country_code: "country_code"
        dstoff: 7
        timezone: "timezone"
        latitude: 5.962133916683182377482808078639209270477294921875
        gmtoff: 2
        longitude: 5.63737665663332876420099637471139430999755859375
      id: "id"
      interests:
        key: true
      vip: true
      status: "subscribed"
      last_changed: "2000-01-23T04:56:07.000+00:00"
  Segment Members:
    type: "object"
    properties:
      members:
        type: "array"
        description: "An array of objects, each representing a specific list member."
        title: "Members"
        items:
          $ref: "#/definitions/List Members_1"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "View members in a specific list segment."
    example:
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      members:
      - email_type: "email_type"
        list_id: "list_id"
        timestamp_opt: "2000-01-23T04:56:07.000+00:00"
        last_note:
          note_id: 9
          note: "note"
          created_at: "2000-01-23T04:56:07.000+00:00"
          created_by: "created_by"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        merge_fields:
          key: ""
        timestamp_signup: "2000-01-23T04:56:07.000+00:00"
        ip_signup: "ip_signup"
        member_rating: 0
        language: "language"
        unique_email_id: "unique_email_id"
        email_address: "email_address"
        email_client: "email_client"
        stats:
          avg_click_rate: 6.02745618307040320615897144307382404804229736328125
          avg_open_rate: 0.80082819046101150206595775671303272247314453125
        ip_opt: "ip_opt"
        location:
          country_code: "country_code"
          dstoff: 7
          timezone: "timezone"
          latitude: 5.962133916683182377482808078639209270477294921875
          gmtoff: 2
          longitude: 5.63737665663332876420099637471139430999755859375
        id: "id"
        interests:
          key: true
        vip: true
        status: "subscribed"
        last_changed: "2000-01-23T04:56:07.000+00:00"
      - email_type: "email_type"
        list_id: "list_id"
        timestamp_opt: "2000-01-23T04:56:07.000+00:00"
        last_note:
          note_id: 9
          note: "note"
          created_at: "2000-01-23T04:56:07.000+00:00"
          created_by: "created_by"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        merge_fields:
          key: ""
        timestamp_signup: "2000-01-23T04:56:07.000+00:00"
        ip_signup: "ip_signup"
        member_rating: 0
        language: "language"
        unique_email_id: "unique_email_id"
        email_address: "email_address"
        email_client: "email_client"
        stats:
          avg_click_rate: 6.02745618307040320615897144307382404804229736328125
          avg_open_rate: 0.80082819046101150206595775671303272247314453125
        ip_opt: "ip_opt"
        location:
          country_code: "country_code"
          dstoff: 7
          timezone: "timezone"
          latitude: 5.962133916683182377482808078639209270477294921875
          gmtoff: 2
          longitude: 5.63737665663332876420099637471139430999755859375
        id: "id"
        interests:
          key: true
        vip: true
        status: "subscribed"
        last_changed: "2000-01-23T04:56:07.000+00:00"
      total_items: 6
  body_3:
    type: "object"
    required:
    - "email_address"
    properties:
      email_address:
        type: "string"
        description: "Email address for a subscriber."
        title: "Email Address"
  Tag search results_tags:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "The unique id for the tag."
        title: "Tag ID"
        readOnly: true
      name:
        type: "string"
        description: "The name of the tag."
        title: "Tag Name"
    example:
      name: "name"
      id: 0
  Tag search results:
    type: "object"
    properties:
      tags:
        type: "array"
        description: "A list of matching tags."
        title: "Tags"
        readOnly: true
        items:
          $ref: "#/definitions/Tag search results_tags"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
    description: "A list of tags matching the input query."
    example:
      total_items: 6
      tags:
      - name: "name"
        id: 0
      - name: "name"
        id: 0
  Ecommerce Stats:
    type: "object"
    properties:
      total_revenue:
        type: "number"
        description: "The total revenue the list member has brought in."
        title: "Total Revenue"
        readOnly: true
      number_of_orders:
        type: "number"
        description: "The total number of orders placed by the list member."
        title: "Total Number of Orders"
        readOnly: true
      currency_code:
        type: "string"
        example: "USD"
        description: "The three-letter ISO 4217 code for the currency that the store\
          \ accepts."
        title: "Currency"
        readOnly: true
    description: "Ecommerce stats for the list member if the list is attached to a\
      \ store."
  Subscriber Stats_1:
    type: "object"
    properties:
      avg_open_rate:
        type: "number"
        description: "A subscriber's average open rate."
        title: "Average Open Rate"
        readOnly: true
      avg_click_rate:
        type: "number"
        description: "A subscriber's average clickthrough rate."
        title: "Average Click Rate"
        readOnly: true
      ecommerce_data:
        $ref: "#/definitions/Ecommerce Stats"
    description: "Open and click rates for this subscriber."
  Location_2:
    type: "object"
    properties:
      latitude:
        type: "number"
        description: "The location latitude."
        title: "Latitude"
      longitude:
        type: "number"
        description: "The location longitude."
        title: "Longitude"
      gmtoff:
        type: "integer"
        description: "The time difference in hours from GMT."
        title: "GMT Offset"
        readOnly: true
      dstoff:
        type: "integer"
        description: "The offset for timezones where daylight saving time is observed."
        title: "DST Offset"
        readOnly: true
      country_code:
        type: "string"
        description: "The unique code for the location country."
        title: "Country Code"
        readOnly: true
      timezone:
        type: "string"
        description: "The timezone for the location."
        title: "Timezone"
        readOnly: true
      region:
        type: "string"
        description: "The region for the location."
        title: "Region"
        readOnly: true
    description: "Subscriber location information."
  Marketing Permission:
    type: "object"
    properties:
      marketing_permission_id:
        type: "string"
        description: "The id for the marketing permission on the list"
        title: "Marketing Permission ID"
      text:
        type: "string"
        description: "The text of the marketing permission."
        title: "Marketing Permission Text"
      enabled:
        type: "boolean"
        description: "If the subscriber has opted-in to the marketing permission."
        title: "Enabled"
    description: "A single marketing permission a subscriber has either opted-in to\
      \ or opted-out of."
  List Members_2:
    type: "object"
    properties:
      members:
        type: "array"
        description: "An array of objects, each representing a specific list member."
        title: "Members"
        items:
          $ref: "#/definitions/List Members_2"
      list_id:
        type: "string"
        description: "The list id."
        title: "List ID"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "Manage members of a specific Mailchimp list, including currently\
      \ subscribed, unsubscribed, and bounced members."
    example:
      list_id: "list_id"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      members:
      - null
      - null
      total_items: 0
  Marketing Permission_1:
    type: "object"
    properties:
      marketing_permission_id:
        type: "string"
        description: "The id for the marketing permission on the list"
        title: "Marketing Permission ID"
      enabled:
        type: "boolean"
        description: "If the subscriber has opted-in to the marketing permission."
        title: "Enabled"
    description: "A single marketing permission a subscriber has either opted-in to\
      \ or opted-out of."
  Add List Members_1:
    type: "object"
    required:
    - "email_address"
    - "status"
    properties:
      email_address:
        type: "string"
        description: "Email address for a subscriber."
        title: "Email Address"
      email_type:
        type: "string"
        description: "Type of email this member asked to get ('html' or 'text')."
        title: "Email Type"
      status:
        type: "string"
        description: "Subscriber's current status."
        title: "Status"
        enum:
        - "subscribed"
        - "unsubscribed"
        - "cleaned"
        - "pending"
        - "transactional"
      merge_fields:
        type: "object"
        description: "A dictionary of merge fields where the keys are the merge tags.\
          \ See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
          \ for more about the structure."
        title: "Merge Fields"
        additionalProperties:
          description: "This object's keys are merge tags (like FNAME). It's values\
            \ are the values to be added to the merge field."
      interests:
        type: "object"
        description: "The key of this object's properties is the ID of the interest\
          \ in question."
        title: "Subscriber Interests"
        additionalProperties:
          type: "boolean"
          description: "Keys are interest IDs, values are booleans that describe whether\
            \ the list member is in that group or not."
          title: "Interest Value"
      language:
        type: "string"
        description: "If set/detected, the [subscriber's language](https://mailchimp.com/help/view-and-edit-contact-languages/)."
        title: "Language"
      vip:
        type: "boolean"
        description: "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/)\
          \ for subscriber."
        title: "VIP"
      location:
        $ref: "#/definitions/Location"
      marketing_permissions:
        type: "array"
        description: "The marketing permissions for the subscriber."
        title: "Marketing Permissions"
        items:
          $ref: "#/definitions/Marketing Permission_1"
      ip_signup:
        type: "string"
        description: "IP address the subscriber signed up from."
        title: "Signup IP"
      timestamp_signup:
        type: "string"
        format: "date-time"
        description: "The date and time the subscriber signed up for the list in ISO\
          \ 8601 format."
        title: "Signup Timestamp"
      ip_opt:
        type: "string"
        description: "The IP address the subscriber used to confirm their opt-in status."
        title: "Opt-in IP"
      timestamp_opt:
        type: "string"
        format: "date-time"
        description: "The date and time the subscriber confirmed their opt-in status\
          \ in ISO 8601 format."
        title: "Opt-in Timestamp"
      tags:
        type: "array"
        description: "The tags that are associated with a member."
        title: "Tags on a member"
        items:
          type: "string"
          description: "The name of the tag that will be associated with this member."
    title: "Add List Members"
    description: "Individuals who are currently or have been previously subscribed\
      \ to this list, including members who have bounced or unsubscribed."
  Add List Members_2:
    type: "object"
    required:
    - "email_address"
    - "status_if_new"
    properties:
      email_address:
        type: "string"
        description: "Email address for a subscriber. This value is required only\
          \ if the email address is not already present on the list."
        title: "Email Address"
      status_if_new:
        type: "string"
        description: "Subscriber's status. This value is required only if the email\
          \ address is not already present on the list."
        title: "New Member Status"
        enum:
        - "subscribed"
        - "unsubscribed"
        - "cleaned"
        - "pending"
        - "transactional"
      email_type:
        type: "string"
        description: "Type of email this member asked to get ('html' or 'text')."
        title: "Email Type"
      status:
        type: "string"
        description: "Subscriber's current status."
        title: "Status"
        enum:
        - "subscribed"
        - "unsubscribed"
        - "cleaned"
        - "pending"
        - "transactional"
      merge_fields:
        type: "object"
        description: "A dictionary of merge fields where the keys are the merge tags.\
          \ See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
          \ for more about the structure."
        title: "Merge Fields"
        additionalProperties:
          description: "This object's keys are merge tags (like FNAME). It's values\
            \ are the values to be added to the merge field."
      interests:
        type: "object"
        description: "The key of this object's properties is the ID of the interest\
          \ in question."
        title: "Subscriber Interests"
        additionalProperties:
          type: "boolean"
          description: "Keys are interest IDs, values are booleans that describe whether\
            \ the list member is in that group or not."
          title: "Interest Value"
      language:
        type: "string"
        description: "If set/detected, the [subscriber's language](https://mailchimp.com/help/view-and-edit-contact-languages/)."
        title: "Language"
      vip:
        type: "boolean"
        description: "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/)\
          \ for subscriber."
        title: "VIP"
      location:
        $ref: "#/definitions/Location"
      marketing_permissions:
        type: "array"
        description: "The marketing permissions for the subscriber."
        title: "Marketing Permissions"
        items:
          $ref: "#/definitions/Marketing Permission_1"
      ip_signup:
        type: "string"
        description: "IP address the subscriber signed up from."
        title: "Signup IP"
      timestamp_signup:
        type: "string"
        format: "date-time"
        description: "The date and time the subscriber signed up for the list in ISO\
          \ 8601 format."
        title: "Signup Timestamp"
      ip_opt:
        type: "string"
        description: "The IP address the subscriber used to confirm their opt-in status."
        title: "Opt-in IP"
      timestamp_opt:
        type: "string"
        format: "date-time"
        description: "The date and time the subscriber confirmed their opt-in status\
          \ in ISO 8601 format."
        title: "Opt-in Timestamp"
    title: "Add List Members"
    description: "Individuals who are currently or have been previously subscribed\
      \ to this list, including members who have bounced or unsubscribed."
  Add List Members_3:
    type: "object"
    properties:
      email_address:
        type: "string"
        description: "Email address for a subscriber."
        title: "Email Address"
      email_type:
        type: "string"
        description: "Type of email this member asked to get ('html' or 'text')."
        title: "Email Type"
      status:
        type: "string"
        description: "Subscriber's current status."
        title: "Status"
        enum:
        - "subscribed"
        - "unsubscribed"
        - "cleaned"
        - "pending"
      merge_fields:
        type: "object"
        description: "A dictionary of merge fields where the keys are the merge tags.\
          \ See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
          \ for more about the structure."
        title: "Merge Fields"
        additionalProperties:
          description: "This object's keys are merge tags (like FNAME). It's values\
            \ are the values to be added to the merge field."
      interests:
        type: "object"
        description: "The key of this object's properties is the ID of the interest\
          \ in question."
        title: "Subscriber Interests"
        additionalProperties:
          type: "boolean"
          description: "Keys are interest IDs, values are booleans that describe whether\
            \ the list member is in that group or not."
          title: "Interest Value"
      language:
        type: "string"
        description: "If set/detected, the [subscriber's language](https://mailchimp.com/help/view-and-edit-contact-languages/)."
        title: "Language"
      vip:
        type: "boolean"
        description: "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/)\
          \ for subscriber."
        title: "VIP"
      location:
        $ref: "#/definitions/Location"
      marketing_permissions:
        type: "array"
        description: "The marketing permissions for the subscriber."
        title: "Marketing Permissions"
        items:
          $ref: "#/definitions/Marketing Permission_1"
      ip_signup:
        type: "string"
        description: "IP address the subscriber signed up from."
        title: "Signup IP"
      timestamp_signup:
        type: "string"
        format: "date-time"
        description: "The date and time the subscriber signed up for the list in ISO\
          \ 8601 format."
        title: "Signup Timestamp"
      ip_opt:
        type: "string"
        description: "The IP address the subscriber used to confirm their opt-in status."
        title: "Opt-in IP"
      timestamp_opt:
        type: "string"
        format: "date-time"
        description: "The date and time the subscriber confirmed their opt-in status\
          \ in ISO 8601 format."
        title: "Opt-in Timestamp"
    title: "Add List Members"
    description: "Individuals who are currently or have been previously subscribed\
      \ to this list, including members who have bounced or unsubscribed."
  Member Activity:
    type: "object"
    properties:
      action:
        type: "string"
        description: "The type of action recorded for the subscriber."
        title: "Action Type"
      timestamp:
        type: "string"
        format: "date-time"
        description: "The date and time recorded for the action."
        title: "Timestamp"
      url:
        type: "string"
        description: "For clicks, the URL the subscriber clicked on."
        title: "URL"
      type:
        type: "string"
        description: "The type of campaign that was sent."
        title: "Campaign Type"
      campaign_id:
        type: "string"
        description: "The web-based ID for the campaign."
        title: "Campaign ID"
      title:
        type: "string"
        description: "If set, the campaign's title."
        title: "Campaign Title"
      parent_campaign:
        type: "string"
        description: "The ID of the parent campaign."
        title: "Parent Campaign ID"
    description: "Member activity events."
    example:
      parent_campaign: "parent_campaign"
      action: "action"
      type: "type"
      title: "title"
      url: "url"
      campaign_id: "campaign_id"
      timestamp: "2000-01-23T04:56:07.000+00:00"
  Member Activity Events:
    type: "object"
    properties:
      activity:
        type: "array"
        description: "An array of objects, each representing a member event."
        title: "Activity"
        items:
          $ref: "#/definitions/Member Activity"
      email_id:
        type: "string"
        description: "The MD5 hash of the lowercase version of the list member's email\
          \ address."
        title: "Email Hash"
        readOnly: true
      contact_id:
        type: "string"
        description: "As Mailchimp evolves beyond email, you may eventually have contacts\
          \ without email addresses. While the `email_id` is the MD5 hash of their\
          \ email address, this `contact_id` is agnostic of contact’s inclusion of\
          \ an email address."
        title: "Contact ID"
        readOnly: true
      list_id:
        type: "string"
        description: "The list id."
        title: "List ID"
        readOnly: true
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "The last 50 member events for a list."
    example:
      email_id: "email_id"
      activity:
      - parent_campaign: "parent_campaign"
        action: "action"
        type: "type"
        title: "title"
        url: "url"
        campaign_id: "campaign_id"
        timestamp: "2000-01-23T04:56:07.000+00:00"
      - parent_campaign: "parent_campaign"
        action: "action"
        type: "type"
        title: "title"
        url: "url"
        campaign_id: "campaign_id"
        timestamp: "2000-01-23T04:56:07.000+00:00"
      list_id: "list_id"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      contact_id: "contact_id"
      total_items: 0
  Member Activity Events_1:
    type: "object"
    properties:
      activity:
        type: "array"
        description: "An array of objects, each representing a contact event. There\
          \ are multiple possible types, see the [activity schema documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#activity-schemas)."
        title: "Activity"
        readOnly: true
        items:
          x-oneOf:
          - type: "object"
            title: "Email Opens"
            description: "Activity feed item representing opening an email."
            properties:
              activity_type:
                type: "string"
                description: "The type of event activity."
                x-value: "open"
                enum:
                - "open"
              created_at_timestamp:
                type: "string"
                title: "Created At Timestamp"
                format: "date-time"
                description: "The created at timestamp in ISO8601."
              campaign_id:
                type: "string"
                title: "Campaign ID"
                description: "The campaign's unique id."
              campaign_title:
                type: "string"
                title: "Campaign Title"
                description: "The title of the campaign."
          - type: "object"
            title: "Email Clicks"
            description: "Activity feed item representing having a link clicked by\
              \ a contact."
            properties:
              activity_type:
                type: "string"
                description: "The type of event activity."
                x-value: "click"
                enum:
                - "click"
              created_at_timestamp:
                type: "string"
                title: "Created At Timestamp"
                format: "date-time"
                description: "The created at timestamp in ISO8601."
              campaign_id:
                type: "string"
                title: "Campaign ID"
                description: "The campaign's unique id."
              campaign_title:
                type: "string"
                title: "Campaign Title"
                description: "The title of the campaign."
              link_clicked:
                type: "string"
                title: "Link Clicked"
                description: "The URL of the link that was clicked."
          - type: "object"
            title: "Email Bounced"
            description: "Activity feed item representing an email to this contact\
              \ bouncing."
            properties:
              activity_type:
                type: "string"
                description: "The type of event activity."
                x-value: "bounce"
                enum:
                - "bounce"
              created_at_timestamp:
                type: "string"
                title: "Created At Timestamp"
                format: "date-time"
                description: "The created at timestamp in ISO8601."
              campaign_id:
                type: "string"
                title: "Campaign ID"
                description: "The campaign's unique id."
              campaign_title:
                type: "string"
                title: "Campaign Title"
                description: "The title of the campaign."
              bounce_type:
                type: "string"
                title: "Bounce Type"
                description: "The type of bounce."
                enum:
                - "hard"
                - "soft"
              bounce_has_open_activity:
                type: "boolean"
                title: "Bounce Has Open Activity"
                description: "Indicates if the email associated with this bounce also\
                  \ has open activity on the same campaign."
          - type: "object"
            title: "List Unsubscribed"
            description: "Activity feed item representing this contact unsubscribing\
              \ from a list."
            properties:
              activity_type:
                type: "string"
                description: "The type of event activity."
                x-value: "unsub"
                enum:
                - "unsub"
              created_at_timestamp:
                type: "string"
                title: "Created At Timestamp"
                format: "date-time"
                description: "The created at timestamp in ISO8601."
              campaign_id:
                type: "string"
                title: "Campaign ID"
                description: "The campaign's unique id."
              campaign_title:
                type: "string"
                title: "Campaign Text"
                description: "The title of the campaign."
              is_admin_unsubscribed:
                type: "boolean"
                title: "Is Admin Unsubscribed"
                description: "Indicates if an admin unsubscribed a contact."
              unsubscribe_reason:
                type: "string"
                title: "Unsubscribe Reason"
                description: "Indicates the reason that the contact was unsubscribed."
          - type: "object"
            title: "Email Sent"
            description: "Activity feed item representing having an email sent to\
              \ the contact."
            properties:
              activity_type:
                type: "string"
                description: "The type of event activity."
                x-value: "sent"
                enum:
                - "sent"
              created_at_timestamp:
                type: "string"
                title: "Created At Timestamp"
                format: "date-time"
                description: "The created at timestamp in ISO8601."
              campaign_id:
                type: "string"
                title: "Campaign ID"
                description: "The campaign's unique id."
              campaign_title:
                type: "string"
                title: "Campaign Title"
                description: "The title of the campaign."
          - type: "object"
            title: "Email Conversation"
            description: "Activity feed item representing an individual reply in a\
              \ conversation."
            properties:
              activity_type:
                type: "string"
                description: "The type of event activity."
                x-value: "conversation"
                enum:
                - "conversation"
              created_at_timestamp:
                type: "string"
                title: "Created At Timestamp"
                format: "date-time"
                description: "The created at timestamp in ISO8601."
              campaign_id:
                type: "string"
                title: "Campaign ID"
                description: "The campaign's unique id."
              campaign_title:
                type: "string"
                title: "Campaign Title"
                description: "The title of the campaign."
              thread_id:
                type: "string"
                title: "Thread ID"
                description: "The thread's unique id of the conversation referenced\
                  \ in this event."
              message_text:
                type: "string"
                title: "Message Text"
                description: "The body of the message in this conversation."
              created_by:
                type: "string"
                title: "Created By"
                description: "The username of the person who created this event."
              is_user:
                type: "boolean"
                title: "Is User"
                description: "Indicates that the message created by a user (as opposed\
                  \ to a contact)."
              has_read:
                type: "boolean"
                title: "Has Read"
                description: "Indicates that the message has been read."
              from_email:
                type: "string"
                title: "From Email"
                description: "The email of the contact who sent the reply."
              avatar_url:
                type: "string"
                title: "Avatar URL"
                description: "The gravatar URL of the contact who sent the reply."
          - type: "object"
            title: "Note"
            description: "Activity feed item representing a note on the contact record."
            properties:
              activity_type:
                type: "string"
                description: "The type of event activity."
                x-value: "note"
                enum:
                - "note"
              created_at_timestamp:
                type: "string"
                title: "Created At Timestamp"
                format: "date-time"
                description: "The created at timestamp in ISO8601."
              updated_at_timestamp:
                type: "string"
                title: "Updated At Timestamp"
                format: "date-time"
                description: "The updated at timestamp in ISO8601."
              note_id:
                type: "string"
                title: "Note ID"
                description: "The note's unique id."
              note_text:
                type: "string"
                title: "Note Text"
                description: "The note's text."
              created_by:
                type: "string"
                title: "Created By"
                description: "The person who created the note."
              avatar_url:
                type: "string"
                title: "Avatar URL"
                description: "The URL of the contact's profile gravatar image."
          - type: "object"
            title: "Marketing Permission"
            description: "Activity feed item indicating if a marketing permission\
              \ was added or updated."
            properties:
              activity_type:
                type: "string"
                description: "The type of event activity."
                x-value: "marketing_permission"
                enum:
                - "marketing_permission"
              created_at_timestamp:
                type: "string"
                title: "Created At Timestamp"
                format: "date-time"
                description: "The created at timestamp in ISO8601."
              marketing_permisson_text:
                type: "string"
                title: "Marketing Permission Text"
                description: "The text describing this marketing permission."
              updated_by:
                type: "string"
                title: "Updated By"
                description: "The name of the contact who updated this permission."
              marketing_permission_opted_in:
                type: "boolean"
                title: "Marketing Permission Opted In"
                description: "Indicates if the marketing permission is enabled or\
                  \ not."
          - type: "object"
            title: "Postcard Sent"
            description: "Activity feed item representing a time when a contact was\
              \ sent a particular postcard."
            properties:
              activity_type:
                type: "string"
                description: "The type of event activity."
                x-value: "postcard_sent"
                enum:
                - "postcard_sent"
              created_at_timestamp:
                type: "string"
                title: "Created At Timestamp"
                format: "date-time"
                description: "The created at timestamp in ISO8601."
              outreach_id:
                type: "string"
                title: "Outreach ID"
                description: "The outreach's unique id."
              outreach_title:
                type: "string"
                title: "Outreach Title"
                description: "The title of the outreach."
          - type: "object"
            title: "Squatter Signup"
            description: "Activity feed item to representing a contact signing up\
              \ for the audience from a squatter page."
            properties:
              activity_type:
                type: "string"
                description: "The type of event activity."
                x-value: "squatter_signup"
                enum:
                - "squatter_signup"
              created_at_timestamp:
                type: "string"
                title: "Created At Timestamp"
                format: "date-time"
                description: "The created at timestamp in ISO8601."
              outreach_id:
                type: "string"
                title: "Outreach ID"
                description: "The outreach's unique id."
              outreach_title:
                type: "string"
                title: "Outreach Title"
                description: "The title of the outreach."
          - type: "object"
            title: "Website Signup"
            description: "Activity feed item to representing a contact signing up\
              \ for the contact through a website page."
            properties:
              activity_type:
                type: "string"
                description: "The type of event activity."
                x-value: "website_signup"
                enum:
                - "website_signup"
              created_at_timestamp:
                type: "string"
                title: "Created At Timestamp"
                format: "date-time"
                description: "The created at timestamp in ISO8601."
              outreach_id:
                type: "string"
                title: "Outreach ID"
                description: "The outreach's unique id."
              outreach_title:
                type: "string"
                title: "Outreach Title"
                description: "The title of the outreach."
          - type: "object"
            title: "Landing Page Signup"
            description: "Activity feed item to representing a contact signing up\
              \ for the list via a landing page."
            properties:
              activity_type:
                type: "string"
                description: "The type of event activity."
                x-value: "landing_page_signup"
                enum:
                - "landing_page_signup"
              created_at_timestamp:
                type: "string"
                title: "Created At Timestamp"
                format: "date-time"
                description: "The created at timestamp in ISO8601."
              outreach_id:
                type: "string"
                title: "Outreach ID"
                description: "The outreach's unique id."
              outreach_title:
                type: "string"
                title: "Outreach Title"
                description: "The title of the outreach."
          - type: "object"
            title: "Ecommerce Signup"
            description: "Activity feed item to representing a contact signing up\
              \ for the list via a ecommerce store."
            properties:
              activity_type:
                type: "string"
                description: "The type of event activity."
                x-value: "ecommerce_signup"
                enum:
                - "ecommerce_signup"
              created_at_timestamp:
                type: "string"
                title: "Created At Timestamp"
                format: "date-time"
                description: "The created at timestamp in ISO8601."
              store_name:
                type: "string"
                title: "Store Name"
                description: "The name of the store."
          - type: "object"
            title: "Generic Signup"
            description: "Activity feed item that represents a contact signing up\
              \ for the audience via a generic some generic method (specifically,\
              \ one we can't link to)."
            properties:
              activity_type:
                type: "string"
                description: "The type of event activity."
                x-value: "generic_signup"
                enum:
                - "generic_signup"
              created_at_timestamp:
                type: "string"
                title: "Created At Timestamp"
                format: "date-time"
                description: "The created at timestamp in ISO8601."
              signup_category:
                type: "string"
                title: "Signup Category"
                description: "How was this user added to the list."
          - type: "object"
            title: "Ecommerce Order"
            description: "Activity feed item that represents an order."
            properties:
              activity_type:
                type: "string"
                description: "The type of event activity."
                x-value: "order"
                enum:
                - "order"
              created_at_timestamp:
                type: "string"
                title: "Created At Timestamp"
                format: "date-time"
                description: "The created at timestamp in ISO8601."
              outreach_id:
                type: "string"
                title: "Outreach ID"
                description: "The outreach's unique id."
              outreach_type:
                type: "string"
                title: "Outreach Type"
                description: "The type of outreach that triggered the event."
              outreach_title:
                type: "string"
                title: "Outreach Title"
                description: "The title of the outreach."
              order_id:
                type: "string"
                title: "Order ID"
                description: "The unique order id."
              order_total:
                type: "string"
                title: "Order Total"
                description: "The order total formatted as a string."
              order_items:
                type: "array"
                title: "Order Items"
                description: "An array of items that have been ordered."
                items:
                  type: "object"
                  title: "E-commerce Order Line Item"
                  description: "Information about a specific order line."
                  properties:
                    id:
                      type: "string"
                      title: "Order Line Item Foreign ID"
                      description: "A unique identifier for an order line item."
                      readOnly: true
                    product_id:
                      type: "string"
                      title: "Order Line Item Product Foreign ID"
                      description: "A unique identifier for the product associated\
                        \ with an order line item."
                    product_title:
                      type: "string"
                      title: "Order Line Item Product Title"
                      description: "The name of the product for an order line item."
                      readOnly: true
                    product_variant_id:
                      type: "string"
                      title: "Order Line Item Product Variant Foreign ID"
                      description: "A unique identifier for the product variant associated\
                        \ with an order line item."
                    product_variant_title:
                      type: "string"
                      title: "Order Line Item Product Variant Title"
                      description: "The name of the product variant for an order line\
                        \ item."
                      readOnly: true
                    image_url:
                      type: "string"
                      title: "Product Image URL"
                      description: "The image URL for a product."
                      readOnly: true
                    quantity:
                      type: "integer"
                      title: "Quantity"
                      description: "The order line item quantity."
                    price:
                      type: "number"
                      title: "Price"
                      description: "The order line item price."
                    discount:
                      type: "number"
                      title: "Discount"
                      description: "The total discount amount applied to a line item."
                    _links:
                      title: "Links"
                      description: "A list of link types and descriptions for the\
                        \ API schema documents."
                      type: "array"
                      items:
                        type: "object"
                        title: "Resource Link"
                        description: "This object represents a link from the resource\
                          \ where it is found to another resource or action that may\
                          \ be performed."
                        properties:
                          rel:
                            type: "string"
                            title: "Rel"
                            description: "As with an HTML 'rel' attribute, this describes\
                              \ the type of link."
                            readOnly: true
                          href:
                            type: "string"
                            title: "Href"
                            description: "This property contains a fully-qualified\
                              \ URL that can be called to retrieve the linked resource\
                              \ or perform the linked action."
                            readOnly: true
                          method:
                            type: "string"
                            title: "Method"
                            description: "The HTTP method that should be used when\
                              \ accessing the URL defined in 'href'."
                            enum:
                            - "GET"
                            - "POST"
                            - "PUT"
                            - "PATCH"
                            - "DELETE"
                            - "OPTIONS"
                            - "HEAD"
                            readOnly: true
                          targetSchema:
                            type: "string"
                            title: "Target Schema"
                            description: "For GETs, this is a URL representing the\
                              \ schema that the response should conform to."
                            readOnly: true
                          schema:
                            type: "string"
                            title: "Schema"
                            description: "For HTTP methods that can receive bodies\
                              \ (POST and PUT), this is a URL representing the schema\
                              \ that the body should conform to."
                            readOnly: true
                      readOnly: true
              store_name:
                type: "string"
                title: "Store Name"
                description: "The name of the store for an order."
              order_url:
                type: "string"
                title: "Order URL"
                description: "The order URL."
          - type: "object"
            title: "Contact Activity Event"
            description: "Activity feed item that represents a generic event."
            properties:
              activity_type:
                type: "string"
                description: "The type of event activity."
                x-value: "event"
                enum:
                - "event"
              created_at_timestamp:
                type: "string"
                title: "Created At Timestamp"
                format: "date-time"
                description: "The created at timestamp in ISO8601."
              event_name:
                type: "string"
                title: "Event Name"
                description: "The name of the event."
              event_properties:
                type: "array"
                title: "Event Properties"
                items:
                  x-skip-validation: true
                  type: "string"
                description: "An arbitrary datastore containing properties for the\
                  \ given event."
          - type: "object"
            title: "Survey response"
            description: "Represents when a contact completes and submits a survey"
            properties:
              activity_type:
                type: "string"
                description: "The type of event activity."
                x-value: "survey_response"
                enum:
                - "survey_response"
              created_at_timestamp:
                type: "string"
                title: "Created At Timestamp"
                format: "date-time"
                description: "The created at timestamp in ISO8601."
              survey_id:
                type: "string"
                title: "Survey ID"
                description: "The survey's unique id."
              survey_title:
                type: "string"
                title: "Survey Title"
                description: "The title of the survey."
          x-discriminator:
            propertyName: "activity_type"
            type: "string"
      email_id:
        type: "string"
        description: "The MD5 hash of the lowercase version of the list member's email\
          \ address."
        title: "Email Hash"
        readOnly: true
      list_id:
        type: "string"
        description: "The list id."
        title: "List ID"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "The member activity events for a given member."
    example:
      email_id: "email_id"
      activity:
      - ""
      - ""
      list_id: "list_id"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
    x-hidden: false
  Collection of Tags_tags:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "The unique id for the tag."
        title: "Tag ID"
        readOnly: true
      name:
        type: "string"
        description: "The name of the tag."
        title: "Tag Name"
      date_added:
        type: "string"
        format: "date-time"
        description: "The date and time the tag was added to the list member in ISO\
          \ 8601 format."
        title: "Date Added"
        readOnly: true
    example:
      date_added: "2000-01-23T04:56:07.000+00:00"
      name: "name"
      id: 0
  Collection of Tags:
    type: "object"
    properties:
      tags:
        type: "array"
        description: "A list of tags assigned to the list member."
        title: "Tags"
        items:
          $ref: "#/definitions/Collection of Tags_tags"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A list of tags assigned to a list member."
    example:
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      total_items: 6
      tags:
      - date_added: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        id: 0
      - date_added: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        id: 0
  Member Tag:
    type: "object"
    required:
    - "name"
    - "status"
    properties:
      name:
        type: "string"
        description: "The name of the tag."
        title: "Tag Name"
      status:
        type: "string"
        description: "The status for the tag on the member, pass in active to add\
          \ a tag or inactive to remove it."
        title: "Status"
        enum:
        - "inactive"
        - "active"
    description: "Add or remove tags on a member by declaring a tag either active\
      \ or inactive on a member."
  Member Tags:
    type: "object"
    required:
    - "tags"
    properties:
      tags:
        type: "array"
        description: "A list of tags assigned to the list member."
        title: "Tags"
        items:
          $ref: "#/definitions/Member Tag"
      is_syncing:
        type: "boolean"
        description: "When is_syncing is true, automations based on the tags in the\
          \ request will not fire"
        title: "Is Syncing"
    title: "Member Tags"
    description: "A list of tags assigned to a list member."
  Event:
    type: "object"
    properties:
      occurred_at:
        type: "string"
        format: "date-time"
        description: "The date and time the event occurred in ISO 8601 format."
        title: "Occurred Time"
        readOnly: true
      name:
        type: "string"
        description: "The name for this type of event ('purchased', 'visited', etc).\
          \ Must be 2-30 characters in length"
        title: "Event Name"
      properties:
        type: "object"
        description: "An optional list of properties"
        title: "Properties"
        additionalProperties:
          type: "string"
    description: "A specific event for a contact."
    example:
      occurred_at: "2000-01-23T04:56:07.000+00:00"
      name: "name"
      properties:
        key: "properties"
  Collection of Events:
    type: "object"
    properties:
      events:
        type: "array"
        description: "An array of objects, each representing an event."
        title: "Events"
        items:
          $ref: "#/definitions/Event"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A collection of events for a given contact"
    example:
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      total_items: 0
      events:
      - occurred_at: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        properties:
          key: "properties"
      - occurred_at: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        properties:
          key: "properties"
  Events:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        description: "The name for this type of event ('purchased', 'visited', etc).\
          \ Must be 2-30 characters in length"
        title: "Event Name"
      properties:
        type: "object"
        description: "An optional list of properties"
        title: "Properties"
        additionalProperties:
          type: "string"
      is_syncing:
        type: "boolean"
        description: "Events created with the is_syncing value set to `true` will\
          \ not trigger automations."
        title: "Is Syncing"
      occurred_at:
        type: "string"
        format: "date-time"
        description: "The date and time the event occurred in ISO 8601 format."
        title: "Occurred Time"
    title: "Events"
    description: "A new event for a specific list member"
    example:
      occurred_at: "2000-01-23T04:56:07.000+00:00"
      is_syncing: true
      name: "name"
      properties:
        key: "properties"
  Goal:
    type: "object"
    properties:
      goal_id:
        type: "integer"
        description: "The id for a Goal event."
        title: "Goal ID"
      event:
        type: "string"
        description: "The name/type of Goal event triggered."
        title: "Event Name"
      last_visited_at:
        type: "string"
        format: "date-time"
        description: "The date and time the user last triggered the Goal event in\
          \ ISO 8601 format."
        title: "Last Visit Date"
      data:
        type: "string"
        description: "Any extra data passed with the Goal event."
        title: "Additional Data"
    description: "A single instance of a goal activity."
    example:
      goal_id: 0
      data: "data"
      last_visited_at: "2000-01-23T04:56:07.000+00:00"
      event: "event"
  Collection of Member Activity Events:
    type: "object"
    properties:
      goals:
        type: "array"
        description: "The last 50 Goal events triggered by a member."
        title: "Goal Activity"
        items:
          $ref: "#/definitions/Goal"
      list_id:
        type: "string"
        description: "The list id."
        title: "List ID"
        readOnly: true
      email_id:
        type: "string"
        description: "The MD5 hash of the lowercase version of the list member's email\
          \ address."
        title: "Email Hash"
        readOnly: true
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "The last 50 Goal events for a member on a specific list."
    example:
      email_id: "email_id"
      list_id: "list_id"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      total_items: 6
      goals:
      - goal_id: 0
        data: "data"
        last_visited_at: "2000-01-23T04:56:07.000+00:00"
        event: "event"
      - goal_id: 0
        data: "data"
        last_visited_at: "2000-01-23T04:56:07.000+00:00"
        event: "event"
  Member Notes:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "The note id."
        title: "Note ID"
        readOnly: true
      created_at:
        type: "string"
        format: "date-time"
        description: "The date and time the note was created in ISO 8601 format."
        title: "Created Time"
        readOnly: true
      created_by:
        type: "string"
        description: "The author of the note."
        title: "Author"
        readOnly: true
      updated_at:
        type: "string"
        format: "date-time"
        description: "The date and time the note was last updated in ISO 8601 format."
        title: "Updated Time"
        readOnly: true
      note:
        type: "string"
        description: "The content of the note."
        title: "Note"
      list_id:
        type: "string"
        description: "The unique id for the list."
        title: "List ID"
        readOnly: true
      email_id:
        type: "string"
        description: "The MD5 hash of the lowercase version of the list member's email\
          \ address."
        title: "Email Hash"
        readOnly: true
      contact_id:
        type: "string"
        description: "As Mailchimp evolves beyond email, you may eventually have contacts\
          \ without email addresses. While the `email_id` is the MD5 hash of their\
          \ email address, this `contact_id` is agnostic of contact’s inclusion of\
          \ an email address."
        title: "Contact ID"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A specific note for a specific member."
    example:
      email_id: "email_id"
      note: "note"
      updated_at: "2000-01-23T04:56:07.000+00:00"
      list_id: "list_id"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      created_at: "2000-01-23T04:56:07.000+00:00"
      id: 0
      contact_id: "contact_id"
      created_by: "created_by"
  Collection of Notes:
    type: "object"
    properties:
      notes:
        type: "array"
        description: "An array of objects, each representing a note resource."
        title: "Notes"
        items:
          $ref: "#/definitions/Member Notes"
      email_id:
        type: "string"
        description: "The MD5 hash of the lowercase version of the list member's email\
          \ address."
        title: "Email Hash"
        readOnly: true
      list_id:
        type: "string"
        description: "The list id."
        title: "List ID"
        readOnly: true
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "The last 10 notes for a specific list member, based on date created."
    example:
      email_id: "email_id"
      notes:
      - email_id: "email_id"
        note: "note"
        updated_at: "2000-01-23T04:56:07.000+00:00"
        list_id: "list_id"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        created_at: "2000-01-23T04:56:07.000+00:00"
        id: 0
        contact_id: "contact_id"
        created_by: "created_by"
      - email_id: "email_id"
        note: "note"
        updated_at: "2000-01-23T04:56:07.000+00:00"
        list_id: "list_id"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        created_at: "2000-01-23T04:56:07.000+00:00"
        id: 0
        contact_id: "contact_id"
        created_by: "created_by"
      list_id: "list_id"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      total_items: 6
  Member Notes_1:
    type: "object"
    properties:
      note:
        type: "string"
        description: "The content of the note. Note length is limited to 1,000 characters."
        title: "Note"
    title: "Member Notes"
    description: "A specific note for a specific member."
  Member Notes_2:
    type: "object"
    properties:
      note:
        type: "string"
        description: "The content of the note. Note length is limited to 1,000 characters."
        title: "Note"
    title: "Member Notes"
    description: "A specific note for a specific member."
  Merge Field Options:
    type: "object"
    properties:
      default_country:
        type: "integer"
        description: "In an address field, the default country code if none supplied."
        title: "Default Country"
      phone_format:
        type: "string"
        description: "In a phone field, the phone number type: US or International."
        title: "Phone Type"
      date_format:
        type: "string"
        description: "In a date or birthday field, the format of the date."
        title: "Date Type"
      choices:
        type: "array"
        example:
        - "First Choice"
        - "Second Choice"
        - "Third Choice"
        description: "In a radio or dropdown non-group field, the available options\
          \ for contacts to pick from."
        title: "Choices"
        items:
          type: "string"
      size:
        type: "integer"
        description: "In a text field, the default length of the text field."
        title: "Text Field Size"
        readOnly: true
    description: "Extra options for some merge field types."
    example:
      size: 5
      date_format: "date_format"
      choices:
      - "First Choice"
      - "Second Choice"
      - "Third Choice"
      default_country: 1
      phone_format: "phone_format"
  Merge Field:
    type: "object"
    properties:
      merge_id:
        type: "integer"
        description: "An unchanging id for the merge field."
        title: "Merge Field ID"
        readOnly: true
      tag:
        type: "string"
        description: "The merge tag used for Mailchimp campaigns and [adding contact\
          \ information](https://mailchimp.com/developer/marketing/docs/merge-fields/#add-merge-data-to-contacts)."
        title: "Merge Tag"
      name:
        type: "string"
        description: "The name of the merge field (audience field)."
        title: "Merge Field Name"
      type:
        type: "string"
        description: "The [type](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
          \ for the merge field."
        title: "Merge Field Type"
        readOnly: true
        enum:
        - "text"
        - "number"
        - "address"
        - "phone"
        - "date"
        - "url"
        - "imageurl"
        - "radio"
        - "dropdown"
        - "birthday"
        - "zip"
      required:
        type: "boolean"
        description: "The boolean value if the merge field is required."
        title: "Required"
      default_value:
        type: "string"
        description: "The default value for the merge field if `null`."
        title: "Default Value"
      public:
        type: "boolean"
        description: "Whether the merge field is displayed on the signup form."
        title: "Merge Field Public Status"
      display_order:
        type: "integer"
        description: "The order that the merge field displays on the list signup form."
        title: "Display Order"
      options:
        $ref: "#/definitions/Merge Field Options"
      help_text:
        type: "string"
        description: "Extra text to help the subscriber fill out the form."
        title: "Merge Field Help Text"
      list_id:
        type: "string"
        description: "The ID that identifies this merge field's audience'."
        title: "List ID"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A [merge field](https://mailchimp.com/developer/marketing/docs/merge-fields/)\
      \ for an audience."
    example:
      public: true
      list_id: "list_id"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      name: "name"
      display_order: 6
      options:
        size: 5
        date_format: "date_format"
        choices:
        - "First Choice"
        - "Second Choice"
        - "Third Choice"
        default_country: 1
        phone_format: "phone_format"
      merge_id: 0
      default_value: "default_value"
      tag: "tag"
      type: "text"
      required: true
      help_text: "help_text"
  Collection of Merge Fields:
    type: "object"
    properties:
      merge_fields:
        type: "array"
        description: "An array of objects, each representing a merge field resource."
        title: "Merge Fields"
        items:
          $ref: "#/definitions/Merge Field"
      list_id:
        type: "string"
        description: "The list id."
        title: "List ID"
        readOnly: true
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "The [merge fields](https://mailchimp.com/developer/marketing/docs/merge-fields/)\
      \ for an audience."
    example:
      list_id: "list_id"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      merge_fields:
      - public: true
        list_id: "list_id"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        name: "name"
        display_order: 6
        options:
          size: 5
          date_format: "date_format"
          choices:
          - "First Choice"
          - "Second Choice"
          - "Third Choice"
          default_country: 1
          phone_format: "phone_format"
        merge_id: 0
        default_value: "default_value"
        tag: "tag"
        type: "text"
        required: true
        help_text: "help_text"
      - public: true
        list_id: "list_id"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        name: "name"
        display_order: 6
        options:
          size: 5
          date_format: "date_format"
          choices:
          - "First Choice"
          - "Second Choice"
          - "Third Choice"
          default_country: 1
          phone_format: "phone_format"
        merge_id: 0
        default_value: "default_value"
        tag: "tag"
        type: "text"
        required: true
        help_text: "help_text"
      total_items: 5
  Merge Field Options_1:
    type: "object"
    properties:
      default_country:
        type: "integer"
        description: "In an address field, the default country code if none supplied."
        title: "Default Country"
      phone_format:
        type: "string"
        description: "In a phone field, the phone number type: US or International."
        title: "Phone Type"
      date_format:
        type: "string"
        description: "In a date or birthday field, the format of the date."
        title: "Date Type"
      choices:
        type: "array"
        example:
        - "First Choice"
        - "Second Choice"
        - "Third Choice"
        description: "In a radio or dropdown non-group field, the available options\
          \ for contacts to pick from."
        title: "Choices"
        items:
          type: "string"
      size:
        type: "integer"
        description: "In a text field, the default length of the text field."
        title: "Text Field Size"
    description: "Extra options for some merge field types."
  Merge Field_1:
    type: "object"
    required:
    - "name"
    - "type"
    properties:
      tag:
        type: "string"
        description: "The merge tag used for Mailchimp campaigns and [adding contact\
          \ information](https://mailchimp.com/developer/marketing/docs/merge-fields/#add-merge-data-to-contacts)."
        title: "Merge Tag"
      name:
        type: "string"
        description: "The name of the merge field (audience field)."
        title: "Merge Field Name"
      type:
        type: "string"
        description: "The [type](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
          \ for the merge field."
        title: "Merge Field Type"
        enum:
        - "text"
        - "number"
        - "address"
        - "phone"
        - "date"
        - "url"
        - "imageurl"
        - "radio"
        - "dropdown"
        - "birthday"
        - "zip"
      required:
        type: "boolean"
        description: "Whether the merge field is required to import a contact."
        title: "Required"
      default_value:
        type: "string"
        description: "The default value for the merge field if `null`."
        title: "Default Value"
      public:
        type: "boolean"
        description: "Whether the merge field is displayed on the signup form."
        title: "Merge Field Public Status"
      display_order:
        type: "integer"
        description: "The order that the merge field displays on the list signup form."
        title: "Display Order"
      options:
        $ref: "#/definitions/Merge Field Options_1"
      help_text:
        type: "string"
        description: "Extra text to help the subscriber fill out the form."
        title: "Merge Field Help Text"
    title: "Merge Field"
    description: "A [merge field](https://mailchimp.com/developer/marketing/docs/merge-fields/)\
      \ for an audience."
  Merge Field Options_2:
    type: "object"
    properties:
      default_country:
        type: "integer"
        description: "In an address field, the default country code if none supplied."
        title: "Default Country"
      phone_format:
        type: "string"
        description: "In a phone field, the phone number type: US or International."
        title: "Phone Type"
      date_format:
        type: "string"
        description: "In a date or birthday field, the format of the date."
        title: "Date Type"
      choices:
        type: "array"
        example:
        - "First Choice"
        - "Second Choice"
        - "Third Choice"
        description: "In a radio or dropdown non-group field, the available options\
          \ for members to pick from."
        title: "Choices"
        items:
          type: "string"
    description: "Extra options for some merge field types."
  Merge Field_2:
    type: "object"
    required:
    - "name"
    properties:
      tag:
        type: "string"
        description: "The merge tag used for Mailchimp campaigns and [adding contact\
          \ information](https://mailchimp.com/developer/marketing/docs/merge-fields/#add-merge-data-to-contacts)."
        title: "Merge Tag"
      name:
        type: "string"
        description: "The name of the merge field (audience field)."
        title: "Merge Field Name"
      required:
        type: "boolean"
        description: "Whether the merge field is required to import a contact."
        title: "Required"
      default_value:
        type: "string"
        description: "The default value for the merge field if `null`."
        title: "Default Value"
      public:
        type: "boolean"
        description: "Whether the merge field is displayed on the signup form."
        title: "Merge Field Public Status"
      display_order:
        type: "integer"
        description: "The order that the merge field displays on the list signup form."
        title: "Display Order"
      options:
        $ref: "#/definitions/Merge Field Options_2"
      help_text:
        type: "string"
        description: "Extra text to help the subscriber fill out the form."
        title: "Merge Field Help Text"
    title: "Merge Field"
    description: "A [merge field](https://mailchimp.com/developer/marketing/docs/merge-fields/)\
      \ for an audience."
  Events_1:
    type: "object"
    properties:
      subscribe:
        type: "boolean"
        example: true
        description: "Whether the webhook is triggered when a list subscriber is added."
        title: "Subscribed"
      unsubscribe:
        type: "boolean"
        example: true
        description: "Whether the webhook is triggered when a list member unsubscribes."
        title: "Unsubscribed"
      profile:
        type: "boolean"
        example: true
        description: "Whether the webhook is triggered when a subscriber's profile\
          \ is updated."
        title: "Profile Updated"
      cleaned:
        type: "boolean"
        example: true
        description: "Whether the webhook is triggered when a subscriber's email address\
          \ is cleaned from the list."
        title: "Cleaned"
      upemail:
        type: "boolean"
        example: true
        description: "Whether the webhook is triggered when a subscriber's email address\
          \ is changed."
        title: "Email Address Updated"
      campaign:
        type: "boolean"
        example: true
        description: "Whether the webhook is triggered when a campaign is sent or\
          \ cancelled."
        title: "Campaign Sent"
    description: "The events that can trigger the webhook and whether they are enabled."
  Sources:
    type: "object"
    properties:
      user:
        type: "boolean"
        example: true
        description: "Whether the webhook is triggered by subscriber-initiated actions."
        title: "User"
      admin:
        type: "boolean"
        example: true
        description: "Whether the webhook is triggered by admin-initiated actions\
          \ in the web interface."
        title: "Admin"
      api:
        type: "boolean"
        example: true
        description: "Whether the webhook is triggered by actions initiated via the\
          \ API."
        title: "API"
    description: "The possible sources of any events that can trigger the webhook\
      \ and whether they are enabled."
  List Webhooks:
    type: "object"
    properties:
      webhooks:
        type: "array"
        description: "An array of objects, each representing a specific list member."
        title: "Webhooks"
        items:
          $ref: "#/definitions/List Webhooks"
      list_id:
        type: "string"
        description: "The list id."
        title: "List ID"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "Manage webhooks for a specific list."
    example:
      list_id: "list_id"
      webhooks:
      - null
      - null
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      total_items: 0
  Add Webhook:
    type: "object"
    properties:
      url:
        type: "string"
        example: "http://yourdomain.com/webhook"
        description: "A valid URL for the Webhook."
        title: "URL"
      events:
        $ref: "#/definitions/Events_1"
      sources:
        $ref: "#/definitions/Sources"
    title: "Add Webhook"
    description: "Configure a webhook for the given list."
  Add Webhook_1:
    type: "object"
    properties:
      url:
        type: "string"
        example: "http://yourdomain.com/webhook"
        description: "A valid URL for the Webhook."
        title: "URL"
      events:
        $ref: "#/definitions/Events_1"
      sources:
        $ref: "#/definitions/Sources"
    title: "Add Webhook"
    description: "Configure a webhook for the given list."
  Signup form header options:
    type: "object"
    properties:
      image_url:
        type: "string"
        example: "http://gallery.mailchimp.com/332310cb9a420a9e7fea2858a/images/2491208c-9458-4834-a708-fef4ee736472.png"
        description: "Header image URL."
        title: "Header Image URL"
      text:
        type: "string"
        example: "Header Text goes here"
        description: "Header text."
        title: "Header Text"
      image_width:
        type: "string"
        example: "800"
        description: "Image width, in pixels."
        title: "Image width"
      image_height:
        type: "string"
        example: "200"
        description: "Image height, in pixels."
        title: "Image height"
      image_alt:
        type: "string"
        example: "This is an image"
        description: "Alt text for the image."
        title: "Image Alt"
      image_link:
        type: "string"
        example: "gotothisimage.com"
        description: "The URL that the header image will link to."
        title: "Image Link"
      image_align:
        type: "string"
        example: "center"
        description: "Image alignment."
        title: "Image align"
        enum:
        - "none"
        - "left"
        - "center"
        - "right"
      image_border_width:
        type: "string"
        example: "2"
        description: "Image border width."
        title: "Image border width"
      image_border_style:
        type: "string"
        example: "solid"
        description: "Image border style."
        title: "Image border style"
        enum:
        - "none"
        - "solid"
        - "dotted"
        - "dashed"
        - "double"
        - "groove"
        - "outset"
        - "inset"
        - "ridge"
      image_border_color:
        type: "string"
        example: "#896d6d"
        description: "Image border color."
        title: "Image border color"
      image_target:
        type: "string"
        example: "_blank"
        description: "Image link target."
        title: "Image target"
        enum:
        - "_blank"
        - "null"
    description: "Options for customizing your signup form header."
    example:
      image_height: "200"
      image_link: "gotothisimage.com"
      image_align: "center"
      image_border_color: "#896d6d"
      image_url: "http://gallery.mailchimp.com/332310cb9a420a9e7fea2858a/images/2491208c-9458-4834-a708-fef4ee736472.png"
      image_border_style: "solid"
      image_alt: "This is an image"
      text: "Header Text goes here"
      image_width: "800"
      image_target: "_blank"
      image_border_width: "2"
  Collection of Content for List Signup Forms:
    type: "object"
    properties:
      section:
        type: "string"
        example: "signup_message"
        description: "The content section name."
        title: "Content Section Name"
        enum:
        - "signup_message"
        - "unsub_message"
        - "signup_thank_you_title"
      value:
        type: "string"
        example: "Signup message goes here"
        description: "The content section text."
        title: "Content Section Value"
    description: "Collection of Content for List Signup Forms."
    example:
      section: "signup_message"
      value: "Signup message goes here"
  An option for Signup Form Styles:
    type: "object"
    properties:
      property:
        type: "string"
        example: "background-color"
        description: "A string that identifies the property."
        title: "Property"
      value:
        type: "string"
        example: "#111111"
        description: "A string that identifies value of the property."
        title: "Value"
    description: "An option for Signup Form Styles."
    example:
      property: "background-color"
      value: "#111111"
  Collection of Element style for List Signup Forms:
    type: "object"
    properties:
      selector:
        type: "string"
        example: "page_background"
        description: "A string that identifies the element selector."
        title: "Selector"
        enum:
        - "page_background"
        - "page_header"
        - "page_outer_wrapper"
        - "body_background"
        - "body_link_style"
        - "forms_buttons"
        - "forms_buttons_hovered"
        - "forms_field_label"
        - "forms_field_text"
        - "forms_required"
        - "forms_required_legend"
        - "forms_help_text"
        - "forms_errors"
        - "monkey_rewards_badge"
      options:
        type: "array"
        description: "A collection of options for a selector."
        title: "Options"
        items:
          $ref: "#/definitions/An option for Signup Form Styles"
    description: "Collection of Element style for List Signup Forms."
    example:
      options:
      - property: "background-color"
        value: "#111111"
      - property: "background-color"
        value: "#111111"
      selector: "page_background"
  Signup Form:
    type: "object"
    properties:
      header:
        $ref: "#/definitions/Signup form header options"
      contents:
        type: "array"
        description: "The signup form body content."
        title: "Signup form body content"
        items:
          $ref: "#/definitions/Collection of Content for List Signup Forms"
      styles:
        type: "array"
        description: "An array of objects, each representing an element style for\
          \ the signup form."
        title: "Signup Form element style"
        items:
          $ref: "#/definitions/Collection of Element style for List Signup Forms"
      signup_form_url:
        type: "string"
        description: "Signup form URL."
        title: "Signup form URL"
      list_id:
        type: "string"
        example: "4ca5becb8d"
        description: "The signup form's list id."
        title: "List ID"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "List signup form."
    example:
      list_id: "4ca5becb8d"
      contents:
      - section: "signup_message"
        value: "Signup message goes here"
      - section: "signup_message"
        value: "Signup message goes here"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      header:
        image_height: "200"
        image_link: "gotothisimage.com"
        image_align: "center"
        image_border_color: "#896d6d"
        image_url: "http://gallery.mailchimp.com/332310cb9a420a9e7fea2858a/images/2491208c-9458-4834-a708-fef4ee736472.png"
        image_border_style: "solid"
        image_alt: "This is an image"
        text: "Header Text goes here"
        image_width: "800"
        image_target: "_blank"
        image_border_width: "2"
      signup_form_url: "signup_form_url"
      styles:
      - options:
        - property: "background-color"
          value: "#111111"
        - property: "background-color"
          value: "#111111"
        selector: "page_background"
      - options:
        - property: "background-color"
          value: "#111111"
        - property: "background-color"
          value: "#111111"
        selector: "page_background"
  List Signup Forms:
    type: "object"
    properties:
      signup_forms:
        type: "array"
        description: "List signup form."
        title: "List Signup Form"
        items:
          $ref: "#/definitions/Signup Form"
      list_id:
        type: "string"
        description: "The list id."
        title: "List ID"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "List Signup Forms."
    example:
      list_id: "list_id"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      signup_forms:
      - list_id: "4ca5becb8d"
        contents:
        - section: "signup_message"
          value: "Signup message goes here"
        - section: "signup_message"
          value: "Signup message goes here"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        header:
          image_height: "200"
          image_link: "gotothisimage.com"
          image_align: "center"
          image_border_color: "#896d6d"
          image_url: "http://gallery.mailchimp.com/332310cb9a420a9e7fea2858a/images/2491208c-9458-4834-a708-fef4ee736472.png"
          image_border_style: "solid"
          image_alt: "This is an image"
          text: "Header Text goes here"
          image_width: "800"
          image_target: "_blank"
          image_border_width: "2"
        signup_form_url: "signup_form_url"
        styles:
        - options:
          - property: "background-color"
            value: "#111111"
          - property: "background-color"
            value: "#111111"
          selector: "page_background"
        - options:
          - property: "background-color"
            value: "#111111"
          - property: "background-color"
            value: "#111111"
          selector: "page_background"
      - list_id: "4ca5becb8d"
        contents:
        - section: "signup_message"
          value: "Signup message goes here"
        - section: "signup_message"
          value: "Signup message goes here"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        header:
          image_height: "200"
          image_link: "gotothisimage.com"
          image_align: "center"
          image_border_color: "#896d6d"
          image_url: "http://gallery.mailchimp.com/332310cb9a420a9e7fea2858a/images/2491208c-9458-4834-a708-fef4ee736472.png"
          image_border_style: "solid"
          image_alt: "This is an image"
          text: "Header Text goes here"
          image_width: "800"
          image_target: "_blank"
          image_border_width: "2"
        signup_form_url: "signup_form_url"
        styles:
        - options:
          - property: "background-color"
            value: "#111111"
          - property: "background-color"
            value: "#111111"
          selector: "page_background"
        - options:
          - property: "background-color"
            value: "#111111"
          - property: "background-color"
            value: "#111111"
          selector: "page_background"
      total_items: 0
  Signup Form_1:
    type: "object"
    properties:
      header:
        $ref: "#/definitions/Signup form header options"
      contents:
        type: "array"
        description: "The signup form body content."
        title: "Signup form body content"
        items:
          $ref: "#/definitions/Collection of Content for List Signup Forms"
      styles:
        type: "array"
        description: "An array of objects, each representing an element style for\
          \ the signup form."
        title: "Signup Form element style"
        items:
          $ref: "#/definitions/Collection of Element style for List Signup Forms"
    title: "Signup Form"
    description: "List signup form."
  List Location:
    type: "object"
    properties:
      country:
        type: "string"
        description: "The name of the country."
        title: "Country Name"
        readOnly: true
      cc:
        type: "string"
        description: "The ISO 3166 2 digit country code."
        title: "cc"
        readOnly: true
      percent:
        type: "number"
        description: "The percent of subscribers in the country."
        title: "percent"
        readOnly: true
      total:
        type: "integer"
        description: "The total number of subscribers in the country."
        title: "total"
        readOnly: true
    example:
      cc: "cc"
      country: "country"
      total: 6
      percent: 0.80082819046101150206595775671303272247314453125
  List Locations:
    type: "object"
    properties:
      locations:
        type: "array"
        description: "An array of objects, each representing a list's top subscriber\
          \ locations."
        title: "Locations"
        items:
          $ref: "#/definitions/List Location"
      list_id:
        type: "string"
        description: "The unique id for the list."
        title: "List ID"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A summary of List's locations."
    example:
      list_id: "list_id"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      locations:
      - cc: "cc"
        country: "country"
        total: 6
        percent: 0.80082819046101150206595775671303272247314453125
      - cc: "cc"
        country: "country"
        total: 6
        percent: 0.80082819046101150206595775671303272247314453125
      total_items: 1
  Tracking Settings:
    type: "object"
    properties:
      track_with_mailchimp:
        type: "boolean"
        description: "Use cookies to track unique visitors and calculate overall conversion\
          \ rate. Learn more [here](https://mailchimp.com/help/use-track-mailchimp/)."
        title: "Track with Mailchimp"
      enable_restricted_data_processing:
        type: "boolean"
        description: "Google offers restricted data processing in connection with\
          \ the California Consumer Privacy Act (CCPA) to restrict how Google uses\
          \ certain identifiers and other data processed in the provision of its services.\
          \ You can learn more about Google's restricted data processing within Google\
          \ Ads [here](https://privacy.google.com/businesses/rdp/)."
        title: "Enable restricted data processing"
    description: "The tracking settings applied to this landing page."
    example:
      track_with_mailchimp: true
      enable_restricted_data_processing: true
  Landing Page:
    type: "object"
    properties:
      id:
        type: "string"
        example: "030092c2e1f0"
        description: "A string that uniquely identifies this landing page."
        title: "Landing Page ID"
        readOnly: true
      name:
        type: "string"
        description: "The name of this landing page."
        title: "Landing Page Name"
      title:
        type: "string"
        description: "The title of this landing page seen in the browser's title bar."
        title: "Landing Page title"
      description:
        type: "string"
        description: "The description of this landing page."
        title: "Landing Page description"
      template_id:
        type: "integer"
        description: "The template_id of this landing page."
        title: "Landing Page template_id"
        readOnly: true
      status:
        type: "string"
        description: "The status of this landing page."
        title: "Landing Page status"
        readOnly: true
        enum:
        - "published"
        - "unpublished"
        - "draft"
      list_id:
        type: "string"
        example: "fde02ad86b"
        description: "The list's ID associated with this landing page."
        title: "Landing Page list id"
      store_id:
        type: "string"
        description: "The ID of the store associated with this landing page."
        title: "Store ID"
      web_id:
        type: "integer"
        description: "The ID used in the Mailchimp web application."
        title: "Landing Page Web ID"
      created_by_source:
        type: "string"
        description: "Created by mobile or web"
        title: "Created By Source"
        readOnly: true
      url:
        type: "string"
        description: "The url of the published landing page."
        title: "Published url"
        readOnly: true
      created_at:
        type: "string"
        format: "date-time"
        description: "The time this landing page was created."
        title: "Created At"
        readOnly: true
      published_at:
        type: "string"
        format: "date-time"
        description: "The time this landing page was published."
        title: "Published at"
        readOnly: true
      unpublished_at:
        type: "string"
        format: "date-time"
        description: "The time this landing page was unpublished."
        title: "Unpublished at"
        readOnly: true
      updated_at:
        type: "string"
        format: "date-time"
        description: "The time this landing page was updated at."
        title: "Updated_at"
        readOnly: true
      tracking:
        $ref: "#/definitions/Tracking Settings"
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A summary of an individual landing page's settings and content."
    example:
      store_id: "store_id"
      created_by_source: "created_by_source"
      list_id: "fde02ad86b"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      description: "description"
      created_at: "2000-01-23T04:56:07.000+00:00"
      web_id: 6
      title: "title"
      tracking:
        track_with_mailchimp: true
        enable_restricted_data_processing: true
      url: "url"
      updated_at: "2000-01-23T04:56:07.000+00:00"
      name: "name"
      template_id: 0
      id: "030092c2e1f0"
      published_at: "2000-01-23T04:56:07.000+00:00"
      status: "published"
      unpublished_at: "2000-01-23T04:56:07.000+00:00"
  inline_response_200_6:
    type: "object"
    properties:
      landing_pages:
        type: "array"
        description: "The landing pages on the account"
        items:
          $ref: "#/definitions/Landing Page"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A collection of landing pages."
    example:
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      landing_pages:
      - store_id: "store_id"
        created_by_source: "created_by_source"
        list_id: "fde02ad86b"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        description: "description"
        created_at: "2000-01-23T04:56:07.000+00:00"
        web_id: 6
        title: "title"
        tracking:
          track_with_mailchimp: true
          enable_restricted_data_processing: true
        url: "url"
        updated_at: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        template_id: 0
        id: "030092c2e1f0"
        published_at: "2000-01-23T04:56:07.000+00:00"
        status: "published"
        unpublished_at: "2000-01-23T04:56:07.000+00:00"
      - store_id: "store_id"
        created_by_source: "created_by_source"
        list_id: "fde02ad86b"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        description: "description"
        created_at: "2000-01-23T04:56:07.000+00:00"
        web_id: 6
        title: "title"
        tracking:
          track_with_mailchimp: true
          enable_restricted_data_processing: true
        url: "url"
        updated_at: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        template_id: 0
        id: "030092c2e1f0"
        published_at: "2000-01-23T04:56:07.000+00:00"
        status: "published"
        unpublished_at: "2000-01-23T04:56:07.000+00:00"
      total_items: 1
  Landing Page_1:
    type: "object"
    properties:
      name:
        type: "string"
        description: "The name of this landing page."
        title: "Landing Page Name"
      title:
        type: "string"
        description: "The title of this landing page seen in the browser's title bar."
        title: "Landing Page title"
      description:
        type: "string"
        description: "The description of this landing page."
        title: "Landing Page description"
      store_id:
        type: "string"
        description: "The ID of the store associated with this landing page."
        title: "Store ID"
      list_id:
        type: "string"
        description: "The list's ID associated with this landing page."
        title: "Landing Page list id"
      type:
        type: "string"
        example: "signup"
        description: "The type of template the landing page has."
        title: "Landing Page Template Type"
        enum:
        - "signup"
        - "product"
      template_id:
        type: "integer"
        example: 1001
        description: "The template_id of this landing page."
        title: "Landing Page template_id"
      tracking:
        $ref: "#/definitions/Tracking Settings"
    title: "Landing Page"
    description: "A summary of an individual page's properties."
  Landing Page_2:
    type: "object"
    properties:
      name:
        type: "string"
        description: "The name of this landing page."
        title: "Landing Page Name"
      title:
        type: "string"
        description: "The title of this landing page seen in the browser's title bar."
        title: "Landing Page title"
      description:
        type: "string"
        description: "The description of this landing page."
        title: "Landing Page description"
      store_id:
        type: "string"
        description: "The ID of the store associated with this landing page."
        title: "Store ID"
      list_id:
        type: "string"
        description: "The list's ID associated with this landing page."
        title: "Landing Page list id"
      tracking:
        $ref: "#/definitions/Tracking Settings"
    title: "Landing Page"
    description: "A summary of an individual page's properties."
  Landing Page Content:
    type: "object"
    properties:
      html:
        type: "string"
        description: "The raw HTML for the landing page."
        title: "Landing Page HTML"
      json:
        type: "string"
        description: "The JSON Structure for the landing page"
        title: "Landing Page JSON"
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "The HTML content for a landing page."
    example:
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      json: "json"
      html: "html"
  Bounces:
    type: "object"
    properties:
      hard_bounces:
        type: "integer"
        description: "The total number of hard bounced email addresses."
        title: "Hard Bounces"
      soft_bounces:
        type: "integer"
        description: "The total number of soft bounced email addresses."
        title: "Soft Bounces"
      syntax_errors:
        type: "integer"
        description: "The total number of addresses that were syntax-related bounces."
        title: "Syntax Errors"
    description: "An object describing the bounce summary for the campaign."
    example:
      hard_bounces: 5
      syntax_errors: 2
      soft_bounces: 5
  Forwards:
    type: "object"
    properties:
      forwards_count:
        type: "integer"
        description: "How many times the campaign has been forwarded."
        title: "Total Forwards"
      forwards_opens:
        type: "integer"
        description: "How many times the forwarded campaign has been opened."
        title: "Forward Opens"
    description: "An object describing the forwards and forward activity for the campaign."
    example:
      forwards_count: 7
      forwards_opens: 9
  Opens:
    type: "object"
    properties:
      opens_total:
        type: "integer"
        description: "The total number of opens for a campaign."
        title: "Total Opens"
      unique_opens:
        type: "integer"
        description: "The total number of unique opens."
        title: "Unique Opens"
      open_rate:
        type: "number"
        description: "The number of unique opens divided by the total number of successful\
          \ deliveries."
        title: "Open Rate"
      last_open:
        type: "string"
        format: "date-time"
        description: "The date and time of the last recorded open in ISO 8601 format."
        title: "Last Open"
    description: "An object describing the open activity for the campaign."
    example:
      opens_total: 3
      last_open: "2000-01-23T04:56:07.000+00:00"
      unique_opens: 2
      open_rate: 4.1456080298839363962315474054776132106781005859375
  Clicks:
    type: "object"
    properties:
      clicks_total:
        type: "integer"
        description: "The total number of clicks for the campaign."
        title: "Total Clicks"
      unique_clicks:
        type: "integer"
        description: "The total number of unique clicks for links across a campaign."
        title: "Unique Clicks"
      unique_subscriber_clicks:
        type: "integer"
        description: "The total number of subscribers who clicked on a campaign."
        title: "Unique Subscriber Clicks"
      click_rate:
        type: "number"
        description: "The number of unique clicks divided by the total number of successful\
          \ deliveries."
        title: "Click Rate"
      last_click:
        type: "string"
        format: "date-time"
        description: "The date and time of the last recorded click for the campaign\
          \ in ISO 8601 format."
        title: "Last Click"
    description: "An object describing the click activity for the campaign."
    example:
      clicks_total: 7
      unique_clicks: 1
      click_rate: 1.489415909854170383397331534069962799549102783203125
      last_click: "2000-01-23T04:56:07.000+00:00"
      unique_subscriber_clicks: 1
  Facebook Likes:
    type: "object"
    properties:
      recipient_likes:
        type: "integer"
        description: "The number of recipients who liked the campaign on Facebook."
        title: "Recipient Likes"
      unique_likes:
        type: "integer"
        description: "The number of unique likes."
        title: "Unique Likes"
      facebook_likes:
        type: "integer"
        description: "The number of Facebook likes for the campaign."
        title: "Facebook Likes"
    description: "An object describing campaign engagement on Facebook."
    example:
      facebook_likes: 1
      unique_likes: 7
      recipient_likes: 6
  Industry Stats_1:
    type: "object"
    properties:
      type:
        type: "string"
        description: "The type of business industry associated with your account.\
          \ For example: retail, education, etc."
        title: "Industry Type"
      open_rate:
        type: "number"
        description: "The industry open rate."
        title: "Open Rate"
      click_rate:
        type: "number"
        description: "The industry click rate."
        title: "Click Rate"
      bounce_rate:
        type: "number"
        description: "The industry bounce rate."
        title: "Bounce Rate"
      unopen_rate:
        type: "number"
        description: "The industry unopened rate."
        title: "Unopened Rate"
      unsub_rate:
        type: "number"
        description: "The industry unsubscribe rate."
        title: "Unsubscribe Rate"
      abuse_rate:
        type: "number"
        description: "The industry abuse rate."
        title: "Abuse Rate"
    description: "The average campaign statistics for your industry."
    example:
      unopen_rate: 9.3693102714106686335071572102606296539306640625
      click_rate: 5.02500479152029466689555192715488374233245849609375
      bounce_rate: 9.965781217890562260208753286860883235931396484375
      unsub_rate: 6.683562403749608193948006373830139636993408203125
      type: "type"
      abuse_rate: 8.7620420127490010742121739895083010196685791015625
      open_rate: 4.9652184929849543237878606305457651615142822265625
  List Stats:
    type: "object"
    properties:
      sub_rate:
        type: "number"
        description: "The average number of subscriptions per month for the list."
        title: "Average Subscription Rate"
        readOnly: true
      unsub_rate:
        type: "number"
        description: "The average number of unsubscriptions per month for the list."
        title: "Average Unsubscription Rate"
        readOnly: true
      open_rate:
        type: "number"
        description: "The average open rate (a percentage represented as a number\
          \ between 0 and 100) per campaign for the list."
        title: "Open Rate"
        readOnly: true
      click_rate:
        type: "number"
        description: "The average click rate (a percentage represented as a number\
          \ between 0 and 100) per campaign for the list."
        title: "Click Rate"
        readOnly: true
    description: "The average campaign statistics for your list. This won't be present\
      \ if we haven't calculated it yet for this list."
    example:
      sub_rate: 9.0183481860707832566959041287191212177276611328125
      click_rate: 6.96511769763884558415156789124011993408203125
      unsub_rate: 6.438423552598546706349225132726132869720458984375
      open_rate: 3.557195227068097320710649000830017030239105224609375
  Campaign A:
    type: "object"
    properties:
      bounces:
        type: "integer"
        description: "Bounces for Campaign A."
        title: "Bounces"
      abuse_reports:
        type: "integer"
        description: "Abuse reports for Campaign A."
        title: "Abuse Reports"
      unsubs:
        type: "integer"
        description: "Unsubscribes for Campaign A."
        title: "Unsubscribes"
      recipient_clicks:
        type: "integer"
        description: "Recipient Clicks for Campaign A."
        title: "Recipient Clicks"
      forwards:
        type: "integer"
        description: "Forwards for Campaign A."
        title: "Forwards"
      forwards_opens:
        type: "integer"
        description: "Opens from forwards for Campaign A."
        title: "Forward Opens"
      opens:
        type: "integer"
        description: "Opens for Campaign A."
        title: "Opens"
      last_open:
        type: "string"
        description: "The last open for Campaign A."
        title: "Last Open"
      unique_opens:
        type: "integer"
        description: "Unique opens for Campaign A."
        title: "Unique Opens"
    description: "Stats for Campaign A."
    example:
      forwards: 5
      unsubs: 6
      opens: 3
      bounces: 1
      recipient_clicks: 6
      forwards_opens: 6
      last_open: "last_open"
      abuse_reports: 2
      unique_opens: 3
  Campaign B:
    type: "object"
    properties:
      bounces:
        type: "integer"
        description: "Bounces for Campaign B."
        title: "Bounces"
      abuse_reports:
        type: "integer"
        description: "Abuse reports for Campaign B."
        title: "Abuse Reports"
      unsubs:
        type: "integer"
        description: "Unsubscribes for Campaign B."
        title: "Unsubscribes"
      recipient_clicks:
        type: "integer"
        description: "Recipients clicks for Campaign B."
        title: "Recipient Clicks"
      forwards:
        type: "integer"
        description: "Forwards for Campaign B."
        title: "Forwards"
      forwards_opens:
        type: "integer"
        description: "Opens for forwards from Campaign B."
        title: "Forward Opens"
      opens:
        type: "integer"
        description: "Opens for Campaign B."
        title: "Opens"
      last_open:
        type: "string"
        description: "The last open for Campaign B."
        title: "Last Open"
      unique_opens:
        type: "integer"
        description: "Unique opens for Campaign B."
        title: "Unique Opens"
    description: "Stats for Campaign B."
    example:
      forwards: 0
      unsubs: 7
      opens: 8
      bounces: 7
      recipient_clicks: 6
      forwards_opens: 4
      last_open: "last_open"
      abuse_reports: 0
      unique_opens: 7
  AB Split Stats:
    type: "object"
    properties:
      a:
        $ref: "#/definitions/Campaign A"
      b:
        $ref: "#/definitions/Campaign B"
    description: "General stats about different groups of an A/B Split campaign. Does\
      \ not return information about Multivariate Campaigns."
    example:
      a:
        forwards: 5
        unsubs: 6
        opens: 3
        bounces: 1
        recipient_clicks: 6
        forwards_opens: 6
        last_open: "last_open"
        abuse_reports: 2
        unique_opens: 3
      b:
        forwards: 0
        unsubs: 7
        opens: 8
        bounces: 7
        recipient_clicks: 6
        forwards_opens: 4
        last_open: "last_open"
        abuse_reports: 0
        unique_opens: 7
  Campaign Reports_1_timewarp:
    type: "object"
    properties:
      gmt_offset:
        type: "integer"
        description: "For campaigns sent with timewarp, the time zone group the member\
          \ is apart of."
        title: "GMT Offset"
      opens:
        type: "integer"
        description: "The number of opens."
        title: "Opens"
      last_open:
        type: "string"
        format: "date-time"
        description: "The date and time of the last open in ISO 8601 format."
        title: "Last Open"
      unique_opens:
        type: "integer"
        description: "The number of unique opens."
        title: "Unique Opens"
      clicks:
        type: "integer"
        description: "The number of clicks."
        title: "Clicks"
      last_click:
        type: "string"
        format: "date-time"
        description: "The date and time of the last click in ISO 8601 format."
        title: "Last Click"
      unique_clicks:
        type: "integer"
        description: "The number of unique clicks."
        title: "Unique Clicks"
      bounces:
        type: "integer"
        description: "The number of bounces."
        title: "Bounces"
    example:
      unique_clicks: 3
      opens: 3
      clicks: 5
      last_click: "2000-01-23T04:56:07.000+00:00"
      gmt_offset: 3
      bounces: 4
      last_open: "2000-01-23T04:56:07.000+00:00"
      unique_opens: 7
  Campaign Reports_1_timeseries:
    type: "object"
    properties:
      timestamp:
        type: "string"
        format: "date-time"
        description: "The date and time for the series in ISO 8601 format."
        title: "Timestamp"
      emails_sent:
        type: "integer"
        description: "The number of emails sent in the timeseries."
        title: "Emails Sent"
      unique_opens:
        type: "integer"
        description: "The number of unique opens in the timeseries."
        title: "Unique Opens"
      recipients_clicks:
        type: "integer"
        description: "The number of clicks in the timeseries."
        title: "Recipient Clicks"
    example:
      emails_sent: 0
      recipients_clicks: 4
      unique_opens: 6
      timestamp: "2000-01-23T04:56:07.000+00:00"
  Share Report:
    type: "object"
    properties:
      share_url:
        type: "string"
        description: "The URL for the VIP report."
        title: "Report URL"
        readOnly: true
      share_password:
        type: "string"
        description: "If password protected, the password for the VIP report."
        title: "Report Password"
        readOnly: true
    description: "The url and password for the [VIP report](https://mailchimp.com/help/share-a-campaign-report/)."
    example:
      share_url: "share_url"
      share_password: "share_password"
  ECommerce Report_1:
    type: "object"
    properties:
      total_orders:
        type: "integer"
        description: "The total orders for a campaign."
        title: "Total Orders"
        readOnly: true
      total_spent:
        type: "number"
        description: "The total spent for a campaign. Calculated as the sum of all\
          \ order totals with no deductions."
        title: "Total Spent"
        readOnly: true
      total_revenue:
        type: "number"
        description: "The total revenue for a campaign. Calculated as the sum of all\
          \ order totals minus shipping and tax totals."
        title: "Total Revenue"
        readOnly: true
      currency_code:
        type: "string"
        example: "USD"
        title: "Three letter currency code for this user"
        readOnly: true
    description: "E-Commerce stats for a campaign."
    example:
      total_spent: 4.67894798900584873990737833082675933837890625
      total_revenue: 7.26052126480210358039357743109576404094696044921875
      total_orders: 1
      currency_code: "USD"
  Campaign Report:
    type: "object"
    properties:
      id:
        type: "string"
        description: "A string that uniquely identifies this campaign."
        title: "Campaign ID"
      campaign_title:
        type: "string"
        description: "The title of the campaign."
        title: "Campaign Title"
        readOnly: true
      type:
        type: "string"
        description: "The type of campaign (regular, plain-text, ab_split, rss, automation,\
          \ variate, or auto)."
        title: "Campaign Type"
      list_id:
        type: "string"
        description: "The unique list id."
        title: "List ID"
        readOnly: true
      list_is_active:
        type: "boolean"
        description: "The status of the list used, namely if it's deleted or disabled."
        title: "List Status"
        readOnly: true
      list_name:
        type: "string"
        description: "The name of the list."
        title: "List Name"
        readOnly: true
      subject_line:
        type: "string"
        description: "The subject line for the campaign."
        title: "Campaign Subject Line"
        readOnly: true
      preview_text:
        type: "string"
        description: "The preview text for the campaign."
        title: "Campaign Preview Text"
      emails_sent:
        type: "integer"
        description: "The total number of emails sent for this campaign."
        title: "Emails Sent"
      abuse_reports:
        type: "integer"
        description: "The number of abuse reports generated for this campaign."
        title: "Abuse Reports"
      unsubscribed:
        type: "integer"
        description: "The total number of unsubscribed members for this campaign."
        title: "Unsubscribe Count"
        readOnly: true
      send_time:
        type: "string"
        format: "date-time"
        description: "The date and time a campaign was sent in ISO 8601 format."
        title: "Send Time"
        readOnly: true
      rss_last_send:
        type: "string"
        format: "date-time"
        description: "For RSS campaigns, the date and time of the last send in ISO\
          \ 8601 format."
        title: "RSS Last Send"
        readOnly: true
      bounces:
        $ref: "#/definitions/Bounces"
      forwards:
        $ref: "#/definitions/Forwards"
      opens:
        $ref: "#/definitions/Opens"
      clicks:
        $ref: "#/definitions/Clicks"
      facebook_likes:
        $ref: "#/definitions/Facebook Likes"
      industry_stats:
        $ref: "#/definitions/Industry Stats_1"
      list_stats:
        $ref: "#/definitions/List Stats"
      ab_split:
        $ref: "#/definitions/AB Split Stats"
      timewarp:
        type: "array"
        description: "An hourly breakdown of sends, opens, and clicks if a campaign\
          \ is sent using timewarp."
        title: "Timewarp Stats"
        items:
          $ref: "#/definitions/Campaign Reports_1_timewarp"
      timeseries:
        type: "array"
        description: "An hourly breakdown of the performance of the campaign over\
          \ the first 24 hours."
        title: "Timeseries"
        items:
          $ref: "#/definitions/Campaign Reports_1_timeseries"
      share_report:
        $ref: "#/definitions/Share Report"
      ecommerce:
        $ref: "#/definitions/ECommerce Report_1"
      delivery_status:
        $ref: "#/definitions/Campaign Delivery Status"
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "Report details about a sent campaign."
    example:
      forwards:
        forwards_count: 7
        forwards_opens: 9
      share_report:
        share_url: "share_url"
        share_password: "share_password"
      preview_text: "preview_text"
      list_id: "list_id"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      rss_last_send: "2000-01-23T04:56:07.000+00:00"
      list_name: "list_name"
      type: "type"
      list_is_active: true
      industry_stats:
        unopen_rate: 9.3693102714106686335071572102606296539306640625
        click_rate: 5.02500479152029466689555192715488374233245849609375
        bounce_rate: 9.965781217890562260208753286860883235931396484375
        unsub_rate: 6.683562403749608193948006373830139636993408203125
        type: "type"
        abuse_rate: 8.7620420127490010742121739895083010196685791015625
        open_rate: 4.9652184929849543237878606305457651615142822265625
      list_stats:
        sub_rate: 9.0183481860707832566959041287191212177276611328125
        click_rate: 6.96511769763884558415156789124011993408203125
        unsub_rate: 6.438423552598546706349225132726132869720458984375
        open_rate: 3.557195227068097320710649000830017030239105224609375
      campaign_title: "campaign_title"
      facebook_likes:
        facebook_likes: 1
        unique_likes: 7
        recipient_likes: 6
      timeseries:
      - emails_sent: 0
        recipients_clicks: 4
        unique_opens: 6
        timestamp: "2000-01-23T04:56:07.000+00:00"
      - emails_sent: 0
        recipients_clicks: 4
        unique_opens: 6
        timestamp: "2000-01-23T04:56:07.000+00:00"
      emails_sent: 0
      ecommerce:
        total_spent: 4.67894798900584873990737833082675933837890625
        total_revenue: 7.26052126480210358039357743109576404094696044921875
        total_orders: 1
        currency_code: "USD"
      id: "id"
      bounces:
        hard_bounces: 5
        syntax_errors: 2
        soft_bounces: 5
      subject_line: "subject_line"
      ab_split:
        a:
          forwards: 5
          unsubs: 6
          opens: 3
          bounces: 1
          recipient_clicks: 6
          forwards_opens: 6
          last_open: "last_open"
          abuse_reports: 2
          unique_opens: 3
        b:
          forwards: 0
          unsubs: 7
          opens: 8
          bounces: 7
          recipient_clicks: 6
          forwards_opens: 4
          last_open: "last_open"
          abuse_reports: 0
          unique_opens: 7
      timewarp:
      - unique_clicks: 3
        opens: 3
        clicks: 5
        last_click: "2000-01-23T04:56:07.000+00:00"
        gmt_offset: 3
        bounces: 4
        last_open: "2000-01-23T04:56:07.000+00:00"
        unique_opens: 7
      - unique_clicks: 3
        opens: 3
        clicks: 5
        last_click: "2000-01-23T04:56:07.000+00:00"
        gmt_offset: 3
        bounces: 4
        last_open: "2000-01-23T04:56:07.000+00:00"
        unique_opens: 7
      unsubscribed: 1
      send_time: "2000-01-23T04:56:07.000+00:00"
      opens:
        opens_total: 3
        last_open: "2000-01-23T04:56:07.000+00:00"
        unique_opens: 2
        open_rate: 4.1456080298839363962315474054776132106781005859375
      clicks:
        clicks_total: 7
        unique_clicks: 1
        click_rate: 1.489415909854170383397331534069962799549102783203125
        last_click: "2000-01-23T04:56:07.000+00:00"
        unique_subscriber_clicks: 1
      abuse_reports: 6
      delivery_status:
        emails_sent: 6
        can_cancel: true
        emails_canceled: 3
        enabled: true
        status: "delivering"
  Campaign Reports_1:
    type: "object"
    properties:
      reports:
        type: "array"
        description: "An array of objects, each representing a report resource."
        title: "Lists"
        items:
          $ref: "#/definitions/Campaign Report"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A list of reports containing campaigns marked as Sent."
    example:
      reports:
      - forwards:
          forwards_count: 7
          forwards_opens: 9
        share_report:
          share_url: "share_url"
          share_password: "share_password"
        preview_text: "preview_text"
        list_id: "list_id"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        rss_last_send: "2000-01-23T04:56:07.000+00:00"
        list_name: "list_name"
        type: "type"
        list_is_active: true
        industry_stats:
          unopen_rate: 9.3693102714106686335071572102606296539306640625
          click_rate: 5.02500479152029466689555192715488374233245849609375
          bounce_rate: 9.965781217890562260208753286860883235931396484375
          unsub_rate: 6.683562403749608193948006373830139636993408203125
          type: "type"
          abuse_rate: 8.7620420127490010742121739895083010196685791015625
          open_rate: 4.9652184929849543237878606305457651615142822265625
        list_stats:
          sub_rate: 9.0183481860707832566959041287191212177276611328125
          click_rate: 6.96511769763884558415156789124011993408203125
          unsub_rate: 6.438423552598546706349225132726132869720458984375
          open_rate: 3.557195227068097320710649000830017030239105224609375
        campaign_title: "campaign_title"
        facebook_likes:
          facebook_likes: 1
          unique_likes: 7
          recipient_likes: 6
        timeseries:
        - emails_sent: 0
          recipients_clicks: 4
          unique_opens: 6
          timestamp: "2000-01-23T04:56:07.000+00:00"
        - emails_sent: 0
          recipients_clicks: 4
          unique_opens: 6
          timestamp: "2000-01-23T04:56:07.000+00:00"
        emails_sent: 0
        ecommerce:
          total_spent: 4.67894798900584873990737833082675933837890625
          total_revenue: 7.26052126480210358039357743109576404094696044921875
          total_orders: 1
          currency_code: "USD"
        id: "id"
        bounces:
          hard_bounces: 5
          syntax_errors: 2
          soft_bounces: 5
        subject_line: "subject_line"
        ab_split:
          a:
            forwards: 5
            unsubs: 6
            opens: 3
            bounces: 1
            recipient_clicks: 6
            forwards_opens: 6
            last_open: "last_open"
            abuse_reports: 2
            unique_opens: 3
          b:
            forwards: 0
            unsubs: 7
            opens: 8
            bounces: 7
            recipient_clicks: 6
            forwards_opens: 4
            last_open: "last_open"
            abuse_reports: 0
            unique_opens: 7
        timewarp:
        - unique_clicks: 3
          opens: 3
          clicks: 5
          last_click: "2000-01-23T04:56:07.000+00:00"
          gmt_offset: 3
          bounces: 4
          last_open: "2000-01-23T04:56:07.000+00:00"
          unique_opens: 7
        - unique_clicks: 3
          opens: 3
          clicks: 5
          last_click: "2000-01-23T04:56:07.000+00:00"
          gmt_offset: 3
          bounces: 4
          last_open: "2000-01-23T04:56:07.000+00:00"
          unique_opens: 7
        unsubscribed: 1
        send_time: "2000-01-23T04:56:07.000+00:00"
        opens:
          opens_total: 3
          last_open: "2000-01-23T04:56:07.000+00:00"
          unique_opens: 2
          open_rate: 4.1456080298839363962315474054776132106781005859375
        clicks:
          clicks_total: 7
          unique_clicks: 1
          click_rate: 1.489415909854170383397331534069962799549102783203125
          last_click: "2000-01-23T04:56:07.000+00:00"
          unique_subscriber_clicks: 1
        abuse_reports: 6
        delivery_status:
          emails_sent: 6
          can_cancel: true
          emails_canceled: 3
          enabled: true
          status: "delivering"
      - forwards:
          forwards_count: 7
          forwards_opens: 9
        share_report:
          share_url: "share_url"
          share_password: "share_password"
        preview_text: "preview_text"
        list_id: "list_id"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        rss_last_send: "2000-01-23T04:56:07.000+00:00"
        list_name: "list_name"
        type: "type"
        list_is_active: true
        industry_stats:
          unopen_rate: 9.3693102714106686335071572102606296539306640625
          click_rate: 5.02500479152029466689555192715488374233245849609375
          bounce_rate: 9.965781217890562260208753286860883235931396484375
          unsub_rate: 6.683562403749608193948006373830139636993408203125
          type: "type"
          abuse_rate: 8.7620420127490010742121739895083010196685791015625
          open_rate: 4.9652184929849543237878606305457651615142822265625
        list_stats:
          sub_rate: 9.0183481860707832566959041287191212177276611328125
          click_rate: 6.96511769763884558415156789124011993408203125
          unsub_rate: 6.438423552598546706349225132726132869720458984375
          open_rate: 3.557195227068097320710649000830017030239105224609375
        campaign_title: "campaign_title"
        facebook_likes:
          facebook_likes: 1
          unique_likes: 7
          recipient_likes: 6
        timeseries:
        - emails_sent: 0
          recipients_clicks: 4
          unique_opens: 6
          timestamp: "2000-01-23T04:56:07.000+00:00"
        - emails_sent: 0
          recipients_clicks: 4
          unique_opens: 6
          timestamp: "2000-01-23T04:56:07.000+00:00"
        emails_sent: 0
        ecommerce:
          total_spent: 4.67894798900584873990737833082675933837890625
          total_revenue: 7.26052126480210358039357743109576404094696044921875
          total_orders: 1
          currency_code: "USD"
        id: "id"
        bounces:
          hard_bounces: 5
          syntax_errors: 2
          soft_bounces: 5
        subject_line: "subject_line"
        ab_split:
          a:
            forwards: 5
            unsubs: 6
            opens: 3
            bounces: 1
            recipient_clicks: 6
            forwards_opens: 6
            last_open: "last_open"
            abuse_reports: 2
            unique_opens: 3
          b:
            forwards: 0
            unsubs: 7
            opens: 8
            bounces: 7
            recipient_clicks: 6
            forwards_opens: 4
            last_open: "last_open"
            abuse_reports: 0
            unique_opens: 7
        timewarp:
        - unique_clicks: 3
          opens: 3
          clicks: 5
          last_click: "2000-01-23T04:56:07.000+00:00"
          gmt_offset: 3
          bounces: 4
          last_open: "2000-01-23T04:56:07.000+00:00"
          unique_opens: 7
        - unique_clicks: 3
          opens: 3
          clicks: 5
          last_click: "2000-01-23T04:56:07.000+00:00"
          gmt_offset: 3
          bounces: 4
          last_open: "2000-01-23T04:56:07.000+00:00"
          unique_opens: 7
        unsubscribed: 1
        send_time: "2000-01-23T04:56:07.000+00:00"
        opens:
          opens_total: 3
          last_open: "2000-01-23T04:56:07.000+00:00"
          unique_opens: 2
          open_rate: 4.1456080298839363962315474054776132106781005859375
        clicks:
          clicks_total: 7
          unique_clicks: 1
          click_rate: 1.489415909854170383397331534069962799549102783203125
          last_click: "2000-01-23T04:56:07.000+00:00"
          unique_subscriber_clicks: 1
        abuse_reports: 6
        delivery_status:
          emails_sent: 6
          can_cancel: true
          emails_canceled: 3
          enabled: true
          status: "delivering"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      total_items: 9
  Abuse Complaint_1:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "The id for the abuse report"
        title: "Abuse Report ID"
        readOnly: true
      campaign_id:
        type: "string"
        description: "The campaign id for the abuse report"
        title: "Campaign ID"
        readOnly: true
      list_id:
        type: "string"
        description: "The unique id of the list for the abuse report."
        title: "List ID"
        readOnly: true
      list_is_active:
        type: "boolean"
        description: "The status of the list used, namely if it's deleted or disabled."
        title: "List Status"
        readOnly: true
      email_id:
        type: "string"
        description: "The MD5 hash of the lowercase version of the list member's email\
          \ address."
        title: "Email Hash"
        readOnly: true
      email_address:
        type: "string"
        description: "Email address for a subscriber."
        title: "Email Address"
        readOnly: true
      merge_fields:
        type: "object"
        description: "A dictionary of merge fields where the keys are the merge tags.\
          \ See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
          \ for more about the structure."
        title: "Merge Fields"
        additionalProperties:
          description: "This object's keys are merge tags (like FNAME). It's values\
            \ are the values to be added to the merge field."
      vip:
        type: "boolean"
        description: "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/)\
          \ for subscriber."
        title: "VIP"
        readOnly: true
      date:
        type: "string"
        format: "date-time"
        description: "Date for the abuse report"
        title: "Date"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "Details of abuse complaints for a specific list. An abuse complaint\
      \ occurs when your recipient clicks to 'report spam' in their email program."
    example:
      email_id: "email_id"
      date: "2000-01-23T04:56:07.000+00:00"
      email_address: "email_address"
      list_id: "list_id"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      merge_fields:
        key: ""
      id: 0
      list_is_active: true
      vip: true
      campaign_id: "campaign_id"
  Abuse Complaints_1:
    type: "object"
    properties:
      abuse_reports:
        type: "array"
        description: "An array of objects, each representing an abuse report resource."
        title: "Abuse Reports"
        items:
          $ref: "#/definitions/Abuse Complaint_1"
      campaign_id:
        type: "string"
        description: "The campaign id."
        title: "Campaign ID"
        readOnly: true
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A list of abuse complaints for a specific list."
    example:
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      total_items: 6
      abuse_reports:
      - email_id: "email_id"
        date: "2000-01-23T04:56:07.000+00:00"
        email_address: "email_address"
        list_id: "list_id"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        merge_fields:
          key: ""
        id: 0
        list_is_active: true
        vip: true
        campaign_id: "campaign_id"
      - email_id: "email_id"
        date: "2000-01-23T04:56:07.000+00:00"
        email_address: "email_address"
        list_id: "list_id"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        merge_fields:
          key: ""
        id: 0
        list_is_active: true
        vip: true
        campaign_id: "campaign_id"
      campaign_id: "campaign_id"
  Campaign Advice:
    type: "object"
    properties:
      type:
        type: "string"
        description: "The sentiment type for a feedback message."
        title: "Advice Type"
        readOnly: true
        enum:
        - "negative"
        - "positive"
        - "neutral"
      message:
        type: "string"
        description: "The advice message."
        title: "Advice Message"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "Campaign feedback details."
    example:
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      type: "negative"
      message: "message"
  Campaign Advice Report:
    type: "object"
    properties:
      advice:
        type: "array"
        description: "An array of objects, each representing a point of campaign feedback."
        title: "Campaign Advice"
        items:
          $ref: "#/definitions/Campaign Advice"
      campaign_id:
        type: "string"
        description: "The campaign id."
        title: "Campaign ID"
        readOnly: true
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A list of feedback based on a campaign's statistics."
    example:
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      advice:
      - _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        type: "negative"
        message: "message"
      - _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        type: "negative"
        message: "message"
      total_items: 0
      campaign_id: "campaign_id"
  Group A:
    type: "object"
    properties:
      total_clicks_a:
        type: "integer"
        description: "The total number of clicks for Group A."
        title: "Total Clicks Group A"
        readOnly: true
      click_percentage_a:
        type: "number"
        description: "The percentage of total clicks for Group A."
        title: "Click Percentage Group A"
        readOnly: true
      unique_clicks_a:
        type: "integer"
        description: "The number of unique clicks for Group A."
        title: "Unique Clicks Group A"
        readOnly: true
      unique_click_percentage_a:
        type: "number"
        description: "The percentage of unique clicks for Group A."
        title: "Unique Click Percentage Group A"
        readOnly: true
    description: "Stats for Group A."
  Group B:
    type: "object"
    properties:
      total_clicks_b:
        type: "integer"
        description: "The total number of clicks for Group B."
        title: "Total Clicks Group B"
        readOnly: true
      click_percentage_b:
        type: "number"
        description: "The percentage of total clicks for Group B."
        title: "Click Percentage Group B"
        readOnly: true
      unique_clicks_b:
        type: "integer"
        description: "The number of unique clicks for Group B."
        title: "Unique Clicks Group B"
        readOnly: true
      unique_click_percentage_b:
        type: "number"
        description: "The percentage of unique clicks for Group B."
        title: "Unique Click Percentage Group B"
        readOnly: true
    description: "Stats for Group B."
  AB Split:
    type: "object"
    properties:
      a:
        $ref: "#/definitions/Group A"
      b:
        $ref: "#/definitions/Group B"
    description: "A breakdown of clicks by different groups of an A/B Split campaign.\
      \ Does not return information about Multivariate Campaigns."
  Click Detail Report:
    type: "object"
    properties:
      urls_clicked:
        type: "array"
        description: "An array of objects, each representing a specific URL contained\
          \ in the campaign."
        title: "URLs Clicked"
        items:
          $ref: "#/definitions/Click Detail Report"
      campaign_id:
        type: "string"
        description: "The campaign id."
        title: "Campaign ID"
        readOnly: true
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A list of URLs and unique IDs included in HTML and plain-text versions\
      \ of a campaign."
    example:
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      urls_clicked:
      - null
      - null
      total_items: 0
      campaign_id: "campaign_id"
  Click Detail Member:
    type: "object"
    properties:
      email_id:
        type: "string"
        description: "The MD5 hash of the lowercase version of the list member's email\
          \ address."
        title: "Email Hash"
        readOnly: true
      email_address:
        type: "string"
        description: "Email address for a subscriber."
        title: "Email Address"
        readOnly: true
      merge_fields:
        type: "object"
        description: "A dictionary of merge fields where the keys are the merge tags.\
          \ See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
          \ for more about the structure."
        title: "Merge Fields"
        additionalProperties:
          description: "This object's keys are merge tags (like FNAME). It's values\
            \ are the values to be added to the merge field."
      vip:
        type: "boolean"
        description: "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/)\
          \ for subscriber."
        title: "VIP"
        readOnly: true
      clicks:
        type: "integer"
        description: "The total number of times the subscriber clicked on the link."
        title: "Total Clicks"
        readOnly: true
      campaign_id:
        type: "string"
        description: "The campaign id."
        title: "Campaign ID"
        readOnly: true
      url_id:
        type: "string"
        description: "The id for the tracked URL in the campaign."
        title: "URL ID"
        readOnly: true
      list_id:
        type: "string"
        description: "The list id."
        title: "List ID"
        readOnly: true
      list_is_active:
        type: "boolean"
        description: "The status of the list used, namely if it's deleted or disabled."
        title: "List Status"
        readOnly: true
      contact_status:
        type: "string"
        description: "The status of the member, namely if they are subscribed, unsubscribed,\
          \ deleted, non-subscribed, transactional, pending, or need reconfirmation."
        title: "Member Status"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A subscriber who clicked a specific URL in a specific campaign."
    example:
      email_id: "email_id"
      email_address: "email_address"
      list_id: "list_id"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      merge_fields:
        key: ""
      clicks: 0
      contact_status: "contact_status"
      url_id: "url_id"
      vip: true
      list_is_active: true
      campaign_id: "campaign_id"
  Click Detail Members:
    type: "object"
    properties:
      members:
        type: "array"
        description: "An array of objects, each representing a member who clicked\
          \ a specific link within a campaign."
        title: "Lists"
        items:
          $ref: "#/definitions/Click Detail Member"
      campaign_id:
        type: "string"
        description: "The campaign id."
        title: "Campaign ID"
        readOnly: true
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A collection of members who clicked on a specific link within a\
      \ campaign."
    example:
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      members:
      - email_id: "email_id"
        email_address: "email_address"
        list_id: "list_id"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        merge_fields:
          key: ""
        clicks: 0
        contact_status: "contact_status"
        url_id: "url_id"
        vip: true
        list_is_active: true
        campaign_id: "campaign_id"
      - email_id: "email_id"
        email_address: "email_address"
        list_id: "list_id"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        merge_fields:
          key: ""
        clicks: 0
        contact_status: "contact_status"
        url_id: "url_id"
        vip: true
        list_is_active: true
        campaign_id: "campaign_id"
      total_items: 6
      campaign_id: "campaign_id"
  Member Activity_1:
    type: "object"
    properties:
      timestamp:
        type: "string"
        format: "date-time"
        description: "The date and time recorded for the action in ISO 8601 format."
        title: "Timestamp"
    description: "A summary of the interaction with the campaign."
    example:
      timestamp: "2000-01-23T04:56:07.000+00:00"
  Open Activity:
    type: "object"
    properties:
      campaign_id:
        type: "string"
        description: "The unique id for the campaign."
        title: "Campaign ID"
        readOnly: true
      list_id:
        type: "string"
        description: "The unique id for the list."
        title: "List ID"
        readOnly: true
      list_is_active:
        type: "boolean"
        description: "The status of the list used, namely if it's deleted or disabled."
        title: "List Status"
        readOnly: true
      contact_status:
        type: "string"
        description: "The status of the member, namely if they are subscribed, unsubscribed,\
          \ deleted, non-subscribed, transactional, pending, or need reconfirmation."
        title: "Member Status"
        readOnly: true
      email_id:
        type: "string"
        description: "The MD5 hash of the lowercase version of the list member's email\
          \ address."
        title: "Email Hash"
        readOnly: true
      email_address:
        type: "string"
        description: "Email address for a subscriber."
        title: "Email Address"
        readOnly: true
      merge_fields:
        type: "object"
        description: "A dictionary of merge fields where the keys are the merge tags.\
          \ See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
          \ for more about the structure."
        title: "Merge Fields"
        additionalProperties:
          description: "This object's keys are merge tags (like FNAME). It's values\
            \ are the values to be added to the merge field."
      vip:
        type: "boolean"
        description: "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/)\
          \ for subscriber."
        title: "VIP"
        readOnly: true
      opens_count:
        type: "integer"
        description: "The total number of times the this campaign was opened by the\
          \ list member."
        title: "Opens count"
        readOnly: true
      opens:
        type: "array"
        description: "An array of timestamps for each time a list member opened the\
          \ campaign. If a list member opens an email multiple times, this will return\
          \ a separate timestamp for each open event."
        title: "Time series data of opens activity"
        items:
          $ref: "#/definitions/Member Activity_1"
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A list of a member's opens activity in a specific campaign."
    example:
      email_id: "email_id"
      email_address: "email_address"
      list_id: "list_id"
      opens_count: 0
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      merge_fields:
        key: ""
      opens:
      - timestamp: "2000-01-23T04:56:07.000+00:00"
      - timestamp: "2000-01-23T04:56:07.000+00:00"
      contact_status: "contact_status"
      list_is_active: true
      vip: true
      campaign_id: "campaign_id"
  Open Detail Report:
    type: "object"
    properties:
      members:
        type: "array"
        description: "An array of objects, each representing a list member who opened\
          \ a campaign email. Each members object will contain information about the\
          \ number of total opens by a single member, as well as timestamps for each\
          \ open event."
        title: "Open Reports"
        items:
          $ref: "#/definitions/Open Activity"
      campaign_id:
        type: "string"
        description: "The campaign id."
        title: "Campaign ID"
        readOnly: true
      total_opens:
        type: "integer"
        description: "The total number of opens matching the query regardless of pagination."
        title: "Total opens"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A detailed report of any campaign emails that were opened by a list\
      \ member."
    example:
      total_opens: 6
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      members:
      - email_id: "email_id"
        email_address: "email_address"
        list_id: "list_id"
        opens_count: 0
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        merge_fields:
          key: ""
        opens:
        - timestamp: "2000-01-23T04:56:07.000+00:00"
        - timestamp: "2000-01-23T04:56:07.000+00:00"
        contact_status: "contact_status"
        list_is_active: true
        vip: true
        campaign_id: "campaign_id"
      - email_id: "email_id"
        email_address: "email_address"
        list_id: "list_id"
        opens_count: 0
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        merge_fields:
          key: ""
        opens:
        - timestamp: "2000-01-23T04:56:07.000+00:00"
        - timestamp: "2000-01-23T04:56:07.000+00:00"
        contact_status: "contact_status"
        list_is_active: true
        vip: true
        campaign_id: "campaign_id"
      total_items: 1
      campaign_id: "campaign_id"
  Email Domain:
    type: "object"
    properties:
      domain:
        type: "string"
        description: "The name of the domain (gmail.com, hotmail.com, yahoo.com)."
        title: "Domain"
        readOnly: true
      emails_sent:
        type: "integer"
        description: "The number of emails sent to that specific domain."
        title: "Total Sent"
        readOnly: true
      bounces:
        type: "integer"
        description: "The number of bounces at a domain."
        title: "Bounces"
        readOnly: true
      opens:
        type: "integer"
        description: "The number of opens for a domain."
        title: "Opens"
        readOnly: true
      clicks:
        type: "integer"
        description: "The number of clicks for a domain."
        title: "Clicks"
        readOnly: true
      unsubs:
        type: "integer"
        description: "The total number of unsubscribes for a domain."
        title: "Unsubscribes"
        readOnly: true
      delivered:
        type: "integer"
        description: "The number of successful deliveries for a domain."
        title: "Successful Deliveries"
        readOnly: true
      emails_pct:
        type: "number"
        description: "The percentage of total emails that went to this domain."
        title: "Email Percent"
        readOnly: true
      bounces_pct:
        type: "number"
        description: "The percentage of total bounces from this domain."
        title: "Bounces Percent"
        readOnly: true
      opens_pct:
        type: "number"
        description: "The percentage of total opens from this domain."
        title: "Opens Percent"
        readOnly: true
      clicks_pct:
        type: "number"
        description: "The percentage of total clicks from this domain."
        title: "Clicks Percent"
        readOnly: true
      unsubs_pct:
        type: "number"
        description: "The percentage of total unsubscribes from this domain."
        title: "Unsubscribes Percent"
        readOnly: true
    description: "A single email domain's performance"
    example:
      opens_pct: 3.61607674925191080461672754609026014804840087890625
      emails_pct: 7.061401241503109105224211816675961017608642578125
      domain: "domain"
      emails_sent: 0
      unsubs: 5
      opens: 1
      clicks: 5
      delivered: 2
      unsubs_pct: 4.1456080298839363962315474054776132106781005859375
      bounces: 6
      clicks_pct: 2.027123023002321833274663731572218239307403564453125
      bounces_pct: 9.301444243932575517419536481611430644989013671875
  Domain Performance:
    type: "object"
    properties:
      domains:
        type: "array"
        description: "The top 5 email domains based on total delivered emails."
        title: "Lists"
        readOnly: true
        items:
          $ref: "#/definitions/Email Domain"
      total_sent:
        type: "integer"
        description: "The total number of emails sent for the campaign."
        title: "Total Sent"
        readOnly: true
      campaign_id:
        type: "string"
        description: "The unique id for the campaign."
        title: "Campaign ID"
        readOnly: true
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "Statistics for the top-performing email domains in a campaign."
    example:
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      total_sent: 7
      domains:
      - opens_pct: 3.61607674925191080461672754609026014804840087890625
        emails_pct: 7.061401241503109105224211816675961017608642578125
        domain: "domain"
        emails_sent: 0
        unsubs: 5
        opens: 1
        clicks: 5
        delivered: 2
        unsubs_pct: 4.1456080298839363962315474054776132106781005859375
        bounces: 6
        clicks_pct: 2.027123023002321833274663731572218239307403564453125
        bounces_pct: 9.301444243932575517419536481611430644989013671875
      - opens_pct: 3.61607674925191080461672754609026014804840087890625
        emails_pct: 7.061401241503109105224211816675961017608642578125
        domain: "domain"
        emails_sent: 0
        unsubs: 5
        opens: 1
        clicks: 5
        delivered: 2
        unsubs_pct: 4.1456080298839363962315474054776132106781005859375
        bounces: 6
        clicks_pct: 2.027123023002321833274663731572218239307403564453125
        bounces_pct: 9.301444243932575517419536481611430644989013671875
      total_items: 1
      campaign_id: "campaign_id"
  Twitter Status:
    type: "object"
    properties:
      status:
        type: "string"
        description: "The body of the tweet."
        title: "Status Body"
        readOnly: true
      screen_name:
        type: "string"
        description: "The Twitter handle for the author of the tweet."
        title: "Screen Name"
        readOnly: true
      status_id:
        type: "string"
        description: "The individual id for the tweet."
        title: "Status ID"
        readOnly: true
      datetime:
        type: "string"
        format: "date-time"
        description: "A timestamp for the tweet."
        title: "Datetime"
        readOnly: true
      is_retweet:
        type: "boolean"
        description: "A 'true' or 'false' status of whether the tweet is a retweet."
        title: "Is Retweet"
        readOnly: true
    description: "An individual tweet."
    example:
      datetime: "2000-01-23T04:56:07.000+00:00"
      status_id: "status_id"
      screen_name: "screen_name"
      is_retweet: true
      status: "status"
  Twitter Stats:
    type: "object"
    properties:
      tweets:
        type: "integer"
        description: "The number of tweets including a link to the campaign."
        title: "Tweet Count"
        readOnly: true
      first_tweet:
        type: "string"
        description: "The day and time of the first recorded tweet with a link to\
          \ the campaign."
        title: "First Tweet Timestamp"
        readOnly: true
      last_tweet:
        type: "string"
        description: "The day and time of the last recorded tweet with a link to the\
          \ campaign."
        title: "Last Tweet Timestamp"
        readOnly: true
      retweets:
        type: "integer"
        description: "The number of retweets that include a link to the campaign."
        title: "Retweet Count"
        readOnly: true
      statuses:
        type: "array"
        description: "A summary of tweets that include a link to the campaign."
        title: "Twitter Status"
        readOnly: true
        items:
          $ref: "#/definitions/Twitter Status"
    description: "A summary of Twitter activity for a campaign."
    example:
      last_tweet: "last_tweet"
      statuses:
      - datetime: "2000-01-23T04:56:07.000+00:00"
        status_id: "status_id"
        screen_name: "screen_name"
        is_retweet: true
        status: "status"
      - datetime: "2000-01-23T04:56:07.000+00:00"
        status_id: "status_id"
        screen_name: "screen_name"
        is_retweet: true
        status: "status"
      first_tweet: "first_tweet"
      tweets: 0
      retweets: 6
  Location_3:
    type: "object"
    properties:
      country:
        type: "string"
        description: "The two-digit country code for a recorded click."
        title: "Country"
      region:
        type: "string"
        example: "NY"
        description: "If available, a specific region where the click was recorded."
        title: "Region"
    description: "An individual click location."
    example:
      country: "country"
      region: "NY"
  Click Summary:
    type: "object"
    properties:
      clicks:
        type: "integer"
        description: "The total number of clicks to the campaign's URL."
        title: "Clicks"
        readOnly: true
      first_click:
        type: "string"
        format: "date-time"
        description: "The timestamp for the first click to the URL."
        title: "First Click"
        readOnly: true
      last_click:
        type: "string"
        format: "date-time"
        description: "The timestamp for the last click to the URL."
        title: "Last Click"
        readOnly: true
      locations:
        type: "array"
        description: "A summary of the top click locations."
        title: "Click Locations"
        readOnly: true
        items:
          $ref: "#/definitions/Location_3"
    description: "A summary of the click-throughs on the campaign's URL."
    example:
      clicks: 1
      last_click: "2000-01-23T04:56:07.000+00:00"
      locations:
      - country: "country"
        region: "NY"
      - country: "country"
        region: "NY"
      first_click: "2000-01-23T04:56:07.000+00:00"
  Referrer:
    type: "object"
    properties:
      referrer:
        type: "string"
        description: "A referrer (truncated to 100 bytes)."
        title: "Referrer"
      clicks:
        type: "integer"
        description: "The number of clicks a single referrer generated."
        title: "Clicks"
      first_click:
        type: "string"
        format: "date-time"
        description: "The timestamp for the first click from this referrer."
        title: "First Click"
      last_click:
        type: "string"
        format: "date-time"
        description: "The timestamp for the last click from this referrer."
        title: "Last Click"
    description: "A single instance of a campaign referral."
    example:
      referrer: "referrer"
      clicks: 5
      last_click: "2000-01-23T04:56:07.000+00:00"
      first_click: "2000-01-23T04:56:07.000+00:00"
  Eepurl Activity:
    type: "object"
    properties:
      twitter:
        $ref: "#/definitions/Twitter Stats"
      clicks:
        $ref: "#/definitions/Click Summary"
      referrers:
        type: "array"
        description: "A summary of the top referrers for the campaign."
        title: "Referrers"
        readOnly: true
        items:
          $ref: "#/definitions/Referrer"
        x-title: "Referrers"
      eepurl:
        type: "string"
        description: "The shortened link used for tracking."
        title: "Eepurl"
        readOnly: true
      campaign_id:
        type: "string"
        description: "The unique id for the campaign."
        title: "Campaign ID"
        readOnly: true
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A summary of social activity for the campaign, tracked by EepURL."
    example:
      twitter:
        last_tweet: "last_tweet"
        statuses:
        - datetime: "2000-01-23T04:56:07.000+00:00"
          status_id: "status_id"
          screen_name: "screen_name"
          is_retweet: true
          status: "status"
        - datetime: "2000-01-23T04:56:07.000+00:00"
          status_id: "status_id"
          screen_name: "screen_name"
          is_retweet: true
          status: "status"
        first_tweet: "first_tweet"
        tweets: 0
        retweets: 6
      eepurl: "eepurl"
      referrers:
      - referrer: "referrer"
        clicks: 5
        last_click: "2000-01-23T04:56:07.000+00:00"
        first_click: "2000-01-23T04:56:07.000+00:00"
      - referrer: "referrer"
        clicks: 5
        last_click: "2000-01-23T04:56:07.000+00:00"
        first_click: "2000-01-23T04:56:07.000+00:00"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      clicks:
        clicks: 1
        last_click: "2000-01-23T04:56:07.000+00:00"
        locations:
        - country: "country"
          region: "NY"
        - country: "country"
          region: "NY"
        first_click: "2000-01-23T04:56:07.000+00:00"
      total_items: 5
      campaign_id: "campaign_id"
  Member Activity_2:
    type: "object"
    properties:
      action:
        type: "string"
        description: "One of the following actions: 'open', 'click', or 'bounce'"
        title: "Action"
      type:
        type: "string"
        description: "If the action is a 'bounce', the type of bounce received: 'hard',\
          \ 'soft'."
        title: "Type"
      timestamp:
        type: "string"
        format: "date-time"
        description: "The date and time recorded for the action in ISO 8601 format."
        title: "Timestamp"
      url:
        type: "string"
        description: "If the action is a 'click', the URL on which the member clicked."
        title: "URL"
      ip:
        type: "string"
        description: "The IP address recorded for the action."
        title: "IP"
    description: "A summary of the interaction with the campaign."
  Email Activity:
    type: "object"
    properties:
      emails:
        type: "array"
        description: "An array of members that were sent the campaign."
        title: "Sent To"
        items:
          $ref: "#/definitions/Email Activity"
      campaign_id:
        type: "string"
        description: "The unique id for the sent campaign."
        title: "Campaign ID"
        readOnly: true
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A list of member's subscriber activity in a specific campaign."
    example:
      emails:
      - null
      - null
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      total_items: 0
      campaign_id: "campaign_id"
  Open Locations_locations:
    type: "object"
    properties:
      country_code:
        type: "string"
        description: "The ISO 3166 2 digit country code."
        title: "Country Code"
        readOnly: true
      region:
        type: "string"
        description: "An internal code for the region representing the more specific\
          \ location area such as city or state. When this is blank, it indicates\
          \ we know the country, but not the region."
        title: "Region"
        readOnly: true
      region_name:
        type: "string"
        description: "The name of the region, if we have one. For blank \"region\"\
          \ values, this will be \"Rest of Country\"."
        title: "Region Name"
        readOnly: true
      opens:
        type: "integer"
        description: "The number of unique campaign opens for a region."
        title: "Opens"
        readOnly: true
    example:
      country_code: "country_code"
      opens: 0
      region_name: "region_name"
      region: "region"
  Open Locations:
    type: "object"
    properties:
      locations:
        type: "array"
        description: "An array of objects, each representing a top location for opens."
        title: "Lists"
        items:
          $ref: "#/definitions/Open Locations_locations"
      campaign_id:
        type: "string"
        description: "The campaign id."
        title: "Campaign ID"
        readOnly: true
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "Top open locations for a specific campaign."
    example:
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      locations:
      - country_code: "country_code"
        opens: 0
        region_name: "region_name"
        region: "region"
      - country_code: "country_code"
        opens: 0
        region_name: "region_name"
        region: "region"
      total_items: 6
      campaign_id: "campaign_id"
  Sent To:
    type: "object"
    properties:
      email_id:
        type: "string"
        description: "The MD5 hash of the lowercase version of the list member's email\
          \ address."
        title: "Email Hash"
        readOnly: true
      email_address:
        type: "string"
        description: "Email address for a subscriber."
        title: "Email Address"
        readOnly: true
      merge_fields:
        type: "object"
        description: "A dictionary of merge fields where the keys are the merge tags.\
          \ See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
          \ for more about the structure."
        title: "Merge Fields"
        additionalProperties:
          description: "This object's keys are merge tags (like FNAME). It's values\
            \ are the values to be added to the merge field."
      vip:
        type: "boolean"
        description: "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/)\
          \ for subscriber."
        title: "VIP"
        readOnly: true
      status:
        type: "string"
        description: "The status of the member ('sent', 'hard' for hard bounce, or\
          \ 'soft' for soft bounce)."
        title: "Member Status"
      open_count:
        type: "integer"
        description: "The number of times a campaign was opened by this member."
        title: "Open Count"
      last_open:
        type: "string"
        format: "date-time"
        description: "The date and time of the last open for this member in ISO 8601\
          \ format."
        title: "Last Open"
      absplit_group:
        type: "string"
        description: "For A/B Split Campaigns, the group the member was apart of ('a',\
          \ 'b', or 'winner')."
        title: "A/B Split Group"
      gmt_offset:
        type: "integer"
        description: "For campaigns sent with timewarp, the time zone group the member\
          \ is apart of."
        title: "GMT Offset"
      campaign_id:
        type: "string"
        description: "The campaign id."
        title: "Campaign ID"
        readOnly: true
      list_id:
        type: "string"
        description: "The unique list id."
        title: "List ID"
        readOnly: true
      list_is_active:
        type: "boolean"
        description: "The status of the list used, namely if it's deleted or disabled."
        title: "List Status"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A subscriber's status for a specific campaign."
    example:
      email_id: "email_id"
      list_id: "list_id"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      merge_fields:
        key: ""
      open_count: 0
      list_is_active: true
      last_open: "2000-01-23T04:56:07.000+00:00"
      email_address: "email_address"
      absplit_group: "absplit_group"
      gmt_offset: 6
      vip: true
      campaign_id: "campaign_id"
      status: "status"
  SentTo:
    type: "object"
    properties:
      sent_to:
        type: "array"
        description: "An array of objects, each representing a campaign recipient."
        title: "Sent To"
        items:
          $ref: "#/definitions/Sent To"
      campaign_id:
        type: "string"
        description: "The campaign id."
        title: "Campaign ID"
        readOnly: true
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A list of subscribers who were sent a specific campaign."
    example:
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      sent_to:
      - email_id: "email_id"
        list_id: "list_id"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        merge_fields:
          key: ""
        open_count: 0
        list_is_active: true
        last_open: "2000-01-23T04:56:07.000+00:00"
        email_address: "email_address"
        absplit_group: "absplit_group"
        gmt_offset: 6
        vip: true
        campaign_id: "campaign_id"
        status: "status"
      - email_id: "email_id"
        list_id: "list_id"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        merge_fields:
          key: ""
        open_count: 0
        list_is_active: true
        last_open: "2000-01-23T04:56:07.000+00:00"
        email_address: "email_address"
        absplit_group: "absplit_group"
        gmt_offset: 6
        vip: true
        campaign_id: "campaign_id"
        status: "status"
      total_items: 1
      campaign_id: "campaign_id"
  Campaign SubReports:
    type: "object"
    properties:
      reports:
        type: "array"
        description: "An array of objects, each representing a report resource."
        title: "Reports"
        items:
          $ref: "#/definitions/Campaign Report"
      campaign_id:
        type: "string"
        description: "Unique identifier of the parent campaign"
        title: "Campaign ID"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A list of reports containing child campaigns for a specific campaign."
    example:
      reports:
      - forwards:
          forwards_count: 7
          forwards_opens: 9
        share_report:
          share_url: "share_url"
          share_password: "share_password"
        preview_text: "preview_text"
        list_id: "list_id"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        rss_last_send: "2000-01-23T04:56:07.000+00:00"
        list_name: "list_name"
        type: "type"
        list_is_active: true
        industry_stats:
          unopen_rate: 9.3693102714106686335071572102606296539306640625
          click_rate: 5.02500479152029466689555192715488374233245849609375
          bounce_rate: 9.965781217890562260208753286860883235931396484375
          unsub_rate: 6.683562403749608193948006373830139636993408203125
          type: "type"
          abuse_rate: 8.7620420127490010742121739895083010196685791015625
          open_rate: 4.9652184929849543237878606305457651615142822265625
        list_stats:
          sub_rate: 9.0183481860707832566959041287191212177276611328125
          click_rate: 6.96511769763884558415156789124011993408203125
          unsub_rate: 6.438423552598546706349225132726132869720458984375
          open_rate: 3.557195227068097320710649000830017030239105224609375
        campaign_title: "campaign_title"
        facebook_likes:
          facebook_likes: 1
          unique_likes: 7
          recipient_likes: 6
        timeseries:
        - emails_sent: 0
          recipients_clicks: 4
          unique_opens: 6
          timestamp: "2000-01-23T04:56:07.000+00:00"
        - emails_sent: 0
          recipients_clicks: 4
          unique_opens: 6
          timestamp: "2000-01-23T04:56:07.000+00:00"
        emails_sent: 0
        ecommerce:
          total_spent: 4.67894798900584873990737833082675933837890625
          total_revenue: 7.26052126480210358039357743109576404094696044921875
          total_orders: 1
          currency_code: "USD"
        id: "id"
        bounces:
          hard_bounces: 5
          syntax_errors: 2
          soft_bounces: 5
        subject_line: "subject_line"
        ab_split:
          a:
            forwards: 5
            unsubs: 6
            opens: 3
            bounces: 1
            recipient_clicks: 6
            forwards_opens: 6
            last_open: "last_open"
            abuse_reports: 2
            unique_opens: 3
          b:
            forwards: 0
            unsubs: 7
            opens: 8
            bounces: 7
            recipient_clicks: 6
            forwards_opens: 4
            last_open: "last_open"
            abuse_reports: 0
            unique_opens: 7
        timewarp:
        - unique_clicks: 3
          opens: 3
          clicks: 5
          last_click: "2000-01-23T04:56:07.000+00:00"
          gmt_offset: 3
          bounces: 4
          last_open: "2000-01-23T04:56:07.000+00:00"
          unique_opens: 7
        - unique_clicks: 3
          opens: 3
          clicks: 5
          last_click: "2000-01-23T04:56:07.000+00:00"
          gmt_offset: 3
          bounces: 4
          last_open: "2000-01-23T04:56:07.000+00:00"
          unique_opens: 7
        unsubscribed: 1
        send_time: "2000-01-23T04:56:07.000+00:00"
        opens:
          opens_total: 3
          last_open: "2000-01-23T04:56:07.000+00:00"
          unique_opens: 2
          open_rate: 4.1456080298839363962315474054776132106781005859375
        clicks:
          clicks_total: 7
          unique_clicks: 1
          click_rate: 1.489415909854170383397331534069962799549102783203125
          last_click: "2000-01-23T04:56:07.000+00:00"
          unique_subscriber_clicks: 1
        abuse_reports: 6
        delivery_status:
          emails_sent: 6
          can_cancel: true
          emails_canceled: 3
          enabled: true
          status: "delivering"
      - forwards:
          forwards_count: 7
          forwards_opens: 9
        share_report:
          share_url: "share_url"
          share_password: "share_password"
        preview_text: "preview_text"
        list_id: "list_id"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        rss_last_send: "2000-01-23T04:56:07.000+00:00"
        list_name: "list_name"
        type: "type"
        list_is_active: true
        industry_stats:
          unopen_rate: 9.3693102714106686335071572102606296539306640625
          click_rate: 5.02500479152029466689555192715488374233245849609375
          bounce_rate: 9.965781217890562260208753286860883235931396484375
          unsub_rate: 6.683562403749608193948006373830139636993408203125
          type: "type"
          abuse_rate: 8.7620420127490010742121739895083010196685791015625
          open_rate: 4.9652184929849543237878606305457651615142822265625
        list_stats:
          sub_rate: 9.0183481860707832566959041287191212177276611328125
          click_rate: 6.96511769763884558415156789124011993408203125
          unsub_rate: 6.438423552598546706349225132726132869720458984375
          open_rate: 3.557195227068097320710649000830017030239105224609375
        campaign_title: "campaign_title"
        facebook_likes:
          facebook_likes: 1
          unique_likes: 7
          recipient_likes: 6
        timeseries:
        - emails_sent: 0
          recipients_clicks: 4
          unique_opens: 6
          timestamp: "2000-01-23T04:56:07.000+00:00"
        - emails_sent: 0
          recipients_clicks: 4
          unique_opens: 6
          timestamp: "2000-01-23T04:56:07.000+00:00"
        emails_sent: 0
        ecommerce:
          total_spent: 4.67894798900584873990737833082675933837890625
          total_revenue: 7.26052126480210358039357743109576404094696044921875
          total_orders: 1
          currency_code: "USD"
        id: "id"
        bounces:
          hard_bounces: 5
          syntax_errors: 2
          soft_bounces: 5
        subject_line: "subject_line"
        ab_split:
          a:
            forwards: 5
            unsubs: 6
            opens: 3
            bounces: 1
            recipient_clicks: 6
            forwards_opens: 6
            last_open: "last_open"
            abuse_reports: 2
            unique_opens: 3
          b:
            forwards: 0
            unsubs: 7
            opens: 8
            bounces: 7
            recipient_clicks: 6
            forwards_opens: 4
            last_open: "last_open"
            abuse_reports: 0
            unique_opens: 7
        timewarp:
        - unique_clicks: 3
          opens: 3
          clicks: 5
          last_click: "2000-01-23T04:56:07.000+00:00"
          gmt_offset: 3
          bounces: 4
          last_open: "2000-01-23T04:56:07.000+00:00"
          unique_opens: 7
        - unique_clicks: 3
          opens: 3
          clicks: 5
          last_click: "2000-01-23T04:56:07.000+00:00"
          gmt_offset: 3
          bounces: 4
          last_open: "2000-01-23T04:56:07.000+00:00"
          unique_opens: 7
        unsubscribed: 1
        send_time: "2000-01-23T04:56:07.000+00:00"
        opens:
          opens_total: 3
          last_open: "2000-01-23T04:56:07.000+00:00"
          unique_opens: 2
          open_rate: 4.1456080298839363962315474054776132106781005859375
        clicks:
          clicks_total: 7
          unique_clicks: 1
          click_rate: 1.489415909854170383397331534069962799549102783203125
          last_click: "2000-01-23T04:56:07.000+00:00"
          unique_subscriber_clicks: 1
        abuse_reports: 6
        delivery_status:
          emails_sent: 6
          can_cancel: true
          emails_canceled: 3
          enabled: true
          status: "delivering"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      total_items: 0
      campaign_id: "campaign_id"
  Unsubscribes:
    type: "object"
    properties:
      unsubscribes:
        type: "array"
        description: "An array of objects, each representing a member who unsubscribed\
          \ from a campaign."
        title: "Lists"
        items:
          $ref: "#/definitions/Unsubscribes"
      campaign_id:
        type: "string"
        description: "The campaign id."
        title: "Campaign ID"
        readOnly: true
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A list of members who have unsubscribed from a specific campaign."
    example:
      unsubscribes:
      - null
      - null
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      total_items: 0
      campaign_id: "campaign_id"
  inline_response_200_7_products:
    type: "object"
    properties:
      title:
        type: "string"
      sku:
        type: "string"
      image_url:
        type: "string"
      total_revenue:
        type: "number"
      total_purchased:
        type: "number"
      currency_code:
        type: "string"
      recommendation_total:
        type: "integer"
      recommendation_purchased:
        type: "integer"
    example:
      total_purchased: 6.02745618307040320615897144307382404804229736328125
      image_url: "image_url"
      total_revenue: 0.80082819046101150206595775671303272247314453125
      recommendation_purchased: 5
      recommendation_total: 1
      title: "title"
      sku: "sku"
      currency_code: "currency_code"
  inline_response_200_7:
    type: "object"
    properties:
      products:
        type: "array"
        items:
          $ref: "#/definitions/inline_response_200_7_products"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A collection of ecommerce products."
    example:
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      total_items: 5
      products:
      - total_purchased: 6.02745618307040320615897144307382404804229736328125
        image_url: "image_url"
        total_revenue: 0.80082819046101150206595775671303272247314453125
        recommendation_purchased: 5
        recommendation_total: 1
        title: "title"
        sku: "sku"
        currency_code: "currency_code"
      - total_purchased: 6.02745618307040320615897144307382404804229736328125
        image_url: "image_url"
        total_revenue: 0.80082819046101150206595775671303272247314453125
        recommendation_purchased: 5
        recommendation_total: 1
        title: "title"
        sku: "sku"
        currency_code: "currency_code"
  Template Instance:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "The individual id for the template."
        title: "Template ID"
        readOnly: true
      type:
        type: "string"
        description: "The type of template (user, base, or gallery)."
        title: "Template Type"
        readOnly: true
      name:
        type: "string"
        description: "The name of the template."
        title: "Template Name"
      drag_and_drop:
        type: "boolean"
        description: "Whether the template uses the drag and drop editor."
        title: "Drag and Drop"
        readOnly: true
      responsive:
        type: "boolean"
        description: "Whether the template contains media queries to make it responsive."
        title: "Responsive"
        readOnly: true
      category:
        type: "string"
        description: "If available, the category the template is listed in."
        title: "Template Category"
        readOnly: true
      date_created:
        type: "string"
        format: "date-time"
        description: "The date and time the template was created in ISO 8601 format."
        title: "Date Created"
        readOnly: true
      date_edited:
        type: "string"
        format: "date-time"
        description: "The date and time the template was edited in ISO 8601 format."
        title: "Date Edited"
        readOnly: true
      created_by:
        type: "string"
        description: "The login name for template's creator."
        title: "Created By"
        readOnly: true
      edited_by:
        type: "string"
        description: "The login name who last edited the template."
        title: "Edited By"
        readOnly: true
      active:
        type: "boolean"
        description: "User templates are not 'deleted,' but rather marked as 'inactive.'\
          \ Returns whether the template is still active."
        title: "Active"
        readOnly: true
      folder_id:
        type: "string"
        description: "The id of the folder the template is currently in."
        title: "Folder ID"
      thumbnail:
        type: "string"
        description: "If available, the URL for a thumbnail of the template."
        title: "Template Thumbnail"
        readOnly: true
      share_url:
        type: "string"
        description: "The URL used for [template sharing](https://mailchimp.com/help/share-a-template/)."
        title: "Share URL"
        readOnly: true
      content_type:
        type: "string"
        description: "How the template's content is put together."
        title: "Content Type"
        readOnly: true
        enum:
        - "template"
        - "multichannel"
        - "html"
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "Information about a specific template."
    example:
      thumbnail: "thumbnail"
      date_edited: "2000-01-23T04:56:07.000+00:00"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      date_created: "2000-01-23T04:56:07.000+00:00"
      active: true
      type: "type"
      created_by: "created_by"
      drag_and_drop: true
      content_type: "template"
      share_url: "share_url"
      responsive: true
      name: "name"
      id: 0
      category: "category"
      folder_id: "folder_id"
      edited_by: "edited_by"
  Templates:
    type: "object"
    properties:
      templates:
        type: "array"
        description: "All of an account's saved or custom templates."
        title: "User Templates"
        items:
          $ref: "#/definitions/Template Instance"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A list an account's available templates."
    example:
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      templates:
      - thumbnail: "thumbnail"
        date_edited: "2000-01-23T04:56:07.000+00:00"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        date_created: "2000-01-23T04:56:07.000+00:00"
        active: true
        type: "type"
        created_by: "created_by"
        drag_and_drop: true
        content_type: "template"
        share_url: "share_url"
        responsive: true
        name: "name"
        id: 0
        category: "category"
        folder_id: "folder_id"
        edited_by: "edited_by"
      - thumbnail: "thumbnail"
        date_edited: "2000-01-23T04:56:07.000+00:00"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        date_created: "2000-01-23T04:56:07.000+00:00"
        active: true
        type: "type"
        created_by: "created_by"
        drag_and_drop: true
        content_type: "template"
        share_url: "share_url"
        responsive: true
        name: "name"
        id: 0
        category: "category"
        folder_id: "folder_id"
        edited_by: "edited_by"
      total_items: 6
  Template Instance_1:
    type: "object"
    required:
    - "html"
    - "name"
    properties:
      name:
        type: "string"
        example: "Freddie's Jokes"
        description: "The name of the template."
        title: "Template Name"
      folder_id:
        type: "string"
        example: "a4b830b"
        description: "The id of the folder the template is currently in."
        title: "Folder ID"
      html:
        type: "string"
        description: "The raw HTML for the template. We  support the Mailchimp [Template\
          \ Language](https://mailchimp.com/help/getting-started-with-mailchimps-template-language/)\
          \ in any HTML code passed via the API."
        title: "Template HTML"
    title: "Template Instance"
    description: "Information about a specific template."
  Template Instance_2:
    type: "object"
    required:
    - "html"
    - "name"
    properties:
      name:
        type: "string"
        example: "Freddie's Jokes"
        description: "The name of the template."
        title: "Template Name"
      folder_id:
        type: "string"
        example: "a4b830b"
        description: "The id of the folder the template is currently in."
        title: "Folder ID"
      html:
        type: "string"
        description: "The raw HTML for the template. We  support the Mailchimp [Template\
          \ Language](https://mailchimp.com/help/getting-started-with-mailchimps-template-language/)\
          \ in any HTML code passed via the API."
        title: "Template HTML"
    title: "Template Instance"
    description: "Information about a specific template."
  Template Default Content:
    type: "object"
    properties:
      sections:
        type: "object"
        description: "The sections that you can edit in the template, including each\
          \ section's default content."
        title: "Sections"
        additionalProperties:
          description: "The default content for the sections that you can edit in\
            \ the template."
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "Default content for a template."
    example:
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      sections:
        key: ""
  Address:
    type: "object"
    properties:
      address1:
        type: "string"
        example: "675 Ponce de Leon Ave NE"
        description: "The mailing address of the customer."
        title: "Address Field 1"
      address2:
        type: "string"
        example: "Suite 5000"
        description: "An additional field for the customer's mailing address."
        title: "Address Field 2"
      city:
        type: "string"
        example: "Atlanta"
        description: "The city the customer is located in."
        title: "City "
      province:
        type: "string"
        example: "Georgia"
        description: "The customer's state name or normalized province."
        title: "Province"
      province_code:
        type: "string"
        example: "GA"
        description: "The two-letter code for the customer's province or state."
        title: "Province Code"
      postal_code:
        type: "string"
        example: "30308"
        description: "The customer's postal or zip code."
        title: "Postal Code"
      country:
        type: "string"
        example: "United States"
        description: "The customer's country."
        title: "Country Code"
      country_code:
        type: "string"
        example: "US"
        description: "The two-letter code for the customer's country."
        title: "Country Code"
    description: "The customer's address."
    example:
      country: "United States"
      country_code: "US"
      province: "Georgia"
      address2: "Suite 5000"
      city: "Atlanta"
      address1: "675 Ponce de Leon Ave NE"
      province_code: "GA"
      postal_code: "30308"
  Ecommerce Customer:
    type: "object"
    properties:
      id:
        type: "string"
        description: "A unique identifier for the customer."
        title: "Customer Foreign ID"
        readOnly: true
      email_address:
        type: "string"
        description: "The customer's email address."
        title: "Email Address"
        readOnly: true
      opt_in_status:
        type: "boolean"
        description: "The customer's opt-in status. This value will never overwrite\
          \ the opt-in status of a pre-existing Mailchimp list member, but will apply\
          \ to list members that are added through the e-commerce API endpoints. Customers\
          \ who don't opt in to your Mailchimp list [will be added as `Transactional`\
          \ members](https://mailchimp.com/developer/marketing/docs/e-commerce/#customers)."
        title: "Opt-in Status"
      company:
        type: "string"
        description: "The customer's company."
        title: "Company"
      first_name:
        type: "string"
        description: "The customer's first name."
        title: "First Name"
      last_name:
        type: "string"
        description: "The customer's last name."
        title: "Last Name"
      orders_count:
        type: "integer"
        example: 4
        description: "The customer's total order count."
        title: "Orders Count"
        readOnly: true
      total_spent:
        type: "number"
        example: 100.0
        description: "The total amount the customer has spent."
        title: "Total Spent"
        readOnly: true
      address:
        $ref: "#/definitions/Address"
      created_at:
        type: "string"
        format: "date-time"
        example: "2015-07-15T19:28:00+00:00"
        description: "The date and time the customer was created in ISO 8601 format."
        title: "Creation Time"
        readOnly: true
      updated_at:
        type: "string"
        format: "date-time"
        example: "2015-07-15T19:28:00+00:00"
        description: "The date and time the customer was last updated in ISO 8601\
          \ format."
        title: "Update Time"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "Information about a specific customer."
    example:
      total_spent: 100.0
      orders_count: 4
      email_address: "email_address"
      address:
        country: "United States"
        country_code: "US"
        province: "Georgia"
        address2: "Suite 5000"
        city: "Atlanta"
        address1: "675 Ponce de Leon Ave NE"
        province_code: "GA"
        postal_code: "30308"
      updated_at: "2015-07-15T19:28:00+00:00"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      last_name: "last_name"
      created_at: "2015-07-15T19:28:00+00:00"
      opt_in_status: true
      company: "company"
      id: "id"
      first_name: "first_name"
  Shipping Address:
    type: "object"
    properties:
      name:
        type: "string"
        example: "Freddie Chimpenheimer"
        description: "The name associated with an order's shipping address."
        title: "Name"
      address1:
        type: "string"
        example: "675 Ponce de Leon Ave NE"
        description: "The shipping address for the order."
        title: "Address Field 1"
      address2:
        type: "string"
        example: "Suite 5000"
        description: "An additional field for the shipping address."
        title: "Address Field 2"
      city:
        type: "string"
        example: "Atlanta"
        description: "The city in the order's shipping address."
        title: "City "
      province:
        type: "string"
        example: "Georgia"
        description: "The state or normalized province in the order's shipping address."
        title: "Province"
      province_code:
        type: "string"
        example: "GA"
        description: "The two-letter code for the province or state the order's shipping\
          \ address is located in."
        title: "Province Code"
      postal_code:
        type: "string"
        example: "30308"
        description: "The postal or zip code in the order's shipping address."
        title: "Postal Code"
      country:
        type: "string"
        example: "United States"
        description: "The country in the order's shipping address."
        title: "Country Code"
      country_code:
        type: "string"
        example: "US"
        description: "The two-letter code for the country in the shipping address."
        title: "Country Code"
      longitude:
        type: "number"
        example: -75.68903
        description: "The longitude for the shipping address location."
        title: "Longitude"
      latitude:
        type: "number"
        example: 45.427408
        description: "The latitude for the shipping address location."
        title: "Latitude"
      phone:
        type: "string"
        example: "8675309"
        description: "The phone number for the order's shipping address"
        title: "Phone Number"
      company:
        type: "string"
        description: "The company associated with an order's shipping address."
        title: "Company"
    description: "The shipping address for the order."
    example:
      country: "United States"
      address2: "Suite 5000"
      city: "Atlanta"
      address1: "675 Ponce de Leon Ave NE"
      latitude: 45.427408
      province_code: "GA"
      country_code: "US"
      province: "Georgia"
      phone: "8675309"
      name: "Freddie Chimpenheimer"
      company: "company"
      postal_code: "30308"
      longitude: -75.68903
  Billing Address:
    type: "object"
    properties:
      name:
        type: "string"
        example: "Freddie Chimpenheimer"
        description: "The name associated with an order's billing address."
        title: "Name"
      address1:
        type: "string"
        example: "675 Ponce de Leon Ave NE"
        description: "The billing address for the order."
        title: "Address Field 1"
      address2:
        type: "string"
        example: "Suite 5000"
        description: "An additional field for the billing address."
        title: "Address Field 2"
      city:
        type: "string"
        example: "Atlanta"
        description: "The city in the billing address."
        title: "City "
      province:
        type: "string"
        example: "Georgia"
        description: "The state or normalized province in the billing address."
        title: "Province"
      province_code:
        type: "string"
        example: "GA"
        description: "The two-letter code for the province or state in the billing\
          \ address."
        title: "Province Code"
      postal_code:
        type: "string"
        example: "30308"
        description: "The postal or zip code in the billing address."
        title: "Postal Code"
      country:
        type: "string"
        example: "United States"
        description: "The country in the billing address."
        title: "Country Code"
      country_code:
        type: "string"
        example: "US"
        description: "The two-letter code for the country in the billing address."
        title: "Country Code"
      longitude:
        type: "number"
        example: -75.68903
        description: "The longitude for the billing address location."
        title: "Longitude"
      latitude:
        type: "number"
        example: 45.427408
        description: "The latitude for the billing address location."
        title: "Latitude"
      phone:
        type: "string"
        example: "8675309"
        description: "The phone number for the billing address."
        title: "Phone Number"
      company:
        type: "string"
        description: "The company associated with the billing address."
        title: "Company"
    description: "The billing address for the order."
    example:
      country: "United States"
      address2: "Suite 5000"
      city: "Atlanta"
      address1: "675 Ponce de Leon Ave NE"
      latitude: 45.427408
      province_code: "GA"
      country_code: "US"
      province: "Georgia"
      phone: "8675309"
      name: "Freddie Chimpenheimer"
      company: "company"
      postal_code: "30308"
      longitude: -75.68903
  Orders_promos:
    type: "object"
    properties:
      code:
        type: "string"
        description: "The Promo Code"
        title: "Code"
      amount_discounted:
        type: "number"
        description: "The amount of discount applied on the total price. For example\
          \ if the total cost was $100 and the customer paid $95.5, amount_discounted\
          \ will be 4.5 For free shipping set amount_discounted to 0"
        title: "Amount Discounted"
      type:
        type: "string"
        description: "Type of discount. For free shipping set type to fixed"
        title: "Type"
        enum:
        - "fixed"
        - "percentage"
    example:
      code: "code"
      amount_discounted: 5.63737665663332876420099637471139430999755859375
      type: "fixed"
  Ecommerce Order Line Item:
    type: "object"
    properties:
      id:
        type: "string"
        description: "A unique identifier for an order line item."
        title: "Order Line Item Foreign ID"
        readOnly: true
      product_id:
        type: "string"
        description: "A unique identifier for the product associated with an order\
          \ line item."
        title: "Order Line Item Product Foreign ID"
      product_title:
        type: "string"
        description: "The name of the product for an order line item."
        title: "Order Line Item Product Title"
        readOnly: true
      product_variant_id:
        type: "string"
        description: "A unique identifier for the product variant associated with\
          \ an order line item."
        title: "Order Line Item Product Variant Foreign ID"
      product_variant_title:
        type: "string"
        description: "The name of the product variant for an order line item."
        title: "Order Line Item Product Variant Title"
        readOnly: true
      image_url:
        type: "string"
        description: "The image URL for a product."
        title: "Product Image URL"
        readOnly: true
      quantity:
        type: "integer"
        description: "The order line item quantity."
        title: "Quantity"
      price:
        type: "number"
        description: "The order line item price."
        title: "Price"
      discount:
        type: "number"
        description: "The total discount amount applied to a line item."
        title: "Discount"
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "Information about a specific order line."
    example:
      product_variant_title: "product_variant_title"
      quantity: 2
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      image_url: "image_url"
      price: 7.061401241503109105224211816675961017608642578125
      product_id: "product_id"
      discount: 9.301444243932575517419536481611430644989013671875
      id: "id"
      product_variant_id: "product_variant_id"
      product_title: "product_title"
  Outreach:
    type: "object"
    properties:
      id:
        type: "string"
        example: "839488a60b"
        description: "A unique identifier for the outreach. Can be an email campaign\
          \ ID."
        title: "Outreach ID"
      name:
        type: "string"
        example: "Freddie's Jokes"
        description: "The name for the outreach."
        title: "Outreach name"
        readOnly: true
      type:
        type: "string"
        example: "regular"
        description: "The type of the outreach."
        title: "Outreach type"
        readOnly: true
      published_time:
        type: "string"
        format: "date-time"
        example: "2017-06-06T13:56:12+00:00"
        description: "The date and time the Outreach was published in ISO 8601 format."
        title: "Outreach published time"
        readOnly: true
    description: "The outreach associated with this order. For example, an email campaign\
      \ or Facebook ad."
    example:
      published_time: "2017-06-06T13:56:12+00:00"
      name: "Freddie's Jokes"
      id: "839488a60b"
      type: "regular"
  Ecommerce Order:
    type: "object"
    properties:
      id:
        type: "string"
        description: "A unique identifier for the order."
        title: "Order Foreign ID"
        readOnly: true
      customer:
        $ref: "#/definitions/Ecommerce Customer"
      store_id:
        type: "string"
        description: "The unique identifier for the store."
        title: "Store Foreign ID"
        readOnly: true
      campaign_id:
        type: "string"
        example: "839488a60b"
        description: "A string that uniquely identifies the campaign associated with\
          \ an order."
        title: "Campaign ID"
      landing_site:
        type: "string"
        example: "http://www.example.com?source=abc"
        description: "The URL for the page where the buyer landed when entering the\
          \ shop."
        title: "Landing Site"
      financial_status:
        type: "string"
        description: "The order status. Use this parameter to trigger [Order Notifications](https://mailchimp.com/developer/marketing/docs/e-commerce/#order-notifications)."
        title: "Financial Status"
      fulfillment_status:
        type: "string"
        description: "The fulfillment status for the order. Use this parameter to\
          \ trigger [Order Notifications](https://mailchimp.com/developer/marketing/docs/e-commerce/#order-notifications)."
        title: "Fulfillment Status"
      currency_code:
        type: "string"
        description: "The three-letter ISO 4217 code for the currency that the store\
          \ accepts."
        title: "Currency Code"
      order_total:
        type: "number"
        description: "The order total associated with an order."
        title: "Order Total"
      order_url:
        type: "string"
        description: "The URL for the order."
        title: "Order URL"
      discount_total:
        type: "number"
        description: "The total amount of the discounts to be applied to the price\
          \ of the order."
        title: "Discount Total"
      tax_total:
        type: "number"
        description: "The tax total associated with an order."
        title: "Tax Total"
      shipping_total:
        type: "number"
        description: "The shipping total for the order."
        title: "Shipping Total"
      tracking_code:
        type: "string"
        description: "The Mailchimp tracking code for the order. Uses the 'mc_tc'\
          \ parameter in E-Commerce tracking URLs."
        title: "Tracking Code"
        enum:
        - "prec"
      processed_at_foreign:
        type: "string"
        format: "date-time"
        example: "2015-07-15T19:28:00+00:00"
        description: "The date and time the order was processed in ISO 8601 format."
        title: "Foreign Processed Time"
      cancelled_at_foreign:
        type: "string"
        format: "date-time"
        example: "2015-07-15T19:28:00+00:00"
        description: "The date and time the order was cancelled in ISO 8601 format."
        title: "Foreign Cancel Time"
      updated_at_foreign:
        type: "string"
        format: "date-time"
        example: "2015-07-15T19:28:00+00:00"
        description: "The date and time the order was updated in ISO 8601 format."
        title: "Foreign Update Time"
      shipping_address:
        $ref: "#/definitions/Shipping Address"
      billing_address:
        $ref: "#/definitions/Billing Address"
      promos:
        type: "array"
        description: "The promo codes applied on the order"
        title: "Promos"
        items:
          $ref: "#/definitions/Orders_promos"
      lines:
        type: "array"
        description: "An array of the order's line items."
        title: "Order Line Items"
        items:
          $ref: "#/definitions/Ecommerce Order Line Item"
      outreach:
        $ref: "#/definitions/Outreach"
      tracking_number:
        type: "string"
        description: "The tracking number associated with the order."
        title: "Tracking number"
      tracking_carrier:
        type: "string"
        description: "The tracking carrier associated with the order."
        title: "Tracking carrier"
      tracking_url:
        type: "string"
        description: "The tracking URL associated with the order."
        title: "Tracking URL"
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "Information about a specific order."
    example:
      discount_total: 6.02745618307040320615897144307382404804229736328125
      fulfillment_status: "fulfillment_status"
      tax_total: 1.46581298050294517310021547018550336360931396484375
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      processed_at_foreign: "2015-07-15T19:28:00+00:00"
      billing_address:
        country: "United States"
        address2: "Suite 5000"
        city: "Atlanta"
        address1: "675 Ponce de Leon Ave NE"
        latitude: 45.427408
        province_code: "GA"
        country_code: "US"
        province: "Georgia"
        phone: "8675309"
        name: "Freddie Chimpenheimer"
        company: "company"
        postal_code: "30308"
        longitude: -75.68903
      currency_code: "currency_code"
      landing_site: "http://www.example.com?source=abc"
      order_url: "order_url"
      tracking_number: "tracking_number"
      id: "id"
      shipping_address:
        country: "United States"
        address2: "Suite 5000"
        city: "Atlanta"
        address1: "675 Ponce de Leon Ave NE"
        latitude: 45.427408
        province_code: "GA"
        country_code: "US"
        province: "Georgia"
        phone: "8675309"
        name: "Freddie Chimpenheimer"
        company: "company"
        postal_code: "30308"
        longitude: -75.68903
      updated_at_foreign: "2015-07-15T19:28:00+00:00"
      lines:
      - product_variant_title: "product_variant_title"
        quantity: 2
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        image_url: "image_url"
        price: 7.061401241503109105224211816675961017608642578125
        product_id: "product_id"
        discount: 9.301444243932575517419536481611430644989013671875
        id: "id"
        product_variant_id: "product_variant_id"
        product_title: "product_title"
      - product_variant_title: "product_variant_title"
        quantity: 2
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        image_url: "image_url"
        price: 7.061401241503109105224211816675961017608642578125
        product_id: "product_id"
        discount: 9.301444243932575517419536481611430644989013671875
        id: "id"
        product_variant_id: "product_variant_id"
        product_title: "product_title"
      promos:
      - code: "code"
        amount_discounted: 5.63737665663332876420099637471139430999755859375
        type: "fixed"
      - code: "code"
        amount_discounted: 5.63737665663332876420099637471139430999755859375
        type: "fixed"
      tracking_url: "tracking_url"
      campaign_id: "839488a60b"
      cancelled_at_foreign: "2015-07-15T19:28:00+00:00"
      store_id: "store_id"
      shipping_total: 5.962133916683182377482808078639209270477294921875
      outreach:
        published_time: "2017-06-06T13:56:12+00:00"
        name: "Freddie's Jokes"
        id: "839488a60b"
        type: "regular"
      tracking_code: "prec"
      tracking_carrier: "tracking_carrier"
      financial_status: "financial_status"
      order_total: 0.80082819046101150206595775671303272247314453125
      customer:
        total_spent: 100.0
        orders_count: 4
        email_address: "email_address"
        address:
          country: "United States"
          country_code: "US"
          province: "Georgia"
          address2: "Suite 5000"
          city: "Atlanta"
          address1: "675 Ponce de Leon Ave NE"
          province_code: "GA"
          postal_code: "30308"
        updated_at: "2015-07-15T19:28:00+00:00"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        last_name: "last_name"
        created_at: "2015-07-15T19:28:00+00:00"
        opt_in_status: true
        company: "company"
        id: "id"
        first_name: "first_name"
  Orders:
    type: "object"
    properties:
      orders:
        type: "array"
        description: "An array of objects, each representing an order resource."
        title: "Orders"
        items:
          $ref: "#/definitions/Ecommerce Order"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A collection of orders in an account."
    example:
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      orders:
      - discount_total: 6.02745618307040320615897144307382404804229736328125
        fulfillment_status: "fulfillment_status"
        tax_total: 1.46581298050294517310021547018550336360931396484375
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        processed_at_foreign: "2015-07-15T19:28:00+00:00"
        billing_address:
          country: "United States"
          address2: "Suite 5000"
          city: "Atlanta"
          address1: "675 Ponce de Leon Ave NE"
          latitude: 45.427408
          province_code: "GA"
          country_code: "US"
          province: "Georgia"
          phone: "8675309"
          name: "Freddie Chimpenheimer"
          company: "company"
          postal_code: "30308"
          longitude: -75.68903
        currency_code: "currency_code"
        landing_site: "http://www.example.com?source=abc"
        order_url: "order_url"
        tracking_number: "tracking_number"
        id: "id"
        shipping_address:
          country: "United States"
          address2: "Suite 5000"
          city: "Atlanta"
          address1: "675 Ponce de Leon Ave NE"
          latitude: 45.427408
          province_code: "GA"
          country_code: "US"
          province: "Georgia"
          phone: "8675309"
          name: "Freddie Chimpenheimer"
          company: "company"
          postal_code: "30308"
          longitude: -75.68903
        updated_at_foreign: "2015-07-15T19:28:00+00:00"
        lines:
        - product_variant_title: "product_variant_title"
          quantity: 2
          _links:
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          image_url: "image_url"
          price: 7.061401241503109105224211816675961017608642578125
          product_id: "product_id"
          discount: 9.301444243932575517419536481611430644989013671875
          id: "id"
          product_variant_id: "product_variant_id"
          product_title: "product_title"
        - product_variant_title: "product_variant_title"
          quantity: 2
          _links:
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          image_url: "image_url"
          price: 7.061401241503109105224211816675961017608642578125
          product_id: "product_id"
          discount: 9.301444243932575517419536481611430644989013671875
          id: "id"
          product_variant_id: "product_variant_id"
          product_title: "product_title"
        promos:
        - code: "code"
          amount_discounted: 5.63737665663332876420099637471139430999755859375
          type: "fixed"
        - code: "code"
          amount_discounted: 5.63737665663332876420099637471139430999755859375
          type: "fixed"
        tracking_url: "tracking_url"
        campaign_id: "839488a60b"
        cancelled_at_foreign: "2015-07-15T19:28:00+00:00"
        store_id: "store_id"
        shipping_total: 5.962133916683182377482808078639209270477294921875
        outreach:
          published_time: "2017-06-06T13:56:12+00:00"
          name: "Freddie's Jokes"
          id: "839488a60b"
          type: "regular"
        tracking_code: "prec"
        tracking_carrier: "tracking_carrier"
        financial_status: "financial_status"
        order_total: 0.80082819046101150206595775671303272247314453125
        customer:
          total_spent: 100.0
          orders_count: 4
          email_address: "email_address"
          address:
            country: "United States"
            country_code: "US"
            province: "Georgia"
            address2: "Suite 5000"
            city: "Atlanta"
            address1: "675 Ponce de Leon Ave NE"
            province_code: "GA"
            postal_code: "30308"
          updated_at: "2015-07-15T19:28:00+00:00"
          _links:
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          last_name: "last_name"
          created_at: "2015-07-15T19:28:00+00:00"
          opt_in_status: true
          company: "company"
          id: "id"
          first_name: "first_name"
      - discount_total: 6.02745618307040320615897144307382404804229736328125
        fulfillment_status: "fulfillment_status"
        tax_total: 1.46581298050294517310021547018550336360931396484375
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        processed_at_foreign: "2015-07-15T19:28:00+00:00"
        billing_address:
          country: "United States"
          address2: "Suite 5000"
          city: "Atlanta"
          address1: "675 Ponce de Leon Ave NE"
          latitude: 45.427408
          province_code: "GA"
          country_code: "US"
          province: "Georgia"
          phone: "8675309"
          name: "Freddie Chimpenheimer"
          company: "company"
          postal_code: "30308"
          longitude: -75.68903
        currency_code: "currency_code"
        landing_site: "http://www.example.com?source=abc"
        order_url: "order_url"
        tracking_number: "tracking_number"
        id: "id"
        shipping_address:
          country: "United States"
          address2: "Suite 5000"
          city: "Atlanta"
          address1: "675 Ponce de Leon Ave NE"
          latitude: 45.427408
          province_code: "GA"
          country_code: "US"
          province: "Georgia"
          phone: "8675309"
          name: "Freddie Chimpenheimer"
          company: "company"
          postal_code: "30308"
          longitude: -75.68903
        updated_at_foreign: "2015-07-15T19:28:00+00:00"
        lines:
        - product_variant_title: "product_variant_title"
          quantity: 2
          _links:
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          image_url: "image_url"
          price: 7.061401241503109105224211816675961017608642578125
          product_id: "product_id"
          discount: 9.301444243932575517419536481611430644989013671875
          id: "id"
          product_variant_id: "product_variant_id"
          product_title: "product_title"
        - product_variant_title: "product_variant_title"
          quantity: 2
          _links:
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          image_url: "image_url"
          price: 7.061401241503109105224211816675961017608642578125
          product_id: "product_id"
          discount: 9.301444243932575517419536481611430644989013671875
          id: "id"
          product_variant_id: "product_variant_id"
          product_title: "product_title"
        promos:
        - code: "code"
          amount_discounted: 5.63737665663332876420099637471139430999755859375
          type: "fixed"
        - code: "code"
          amount_discounted: 5.63737665663332876420099637471139430999755859375
          type: "fixed"
        tracking_url: "tracking_url"
        campaign_id: "839488a60b"
        cancelled_at_foreign: "2015-07-15T19:28:00+00:00"
        store_id: "store_id"
        shipping_total: 5.962133916683182377482808078639209270477294921875
        outreach:
          published_time: "2017-06-06T13:56:12+00:00"
          name: "Freddie's Jokes"
          id: "839488a60b"
          type: "regular"
        tracking_code: "prec"
        tracking_carrier: "tracking_carrier"
        financial_status: "financial_status"
        order_total: 0.80082819046101150206595775671303272247314453125
        customer:
          total_spent: 100.0
          orders_count: 4
          email_address: "email_address"
          address:
            country: "United States"
            country_code: "US"
            province: "Georgia"
            address2: "Suite 5000"
            city: "Atlanta"
            address1: "675 Ponce de Leon Ave NE"
            province_code: "GA"
            postal_code: "30308"
          updated_at: "2015-07-15T19:28:00+00:00"
          _links:
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          last_name: "last_name"
          created_at: "2015-07-15T19:28:00+00:00"
          opt_in_status: true
          company: "company"
          id: "id"
          first_name: "first_name"
      total_items: 3
  Address_1:
    type: "object"
    properties:
      address1:
        type: "string"
        example: "675 Ponce de Leon Ave NE"
        description: "The store's mailing address."
        title: "Address Field 1"
      address2:
        type: "string"
        example: "Suite 5000"
        description: "An additional field for the store's mailing address."
        title: "Address Field 2"
      city:
        type: "string"
        example: "Atlanta"
        description: "The city the store is located in."
        title: "City "
      province:
        type: "string"
        example: "Georgia"
        description: "The store's state name or normalized province."
        title: "Province"
      province_code:
        type: "string"
        example: "GA"
        description: "The two-letter code for the store's province or state."
        title: "Province Code"
      postal_code:
        type: "string"
        example: "30308"
        description: "The store's postal or zip code."
        title: "Postal Code"
      country:
        type: "string"
        example: "United States"
        description: "The store's country."
        title: "Country Code"
      country_code:
        type: "string"
        example: "US"
        description: "The two-letter code for to the store's country."
        title: "Country Code"
      longitude:
        type: "number"
        example: -75.68903
        description: "The longitude of the store location."
        title: "Longitude"
      latitude:
        type: "number"
        example: 45.427408
        description: "The latitude of the store location."
        title: "Latitude"
    description: "The store address."
    example:
      country: "United States"
      country_code: "US"
      province: "Georgia"
      address2: "Suite 5000"
      city: "Atlanta"
      address1: "675 Ponce de Leon Ave NE"
      latitude: 45.427408
      province_code: "GA"
      postal_code: "30308"
      longitude: -75.68903
  Script_1:
    type: "object"
    properties:
      url:
        type: "string"
        example: "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
        description: "The URL used for any integrations that offer built-in support\
          \ for connected sites."
        title: "Script URL"
        readOnly: true
      fragment:
        type: "string"
        example: "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"\
          script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\"\
          );</script>"
        description: "A pre-built script that you can copy-and-paste into your site\
          \ to integrate it with Mailchimp."
        title: "Script Fragment"
        readOnly: true
    description: "The script used to connect your site with Mailchimp."
    example:
      fragment: "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"\
        script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\"\
        );</script>"
      url: "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
  Connected Site_2:
    type: "object"
    properties:
      site_foreign_id:
        type: "string"
        example: "a180c384d7db88b if created in-app, MC001 if created via API"
        description: "The unique identifier for the connected site."
        title: "Connected Site Foreign ID"
        readOnly: true
      site_script:
        $ref: "#/definitions/Script_1"
    description: "The Connected Site associated with the store."
    example:
      site_script:
        fragment: "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"\
          script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\"\
          );</script>"
        url: "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
      site_foreign_id: "a180c384d7db88b if created in-app, MC001 if created via API"
  Abandoned Cart Automation:
    type: "object"
    properties:
      is_supported:
        type: "boolean"
        example: false
        description: "Whether this store supports the abandonedCart automation."
        title: "Is Supported"
        readOnly: true
      id:
        type: "string"
        example: "355a72bfc3"
        description: "Unique ID of automation parent campaign."
        title: "ID"
        readOnly: true
      status:
        type: "string"
        example: "sending"
        description: "Status of the abandonedCart automation."
        title: "Status"
        readOnly: true
        enum:
        - "save"
        - "sending"
        - "paused"
    description: "abandonedCart automation details."
    example:
      is_supported: false
      id: "355a72bfc3"
      status: "sending"
  Abandoned Browse Automation:
    type: "object"
    properties:
      is_supported:
        type: "boolean"
        example: false
        description: "Whether this store supports the abandonedBrowse automation."
        title: "Is Supported"
        readOnly: true
      id:
        type: "string"
        example: "355a72bfc3"
        description: "Unique ID of automation parent campaign."
        title: "ID"
        readOnly: true
      status:
        type: "string"
        example: "sending"
        description: "Status of the abandonedBrowse automation."
        title: "Status"
        readOnly: true
        enum:
        - "save"
        - "sending"
        - "paused"
    description: "abandonedBrowse automation details. abandonedBrowse is also known\
      \ as Product Retargeting Email or Retarget Site Visitors on the web."
    example:
      is_supported: false
      id: "355a72bfc3"
      status: "sending"
  Automations:
    type: "object"
    properties:
      abandoned_cart:
        $ref: "#/definitions/Abandoned Cart Automation"
      abandoned_browse:
        $ref: "#/definitions/Abandoned Browse Automation"
    description: "Details for the automations attached to this store."
    example:
      abandoned_browse:
        is_supported: false
        id: "355a72bfc3"
        status: "sending"
      abandoned_cart:
        is_supported: false
        id: "355a72bfc3"
        status: "sending"
  Ecommerce Store:
    type: "object"
    properties:
      id:
        type: "string"
        example: "example_store"
        description: "The unique identifier for the store."
        title: "Store Foreign ID"
        readOnly: true
      list_id:
        type: "string"
        example: "1a2df69511"
        description: "The unique identifier for the list that's associated with the\
          \ store. The `list_id` for a specific store can't change."
        title: "List ID"
        readOnly: true
      name:
        type: "string"
        example: "Freddie's Cat Hat Emporium"
        description: "The name of the store."
        title: "Store Name"
      platform:
        type: "string"
        description: "The e-commerce platform of the store."
        title: "Platform"
      domain:
        type: "string"
        example: "example.com"
        description: "The store domain.  The store domain must be unique within a\
          \ user account."
        title: "Domain"
      is_syncing:
        type: "boolean"
        description: "Whether to disable automations because the store is currently\
          \ [syncing](https://mailchimp.com/developer/marketing/docs/e-commerce/#pausing-store-automations)."
        title: "Is Syncing"
      email_address:
        type: "string"
        example: "freddie@mailchimp.com"
        description: "The email address for the store."
        title: "Email Address"
      currency_code:
        type: "string"
        example: "USD"
        description: "The three-letter ISO 4217 code for the currency that the store\
          \ accepts."
        title: "Currency"
      money_format:
        type: "string"
        example: "$"
        description: "The currency format for the store. For example: `$`, `£`, etc."
        title: "Money Format"
      primary_locale:
        type: "string"
        example: "fr"
        description: "The primary locale for the store. For example: `en`, `de`, etc."
        title: "Primary Locale"
      timezone:
        type: "string"
        example: "Eastern"
        description: "The timezone for the store."
        title: "Timezone"
      phone:
        type: "string"
        example: "404-444-4444"
        description: "The store phone number."
        title: "Phone"
      address:
        $ref: "#/definitions/Address_1"
      connected_site:
        $ref: "#/definitions/Connected Site_2"
      automations:
        $ref: "#/definitions/Automations"
      list_is_active:
        type: "boolean"
        description: "The status of the list connected to the store, namely if it's\
          \ deleted or disabled."
        title: "List Status"
        readOnly: true
      created_at:
        type: "string"
        format: "date-time"
        example: "2015-07-15T19:28:00+00:00"
        description: "The date and time the store was created in ISO 8601 format."
        title: "Creation Time"
        readOnly: true
      updated_at:
        type: "string"
        format: "date-time"
        example: "2015-07-15T19:28:00+00:00"
        description: "The date and time the store was last updated in ISO 8601 format."
        title: "Update Time"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "An individual store in an account."
    example:
      is_syncing: true
      automations:
        abandoned_browse:
          is_supported: false
          id: "355a72bfc3"
          status: "sending"
        abandoned_cart:
          is_supported: false
          id: "355a72bfc3"
          status: "sending"
      address:
        country: "United States"
        country_code: "US"
        province: "Georgia"
        address2: "Suite 5000"
        city: "Atlanta"
        address1: "675 Ponce de Leon Ave NE"
        latitude: 45.427408
        province_code: "GA"
        postal_code: "30308"
        longitude: -75.68903
      list_id: "1a2df69511"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      timezone: "Eastern"
      primary_locale: "fr"
      created_at: "2015-07-15T19:28:00+00:00"
      list_is_active: true
      platform: "platform"
      currency_code: "USD"
      money_format: "$"
      connected_site:
        site_script:
          fragment: "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"\
            script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\"\
            );</script>"
          url: "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
        site_foreign_id: "a180c384d7db88b if created in-app, MC001 if created via\
          \ API"
      email_address: "freddie@mailchimp.com"
      updated_at: "2015-07-15T19:28:00+00:00"
      phone: "404-444-4444"
      domain: "example.com"
      name: "Freddie's Cat Hat Emporium"
      id: "example_store"
  Ecommerce Stores:
    type: "object"
    properties:
      stores:
        type: "array"
        description: "An array of objects, each representing a store."
        title: "Stores"
        items:
          $ref: "#/definitions/Ecommerce Store"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A collection of stores in the account."
    example:
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      stores:
      - is_syncing: true
        automations:
          abandoned_browse:
            is_supported: false
            id: "355a72bfc3"
            status: "sending"
          abandoned_cart:
            is_supported: false
            id: "355a72bfc3"
            status: "sending"
        address:
          country: "United States"
          country_code: "US"
          province: "Georgia"
          address2: "Suite 5000"
          city: "Atlanta"
          address1: "675 Ponce de Leon Ave NE"
          latitude: 45.427408
          province_code: "GA"
          postal_code: "30308"
          longitude: -75.68903
        list_id: "1a2df69511"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        timezone: "Eastern"
        primary_locale: "fr"
        created_at: "2015-07-15T19:28:00+00:00"
        list_is_active: true
        platform: "platform"
        currency_code: "USD"
        money_format: "$"
        connected_site:
          site_script:
            fragment: "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"\
              script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\"\
              );</script>"
            url: "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
          site_foreign_id: "a180c384d7db88b if created in-app, MC001 if created via\
            \ API"
        email_address: "freddie@mailchimp.com"
        updated_at: "2015-07-15T19:28:00+00:00"
        phone: "404-444-4444"
        domain: "example.com"
        name: "Freddie's Cat Hat Emporium"
        id: "example_store"
      - is_syncing: true
        automations:
          abandoned_browse:
            is_supported: false
            id: "355a72bfc3"
            status: "sending"
          abandoned_cart:
            is_supported: false
            id: "355a72bfc3"
            status: "sending"
        address:
          country: "United States"
          country_code: "US"
          province: "Georgia"
          address2: "Suite 5000"
          city: "Atlanta"
          address1: "675 Ponce de Leon Ave NE"
          latitude: 45.427408
          province_code: "GA"
          postal_code: "30308"
          longitude: -75.68903
        list_id: "1a2df69511"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        timezone: "Eastern"
        primary_locale: "fr"
        created_at: "2015-07-15T19:28:00+00:00"
        list_is_active: true
        platform: "platform"
        currency_code: "USD"
        money_format: "$"
        connected_site:
          site_script:
            fragment: "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"\
              script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\"\
              );</script>"
            url: "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
          site_foreign_id: "a180c384d7db88b if created in-app, MC001 if created via\
            \ API"
        email_address: "freddie@mailchimp.com"
        updated_at: "2015-07-15T19:28:00+00:00"
        phone: "404-444-4444"
        domain: "example.com"
        name: "Freddie's Cat Hat Emporium"
        id: "example_store"
      total_items: 0
  Ecommerce Store_1:
    type: "object"
    required:
    - "currency_code"
    - "id"
    - "list_id"
    - "name"
    properties:
      id:
        type: "string"
        example: "example_store"
        description: "The unique identifier for the store."
        title: "Store Foreign ID"
      list_id:
        type: "string"
        example: "1a2df69511"
        description: "The unique identifier for the list associated with the store.\
          \ The `list_id` for a specific store cannot change."
        title: "List ID"
      name:
        type: "string"
        example: "Freddie's Cat Hat Emporium"
        description: "The name of the store."
        title: "Store Name"
      platform:
        type: "string"
        description: "The e-commerce platform of the store."
        title: "Platform"
      domain:
        type: "string"
        example: "example.com"
        description: "The store domain. This parameter is required for Connected Sites\
          \ and Google Ads."
        title: "Domain"
      is_syncing:
        type: "boolean"
        description: "Whether to disable automations because the store is currently\
          \ [syncing](https://mailchimp.com/developer/marketing/docs/e-commerce/#pausing-store-automations)."
        title: "Is Syncing"
      email_address:
        type: "string"
        example: "freddie@mailchimp.com"
        description: "The email address for the store."
        title: "Email Address"
      currency_code:
        type: "string"
        example: "USD"
        description: "The three-letter ISO 4217 code for the currency that the store\
          \ accepts."
        title: "Currency"
      money_format:
        type: "string"
        example: "$"
        description: "The currency format for the store. For example: `$`, `£`, etc."
        title: "Money Format"
      primary_locale:
        type: "string"
        example: "fr"
        description: "The primary locale for the store. For example: `en`, `de`, etc."
        title: "Primary Locale"
      timezone:
        type: "string"
        example: "Eastern"
        description: "The timezone for the store."
        title: "Timezone"
      phone:
        type: "string"
        example: "404-444-4444"
        description: "The store phone number."
        title: "Phone"
      address:
        $ref: "#/definitions/Address_1"
    title: "E-commerce Store"
    description: "An individual store in an account."
  Ecommerce Store_2:
    type: "object"
    properties:
      name:
        type: "string"
        example: "Freddie's Cat Hat Emporium"
        description: "The name of the store."
        title: "Store Name"
      platform:
        type: "string"
        description: "The e-commerce platform of the store."
        title: "Platform"
      domain:
        type: "string"
        example: "example.com"
        description: "The store domain."
        title: "Domain"
      is_syncing:
        type: "boolean"
        description: "Whether to disable automations because the store is currently\
          \ [syncing](https://mailchimp.com/developer/marketing/docs/e-commerce/#pausing-store-automations)."
        title: "Is Syncing"
      email_address:
        type: "string"
        example: "freddie@mailchimp.com"
        description: "The email address for the store."
        title: "Email Address"
      currency_code:
        type: "string"
        example: "USD"
        description: "The three-letter ISO 4217 code for the currency that the store\
          \ accepts."
        title: "Currency"
      money_format:
        type: "string"
        example: "$"
        description: "The currency format for the store. For example: `$`, `£`, etc."
        title: "Money Format"
      primary_locale:
        type: "string"
        example: "fr"
        description: "The primary locale for the store. For example: `en`, `de`, etc."
        title: "Primary Locale"
      timezone:
        type: "string"
        example: "Eastern"
        description: "The timezone for the store."
        title: "Timezone"
      phone:
        type: "string"
        example: "404-444-4444"
        description: "The store phone number."
        title: "Phone"
      address:
        $ref: "#/definitions/Address_1"
    title: "E-commerce Store"
    description: "An individual store in an account."
  Ecommerce Cart Line Item:
    type: "object"
    properties:
      id:
        type: "string"
        description: "A unique identifier for the cart line item."
        title: "Cart Line Item Foreign ID"
        readOnly: true
      product_id:
        type: "string"
        description: "A unique identifier for the product associated with the cart\
          \ line item."
        title: "Cart Line Product Foreign ID"
      product_title:
        type: "string"
        description: "The name of the product for the cart line item."
        title: "Cart Line Product Title"
        readOnly: true
      product_variant_id:
        type: "string"
        description: "A unique identifier for the product variant associated with\
          \ the cart line item."
        title: "Cart Line Product Variant Foreign ID"
      product_variant_title:
        type: "string"
        description: "The name of the product variant for the cart line item."
        title: "Cart Line Product Variant Title"
        readOnly: true
      quantity:
        type: "integer"
        description: "The quantity of a cart line item."
        title: "Quantity"
      price:
        type: "number"
        description: "The price of a cart line item."
        title: "Price"
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "Information about a specific cart line item."
    example:
      product_variant_title: "product_variant_title"
      quantity: 1
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      price: 5.962133916683182377482808078639209270477294921875
      product_id: "product_id"
      id: "id"
      product_variant_id: "product_variant_id"
      product_title: "product_title"
  Ecommerce Cart:
    type: "object"
    properties:
      id:
        type: "string"
        description: "A unique identifier for the cart."
        title: "Cart Foreign ID"
        readOnly: true
      customer:
        $ref: "#/definitions/Ecommerce Customer"
      campaign_id:
        type: "string"
        example: "839488a60b"
        description: "A string that uniquely identifies the campaign associated with\
          \ a cart."
        title: "Campaign ID"
      checkout_url:
        type: "string"
        description: "The URL for the cart. This parameter is required for [Abandoned\
          \ Cart](https://mailchimp.com/help/create-an-abandoned-cart-email/) automations."
        title: "Checkout URL"
      currency_code:
        type: "string"
        description: "The three-letter ISO 4217 code for the currency that the cart\
          \ uses."
        title: "Currency Code"
      order_total:
        type: "number"
        description: "The order total for the cart."
        title: "Order Total"
      tax_total:
        type: "number"
        description: "The total tax for the cart."
        title: "Tax Total"
      lines:
        type: "array"
        description: "An array of the cart's line items."
        title: "Cart Line Items"
        items:
          $ref: "#/definitions/Ecommerce Cart Line Item"
      created_at:
        type: "string"
        format: "date-time"
        example: "2015-07-15T19:28:00+00:00"
        description: "The date and time the cart was created in ISO 8601 format."
        title: "Creation Time"
        readOnly: true
      updated_at:
        type: "string"
        format: "date-time"
        example: "2015-07-15T19:28:00+00:00"
        description: "The date and time the cart was last updated in ISO 8601 format."
        title: "Update Time"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "Information about a specific cart."
    example:
      checkout_url: "checkout_url"
      tax_total: 6.02745618307040320615897144307382404804229736328125
      updated_at: "2015-07-15T19:28:00+00:00"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      created_at: "2015-07-15T19:28:00+00:00"
      order_total: 0.80082819046101150206595775671303272247314453125
      id: "id"
      lines:
      - product_variant_title: "product_variant_title"
        quantity: 1
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        price: 5.962133916683182377482808078639209270477294921875
        product_id: "product_id"
        id: "id"
        product_variant_id: "product_variant_id"
        product_title: "product_title"
      - product_variant_title: "product_variant_title"
        quantity: 1
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        price: 5.962133916683182377482808078639209270477294921875
        product_id: "product_id"
        id: "id"
        product_variant_id: "product_variant_id"
        product_title: "product_title"
      campaign_id: "839488a60b"
      currency_code: "currency_code"
      customer:
        total_spent: 100.0
        orders_count: 4
        email_address: "email_address"
        address:
          country: "United States"
          country_code: "US"
          province: "Georgia"
          address2: "Suite 5000"
          city: "Atlanta"
          address1: "675 Ponce de Leon Ave NE"
          province_code: "GA"
          postal_code: "30308"
        updated_at: "2015-07-15T19:28:00+00:00"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        last_name: "last_name"
        created_at: "2015-07-15T19:28:00+00:00"
        opt_in_status: true
        company: "company"
        id: "id"
        first_name: "first_name"
  Carts:
    type: "object"
    properties:
      store_id:
        type: "string"
        description: "The store id."
        title: "Store ID"
      carts:
        type: "array"
        description: "An array of objects, each representing a cart."
        title: "E-commerce Store Carts"
        items:
          $ref: "#/definitions/Ecommerce Cart"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A collection of a store's carts."
    example:
      store_id: "store_id"
      carts:
      - checkout_url: "checkout_url"
        tax_total: 6.02745618307040320615897144307382404804229736328125
        updated_at: "2015-07-15T19:28:00+00:00"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        created_at: "2015-07-15T19:28:00+00:00"
        order_total: 0.80082819046101150206595775671303272247314453125
        id: "id"
        lines:
        - product_variant_title: "product_variant_title"
          quantity: 1
          _links:
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          price: 5.962133916683182377482808078639209270477294921875
          product_id: "product_id"
          id: "id"
          product_variant_id: "product_variant_id"
          product_title: "product_title"
        - product_variant_title: "product_variant_title"
          quantity: 1
          _links:
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          price: 5.962133916683182377482808078639209270477294921875
          product_id: "product_id"
          id: "id"
          product_variant_id: "product_variant_id"
          product_title: "product_title"
        campaign_id: "839488a60b"
        currency_code: "currency_code"
        customer:
          total_spent: 100.0
          orders_count: 4
          email_address: "email_address"
          address:
            country: "United States"
            country_code: "US"
            province: "Georgia"
            address2: "Suite 5000"
            city: "Atlanta"
            address1: "675 Ponce de Leon Ave NE"
            province_code: "GA"
            postal_code: "30308"
          updated_at: "2015-07-15T19:28:00+00:00"
          _links:
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          last_name: "last_name"
          created_at: "2015-07-15T19:28:00+00:00"
          opt_in_status: true
          company: "company"
          id: "id"
          first_name: "first_name"
      - checkout_url: "checkout_url"
        tax_total: 6.02745618307040320615897144307382404804229736328125
        updated_at: "2015-07-15T19:28:00+00:00"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        created_at: "2015-07-15T19:28:00+00:00"
        order_total: 0.80082819046101150206595775671303272247314453125
        id: "id"
        lines:
        - product_variant_title: "product_variant_title"
          quantity: 1
          _links:
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          price: 5.962133916683182377482808078639209270477294921875
          product_id: "product_id"
          id: "id"
          product_variant_id: "product_variant_id"
          product_title: "product_title"
        - product_variant_title: "product_variant_title"
          quantity: 1
          _links:
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          price: 5.962133916683182377482808078639209270477294921875
          product_id: "product_id"
          id: "id"
          product_variant_id: "product_variant_id"
          product_title: "product_title"
        campaign_id: "839488a60b"
        currency_code: "currency_code"
        customer:
          total_spent: 100.0
          orders_count: 4
          email_address: "email_address"
          address:
            country: "United States"
            country_code: "US"
            province: "Georgia"
            address2: "Suite 5000"
            city: "Atlanta"
            address1: "675 Ponce de Leon Ave NE"
            province_code: "GA"
            postal_code: "30308"
          updated_at: "2015-07-15T19:28:00+00:00"
          _links:
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          last_name: "last_name"
          created_at: "2015-07-15T19:28:00+00:00"
          opt_in_status: true
          company: "company"
          id: "id"
          first_name: "first_name"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      total_items: 5
  Ecommerce Customer_1:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "string"
        description: "A unique identifier for the customer. Limited to 50 characters."
        title: "Customer Foreign ID"
        maxLength: 50
      email_address:
        type: "string"
        description: "The customer's email address."
        title: "Email Address"
      opt_in_status:
        type: "boolean"
        description: "The customer's opt-in status. This value will never overwrite\
          \ the opt-in status of a pre-existing Mailchimp list member, but will apply\
          \ to list members that are added through the e-commerce API endpoints. Customers\
          \ who don't opt in to your Mailchimp list [will be added as `Transactional`\
          \ members](https://mailchimp.com/developer/marketing/docs/e-commerce/#customers)."
        title: "Opt-in Status"
      company:
        type: "string"
        description: "The customer's company."
        title: "Company"
      first_name:
        type: "string"
        description: "The customer's first name."
        title: "First Name"
      last_name:
        type: "string"
        description: "The customer's last name."
        title: "Last Name"
      address:
        $ref: "#/definitions/Address"
    description: "Information about a specific customer. For existing customers include\
      \ only the `id` parameter in the `customer` object body."
  Ecommerce Cart Line Item_1:
    type: "object"
    required:
    - "id"
    - "price"
    - "product_id"
    - "product_variant_id"
    - "quantity"
    properties:
      id:
        type: "string"
        description: "A unique identifier for the cart line item."
        title: "Cart Line Item Foreign ID"
      product_id:
        type: "string"
        description: "A unique identifier for the product associated with the cart\
          \ line item."
        title: "Cart Line Product Foreign ID"
      product_variant_id:
        type: "string"
        description: "A unique identifier for the product variant associated with\
          \ the cart line item."
        title: "Cart Line Product Variant Foreign ID"
      quantity:
        type: "integer"
        description: "The quantity of a cart line item."
        title: "Quantity"
      price:
        type: "number"
        description: "The price of a cart line item."
        title: "Price"
    description: "Information about a specific cart line item."
  Ecommerce Cart_1:
    type: "object"
    required:
    - "currency_code"
    - "customer"
    - "id"
    - "lines"
    - "order_total"
    properties:
      id:
        type: "string"
        description: "A unique identifier for the cart."
        title: "Cart Foreign ID"
      customer:
        $ref: "#/definitions/Ecommerce Customer_1"
      campaign_id:
        type: "string"
        example: "839488a60b"
        description: "A string that uniquely identifies the campaign for a cart."
        title: "Campaign ID"
      checkout_url:
        type: "string"
        description: "The URL for the cart. This parameter is required for [Abandoned\
          \ Cart](https://mailchimp.com/help/create-an-abandoned-cart-email/) automations."
        title: "Checkout URL"
      currency_code:
        type: "string"
        description: "The three-letter ISO 4217 code for the currency that the cart\
          \ uses."
        title: "Currency Code"
      order_total:
        type: "number"
        description: "The order total for the cart."
        title: "Order Total"
      tax_total:
        type: "number"
        description: "The total tax for the cart."
        title: "Tax Total"
      lines:
        type: "array"
        description: "An array of the cart's line items."
        title: "Cart Line Items"
        items:
          $ref: "#/definitions/Ecommerce Cart Line Item_1"
    title: "E-commerce Cart"
    description: "Information about a specific cart."
  Ecommerce Customer_2:
    type: "object"
    properties:
      opt_in_status:
        type: "boolean"
        description: "The customer's opt-in status. This value will never overwrite\
          \ the opt-in status of a pre-existing Mailchimp list member, but will apply\
          \ to list members that are added through the e-commerce API endpoints. Customers\
          \ who don't opt in to your Mailchimp list [will be added as `Transactional`\
          \ members](https://mailchimp.com/developer/marketing/docs/e-commerce/#customers)."
        title: "Opt-in Status"
      company:
        type: "string"
        description: "The customer's company."
        title: "Company"
      first_name:
        type: "string"
        description: "The customer's first name."
        title: "First Name"
      last_name:
        type: "string"
        description: "The customer's last name."
        title: "Last Name"
      address:
        $ref: "#/definitions/Address"
    description: "Information about a specific customer. Orders for existing customers\
      \ should include only the `id` parameter in the `customer` object body."
  Ecommerce Cart Line Item_2:
    type: "object"
    properties:
      product_id:
        type: "string"
        description: "A unique identifier for the product associated with the cart\
          \ line item."
        title: "Cart Line Product Foreign ID"
      product_variant_id:
        type: "string"
        description: "A unique identifier for the product variant associated with\
          \ the cart line item."
        title: "Cart Line Product Variant Foreign ID"
      quantity:
        type: "integer"
        description: "The quantity of a cart line item."
        title: "Quantity"
      price:
        type: "number"
        description: "The price of a cart line item."
        title: "Price"
    description: "Information about a specific cart line item."
  Ecommerce Cart_2:
    type: "object"
    properties:
      customer:
        $ref: "#/definitions/Ecommerce Customer_2"
      campaign_id:
        type: "string"
        example: "839488a60b"
        description: "A string that uniquely identifies the campaign associated with\
          \ a cart."
        title: "Campaign ID"
      checkout_url:
        type: "string"
        description: "The URL for the cart. This parameter is required for [Abandoned\
          \ Cart](https://mailchimp.com/help/create-an-abandoned-cart-email/) automations."
        title: "Checkout URL"
      currency_code:
        type: "string"
        description: "The three-letter ISO 4217 code for the currency that the cart\
          \ uses."
        title: "Currency Code"
      order_total:
        type: "number"
        description: "The order total for the cart."
        title: "Order Total"
      tax_total:
        type: "number"
        description: "The total tax for the cart."
        title: "Tax Total"
      lines:
        type: "array"
        description: "An array of the cart's line items."
        title: "Cart Line Items"
        items:
          $ref: "#/definitions/Ecommerce Cart Line Item_2"
    title: "E-commerce Cart"
    description: "Information about a specific cart."
  Cart Lines:
    type: "object"
    properties:
      store_id:
        type: "string"
        description: "The store id."
        title: "Store ID"
      cart_id:
        type: "string"
        description: "The cart id."
        title: "Cart ID"
      lines:
        type: "array"
        description: "An array of objects, each representing a cart's line item."
        title: "Ecommerce Cart Lines"
        items:
          $ref: "#/definitions/Ecommerce Cart Line Item"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A collection of a cart's line items."
    example:
      store_id: "store_id"
      cart_id: "cart_id"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      lines:
      - product_variant_title: "product_variant_title"
        quantity: 1
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        price: 5.962133916683182377482808078639209270477294921875
        product_id: "product_id"
        id: "id"
        product_variant_id: "product_variant_id"
        product_title: "product_title"
      - product_variant_title: "product_variant_title"
        quantity: 1
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        price: 5.962133916683182377482808078639209270477294921875
        product_id: "product_id"
        id: "id"
        product_variant_id: "product_variant_id"
        product_title: "product_title"
      total_items: 0
  Ecommerce Cart Line Item_3:
    type: "object"
    required:
    - "id"
    - "price"
    - "product_id"
    - "product_variant_id"
    - "quantity"
    properties:
      id:
        type: "string"
        description: "A unique identifier for the cart line item."
        title: "Cart Line Item Foreign ID"
      product_id:
        type: "string"
        description: "A unique identifier for the product associated with the cart\
          \ line item."
        title: "Cart Line Product Foreign ID"
      product_variant_id:
        type: "string"
        description: "A unique identifier for the product variant associated with\
          \ the cart line item."
        title: "Cart Line Product Variant Foreign ID"
      quantity:
        type: "integer"
        description: "The quantity of a cart line item."
        title: "Quantity"
      price:
        type: "number"
        description: "The price of a cart line item."
        title: "Price"
    title: "E-commerce Cart Line Item"
    description: "Information about a specific cart line item."
  Ecommerce Cart Line Item_4:
    type: "object"
    properties:
      product_id:
        type: "string"
        description: "A unique identifier for the product associated with the cart\
          \ line item."
        title: "Cart Line Product Foreign ID"
      product_variant_id:
        type: "string"
        description: "A unique identifier for the product variant associated with\
          \ the cart line item."
        title: "Cart Line Product Variant Foreign ID"
      quantity:
        type: "integer"
        description: "The quantity of a cart line item."
        title: "Quantity"
      price:
        type: "number"
        description: "The price of a cart line item."
        title: "Price"
    title: "E-commerce Cart Line Item"
    description: "Information about a specific cart line item."
  Customers:
    type: "object"
    properties:
      store_id:
        type: "string"
        description: "The store id."
        title: "Store ID"
      customers:
        type: "array"
        description: "An array of objects, each representing a customer of a store."
        title: "Customers"
        items:
          $ref: "#/definitions/Ecommerce Customer"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A collection of the store's customers."
    example:
      store_id: "store_id"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      customers:
      - total_spent: 100.0
        orders_count: 4
        email_address: "email_address"
        address:
          country: "United States"
          country_code: "US"
          province: "Georgia"
          address2: "Suite 5000"
          city: "Atlanta"
          address1: "675 Ponce de Leon Ave NE"
          province_code: "GA"
          postal_code: "30308"
        updated_at: "2015-07-15T19:28:00+00:00"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        last_name: "last_name"
        created_at: "2015-07-15T19:28:00+00:00"
        opt_in_status: true
        company: "company"
        id: "id"
        first_name: "first_name"
      - total_spent: 100.0
        orders_count: 4
        email_address: "email_address"
        address:
          country: "United States"
          country_code: "US"
          province: "Georgia"
          address2: "Suite 5000"
          city: "Atlanta"
          address1: "675 Ponce de Leon Ave NE"
          province_code: "GA"
          postal_code: "30308"
        updated_at: "2015-07-15T19:28:00+00:00"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        last_name: "last_name"
        created_at: "2015-07-15T19:28:00+00:00"
        opt_in_status: true
        company: "company"
        id: "id"
        first_name: "first_name"
      total_items: 0
  Ecommerce Customer_3:
    type: "object"
    required:
    - "email_address"
    - "id"
    - "opt_in_status"
    properties:
      id:
        type: "string"
        description: "A unique identifier for the customer. Limited to 50 characters."
        title: "Customer Foreign ID"
        maxLength: 50
      email_address:
        type: "string"
        description: "The customer's email address."
        title: "Email Address"
      opt_in_status:
        type: "boolean"
        description: "The customer's opt-in status. This value will never overwrite\
          \ the opt-in status of a pre-existing Mailchimp list member, but will apply\
          \ to list members that are added through the e-commerce API endpoints. Customers\
          \ who don't opt in to your Mailchimp list [will be added as `Transactional`\
          \ members](https://mailchimp.com/developer/marketing/docs/e-commerce/#customers)."
        title: "Opt-in Status"
      company:
        type: "string"
        description: "The customer's company."
        title: "Company"
      first_name:
        type: "string"
        description: "The customer's first name."
        title: "First Name"
      last_name:
        type: "string"
        description: "The customer's last name."
        title: "Last Name"
      address:
        $ref: "#/definitions/Address"
    title: "E-commerce Customer"
    description: "Information about a specific customer."
  Ecommerce Customer_4:
    type: "object"
    required:
    - "email_address"
    - "id"
    - "opt_in_status"
    properties:
      id:
        type: "string"
        description: "A unique identifier for the customer. Limited to 50 characters."
        title: "Customer Foreign ID"
        maxLength: 50
      email_address:
        type: "string"
        description: "The customer's email address."
        title: "Email Address"
      opt_in_status:
        type: "boolean"
        description: "The customer's opt-in status. This value will never overwrite\
          \ the opt-in status of a pre-existing Mailchimp list member, but will apply\
          \ to list members that are added through the e-commerce API endpoints. Customers\
          \ who don't opt in to your Mailchimp list [will be added as `Transactional`\
          \ members](https://mailchimp.com/developer/marketing/docs/e-commerce/#customers)."
        title: "Opt-in Status"
      company:
        type: "string"
        description: "The customer's company."
        title: "Company"
      first_name:
        type: "string"
        description: "The customer's first name."
        title: "First Name"
      last_name:
        type: "string"
        description: "The customer's last name."
        title: "Last Name"
      address:
        $ref: "#/definitions/Address"
    title: "E-commerce Customer"
    description: "Information about a specific customer. Orders for existing customers\
      \ should include only the `id` parameter in the `customer` object body."
  Ecommerce Customer_5:
    type: "object"
    properties:
      opt_in_status:
        type: "boolean"
        description: "The customer's opt-in status. This value will never overwrite\
          \ the opt-in status of a pre-existing Mailchimp list member, but will apply\
          \ to list members that are added through the e-commerce API endpoints. Customers\
          \ who don't opt in to your Mailchimp list [will be added as `Transactional`\
          \ members](https://mailchimp.com/developer/marketing/docs/e-commerce/#customers)."
        title: "Opt-in Status"
      company:
        type: "string"
        description: "The customer's company."
        title: "Company"
      first_name:
        type: "string"
        description: "The customer's first name."
        title: "First Name"
      last_name:
        type: "string"
        description: "The customer's last name."
        title: "Last Name"
      address:
        $ref: "#/definitions/Address"
    title: "E-commerce Customer"
    description: "Information about a specific customer. Orders for existing customers\
      \ should include only the `id` parameter in the `customer` object body."
  Ecommerce Promo Rule:
    type: "object"
    properties:
      id:
        type: "string"
        description: "A unique identifier for the promo rule. If Ecommerce platform\
          \ does not support promo rule, use promo code id as promo rule id. Restricted\
          \ to UTF-8 characters with max length 50."
        title: "Promo Rule Foreign ID"
        readOnly: true
      title:
        type: "string"
        example: "50% off Total Order"
        description: "The title that will show up in promotion campaign. Restricted\
          \ to UTF-8 characters with max length of 100 bytes."
        title: "Title"
      description:
        type: "string"
        example: "Save BIG during our summer sale!"
        description: "The description of a promotion restricted to UTF-8 characters\
          \ with max length 255."
        title: "Description"
      starts_at:
        type: "string"
        format: "date-time"
        description: "The date and time when the promotion is in effect in ISO 8601\
          \ format."
        title: "Promo Start Time"
      ends_at:
        type: "string"
        format: "Promo date-time"
        description: "The date and time when the promotion ends. Must be after starts_at\
          \ and in ISO 8601 format."
        title: "End Time"
      amount:
        type: "number"
        format: "float"
        example: 0.5
        description: "The amount of the promo code discount. If 'type' is 'fixed',\
          \ the amount is treated as a monetary value. If 'type' is 'percentage',\
          \ amount must be a decimal value between 0.0 and 1.0, inclusive."
        title: "Amount"
      type:
        type: "string"
        description: "Type of discount. For free shipping set type to fixed."
        title: "Type"
        enum:
        - "fixed"
        - "percentage"
      target:
        type: "string"
        description: "The target that the discount applies to."
        title: "Target"
        enum:
        - "per_item"
        - "total"
        - "shipping"
      enabled:
        type: "boolean"
        example: true
        description: "Whether the promo rule is currently enabled."
        title: "Enabled"
      created_at_foreign:
        type: "string"
        format: "date-time"
        description: "The date and time the promotion was created in ISO 8601 format."
        title: "Foreign Create Time"
      updated_at_foreign:
        type: "string"
        format: "date-time"
        description: "The date and time the promotion was updated in ISO 8601 format."
        title: "Foreign Update Time"
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "Information about an Ecommerce Store's specific Promo Rule"
    example:
      starts_at: "2000-01-23T04:56:07.000+00:00"
      amount: 0.5
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      description: "Save BIG during our summer sale!"
      id: "id"
      ends_at: "ends_at"
      created_at_foreign: "2000-01-23T04:56:07.000+00:00"
      title: "50% off Total Order"
      type: "fixed"
      updated_at_foreign: "2000-01-23T04:56:07.000+00:00"
      enabled: true
      target: "per_item"
  Promo Rules:
    type: "object"
    properties:
      store_id:
        type: "string"
        description: "The store id."
        title: "Store ID"
      promo_rules:
        type: "array"
        description: "An array of objects, each representing promo rules defined for\
          \ a store."
        title: "Promo Rules"
        items:
          $ref: "#/definitions/Ecommerce Promo Rule"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A collection of the store's promo rules."
    example:
      store_id: "store_id"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      promo_rules:
      - starts_at: "2000-01-23T04:56:07.000+00:00"
        amount: 0.5
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        description: "Save BIG during our summer sale!"
        id: "id"
        ends_at: "ends_at"
        created_at_foreign: "2000-01-23T04:56:07.000+00:00"
        title: "50% off Total Order"
        type: "fixed"
        updated_at_foreign: "2000-01-23T04:56:07.000+00:00"
        enabled: true
        target: "per_item"
      - starts_at: "2000-01-23T04:56:07.000+00:00"
        amount: 0.5
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        description: "Save BIG during our summer sale!"
        id: "id"
        ends_at: "ends_at"
        created_at_foreign: "2000-01-23T04:56:07.000+00:00"
        title: "50% off Total Order"
        type: "fixed"
        updated_at_foreign: "2000-01-23T04:56:07.000+00:00"
        enabled: true
        target: "per_item"
      total_items: 0
  Ecommerce Promo Rule_1:
    type: "object"
    required:
    - "amount"
    - "description"
    - "id"
    - "target"
    - "type"
    properties:
      id:
        type: "string"
        description: "A unique identifier for the promo rule. If Ecommerce platform\
          \ does not support promo rule, use promo code id as promo rule id. Restricted\
          \ to UTF-8 characters with max length 50."
        title: "Promo Rule Foreign ID"
      title:
        type: "string"
        example: "50% off Total Order"
        description: "The title that will show up in promotion campaign. Restricted\
          \ to UTF-8 characters with max length of 100 bytes."
        title: "Title"
      description:
        type: "string"
        example: "Save BIG during our summer sale!"
        description: "The description of a promotion restricted to UTF-8 characters\
          \ with max length 255."
        title: "Description"
      starts_at:
        type: "string"
        format: "date-time"
        description: "The date and time when the promotion is in effect in ISO 8601\
          \ format."
        title: "Promo Start Time"
      ends_at:
        type: "string"
        format: "Promo date-time"
        description: "The date and time when the promotion ends. Must be after starts_at\
          \ and in ISO 8601 format."
        title: "End Time"
      amount:
        type: "number"
        format: "float"
        example: 0.5
        description: "The amount of the promo code discount. If 'type' is 'fixed',\
          \ the amount is treated as a monetary value. If 'type' is 'percentage',\
          \ amount must be a decimal value between 0.0 and 1.0, inclusive."
        title: "Amount"
      type:
        type: "string"
        description: "Type of discount. For free shipping set type to fixed."
        title: "Type"
        enum:
        - "fixed"
        - "percentage"
      target:
        type: "string"
        description: "The target that the discount applies to."
        title: "Target"
        enum:
        - "per_item"
        - "total"
        - "shipping"
      enabled:
        type: "boolean"
        example: true
        description: "Whether the promo rule is currently enabled."
        title: "Enabled"
      created_at_foreign:
        type: "string"
        format: "date-time"
        description: "The date and time the promotion was created in ISO 8601 format."
        title: "Foreign Create Time"
      updated_at_foreign:
        type: "string"
        format: "date-time"
        description: "The date and time the promotion was updated in ISO 8601 format."
        title: "Foreign Update Time"
    title: "E-commerce Promo Rule"
    description: "Information about an Ecommerce Store's specific Promo Rule."
  Ecommerce Promo Rule_2:
    type: "object"
    properties:
      title:
        type: "string"
        example: "50% off Total Order"
        description: "The title that will show up in promotion campaign. Restricted\
          \ to UTF-8 characters with max length of 100 bytes."
        title: "Title"
      description:
        type: "string"
        example: "Save BIG during our summer sale!"
        description: "The description of a promotion restricted to UTF-8 characters\
          \ with max length 255."
        title: "Description"
      starts_at:
        type: "string"
        format: "date-time"
        description: "The date and time when the promotion is in effect in ISO 8601\
          \ format."
        title: "Promo Start Time"
      ends_at:
        type: "string"
        format: "Promo date-time"
        description: "The date and time when the promotion ends. Must be after starts_at\
          \ and in ISO 8601 format."
        title: "End Time"
      amount:
        type: "number"
        format: "float"
        example: 0.5
        description: "The amount of the promo code discount. If 'type' is 'fixed',\
          \ the amount is treated as a monetary value. If 'type' is 'percentage',\
          \ amount must be a decimal value between 0.0 and 1.0, inclusive."
        title: "Amount"
      type:
        type: "string"
        description: "Type of discount. For free shipping set type to fixed."
        title: "Type"
        enum:
        - "fixed"
        - "percentage"
      target:
        type: "string"
        description: "The target that the discount applies to."
        title: "Target"
        enum:
        - "per_item"
        - "total"
        - "shipping"
      enabled:
        type: "boolean"
        example: true
        description: "Whether the promo rule is currently enabled."
        title: "Enabled"
      created_at_foreign:
        type: "string"
        format: "date-time"
        description: "The date and time the promotion was created in ISO 8601 format."
        title: "Foreign Create Time"
      updated_at_foreign:
        type: "string"
        format: "date-time"
        description: "The date and time the promotion was updated in ISO 8601 format."
        title: "Foreign Update Time"
    title: "E-commerce Promo Rule"
    description: "Information about an Ecommerce Store's specific Promo Rule."
  Ecommerce Promo Code:
    type: "object"
    properties:
      id:
        type: "string"
        description: "A unique identifier for the promo Code."
        title: "Promo Code Foreign ID"
        readOnly: true
      code:
        type: "string"
        example: "summersale"
        description: "The discount code. Restricted to UTF-8 characters with max length\
          \ 50."
        title: "Promo Code"
      redemption_url:
        type: "string"
        example: "A url that applies promo code directly at checkout or a url that\
          \ points to sale page or store url"
        description: "The url that should be used in the promotion campaign restricted\
          \ to UTF-8 characters with max length 2000."
        title: "Redemption Url"
      usage_count:
        type: "integer"
        description: "Number of times promo code has been used."
        title: "Promo Code Usage Count"
      enabled:
        type: "boolean"
        example: true
        description: "Whether the promo code is currently enabled."
        title: "Enabled"
      created_at_foreign:
        type: "string"
        format: "date-time"
        description: "The date and time the promotion was created in ISO 8601 format."
        title: "Foreign Create Time"
      updated_at_foreign:
        type: "string"
        format: "date-time"
        description: "The date and time the promotion was updated in ISO 8601 format."
        title: "Foreign Update Time"
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "Information about an Ecommerce Store's specific Promo Code"
    example:
      usage_count: 0
      code: "summersale"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      id: "id"
      created_at_foreign: "2000-01-23T04:56:07.000+00:00"
      updated_at_foreign: "2000-01-23T04:56:07.000+00:00"
      redemption_url: "A url that applies promo code directly at checkout or a url\
        \ that points to sale page or store url"
      enabled: true
  Promo Codes:
    type: "object"
    properties:
      store_id:
        type: "string"
        description: "The store id."
        title: "Store ID"
      promo_codes:
        type: "array"
        description: "An array of objects, each representing promo codes defined for\
          \ a store."
        title: "Promo Codes"
        items:
          $ref: "#/definitions/Ecommerce Promo Code"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A collection of the store's promo codes."
    example:
      store_id: "store_id"
      promo_codes:
      - usage_count: 0
        code: "summersale"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        id: "id"
        created_at_foreign: "2000-01-23T04:56:07.000+00:00"
        updated_at_foreign: "2000-01-23T04:56:07.000+00:00"
        redemption_url: "A url that applies promo code directly at checkout or a url\
          \ that points to sale page or store url"
        enabled: true
      - usage_count: 0
        code: "summersale"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        id: "id"
        created_at_foreign: "2000-01-23T04:56:07.000+00:00"
        updated_at_foreign: "2000-01-23T04:56:07.000+00:00"
        redemption_url: "A url that applies promo code directly at checkout or a url\
          \ that points to sale page or store url"
        enabled: true
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      total_items: 6
  Ecommerce Promo Code_1:
    type: "object"
    required:
    - "code"
    - "id"
    - "redemption_url"
    properties:
      id:
        type: "string"
        description: "A unique identifier for the promo code. Restricted to UTF-8\
          \ characters with max length 50."
        title: "Promo Code Foreign ID"
      code:
        type: "string"
        example: "summersale"
        description: "The discount code. Restricted to UTF-8 characters with max length\
          \ 50."
        title: "Promo Code"
      redemption_url:
        type: "string"
        example: "A url that applies promo code directly at checkout or a url that\
          \ points to sale page or store url"
        description: "The url that should be used in the promotion campaign restricted\
          \ to UTF-8 characters with max length 2000."
        title: "Redemption Url"
      usage_count:
        type: "integer"
        description: "Number of times promo code has been used."
        title: "Promo Code Usage Count"
      enabled:
        type: "boolean"
        example: true
        description: "Whether the promo code is currently enabled."
        title: "Enabled"
      created_at_foreign:
        type: "string"
        format: "date-time"
        description: "The date and time the promotion was created in ISO 8601 format."
        title: "Foreign Create Time"
      updated_at_foreign:
        type: "string"
        format: "date-time"
        description: "The date and time the promotion was updated in ISO 8601 format."
        title: "Foreign Update Time"
    title: "E-commerce Promo Code"
    description: "Information about an Ecommerce Store's specific Promo Code."
  Ecommerce Promo Code_2:
    type: "object"
    properties:
      code:
        type: "string"
        example: "summersale"
        description: "The discount code. Restricted to UTF-8 characters with max length\
          \ 50."
        title: "Promo Code"
      redemption_url:
        type: "string"
        example: "A url that applies promo code directly at checkout or a url that\
          \ points to sale page or store url"
        description: "The url that should be used in the promotion campaign restricted\
          \ to UTF-8 characters with max length 2000."
        title: "Redemption Url"
      usage_count:
        type: "integer"
        description: "Number of times promo code has been used."
        title: "Promo Code Usage Count"
      enabled:
        type: "boolean"
        example: true
        description: "Whether the promo code is currently enabled."
        title: "Enabled"
      created_at_foreign:
        type: "string"
        format: "date-time"
        description: "The date and time the promotion was created in ISO 8601 format."
        title: "Foreign Create Time"
      updated_at_foreign:
        type: "string"
        format: "date-time"
        description: "The date and time the promotion was updated in ISO 8601 format."
        title: "Foreign Update Time"
    title: "E-commerce Promo Code"
    description: "Information about an Ecommerce Store's specific Promo Code."
  Orders_1:
    type: "object"
    properties:
      store_id:
        type: "string"
        description: "The unique identifier for the store."
        title: "Store ID"
      orders:
        type: "array"
        description: "An array of objects, each representing an order in a store."
        title: "Orders"
        items:
          $ref: "#/definitions/Ecommerce Order"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A collection of orders in a store."
    example:
      store_id: "store_id"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      orders:
      - discount_total: 6.02745618307040320615897144307382404804229736328125
        fulfillment_status: "fulfillment_status"
        tax_total: 1.46581298050294517310021547018550336360931396484375
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        processed_at_foreign: "2015-07-15T19:28:00+00:00"
        billing_address:
          country: "United States"
          address2: "Suite 5000"
          city: "Atlanta"
          address1: "675 Ponce de Leon Ave NE"
          latitude: 45.427408
          province_code: "GA"
          country_code: "US"
          province: "Georgia"
          phone: "8675309"
          name: "Freddie Chimpenheimer"
          company: "company"
          postal_code: "30308"
          longitude: -75.68903
        currency_code: "currency_code"
        landing_site: "http://www.example.com?source=abc"
        order_url: "order_url"
        tracking_number: "tracking_number"
        id: "id"
        shipping_address:
          country: "United States"
          address2: "Suite 5000"
          city: "Atlanta"
          address1: "675 Ponce de Leon Ave NE"
          latitude: 45.427408
          province_code: "GA"
          country_code: "US"
          province: "Georgia"
          phone: "8675309"
          name: "Freddie Chimpenheimer"
          company: "company"
          postal_code: "30308"
          longitude: -75.68903
        updated_at_foreign: "2015-07-15T19:28:00+00:00"
        lines:
        - product_variant_title: "product_variant_title"
          quantity: 2
          _links:
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          image_url: "image_url"
          price: 7.061401241503109105224211816675961017608642578125
          product_id: "product_id"
          discount: 9.301444243932575517419536481611430644989013671875
          id: "id"
          product_variant_id: "product_variant_id"
          product_title: "product_title"
        - product_variant_title: "product_variant_title"
          quantity: 2
          _links:
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          image_url: "image_url"
          price: 7.061401241503109105224211816675961017608642578125
          product_id: "product_id"
          discount: 9.301444243932575517419536481611430644989013671875
          id: "id"
          product_variant_id: "product_variant_id"
          product_title: "product_title"
        promos:
        - code: "code"
          amount_discounted: 5.63737665663332876420099637471139430999755859375
          type: "fixed"
        - code: "code"
          amount_discounted: 5.63737665663332876420099637471139430999755859375
          type: "fixed"
        tracking_url: "tracking_url"
        campaign_id: "839488a60b"
        cancelled_at_foreign: "2015-07-15T19:28:00+00:00"
        store_id: "store_id"
        shipping_total: 5.962133916683182377482808078639209270477294921875
        outreach:
          published_time: "2017-06-06T13:56:12+00:00"
          name: "Freddie's Jokes"
          id: "839488a60b"
          type: "regular"
        tracking_code: "prec"
        tracking_carrier: "tracking_carrier"
        financial_status: "financial_status"
        order_total: 0.80082819046101150206595775671303272247314453125
        customer:
          total_spent: 100.0
          orders_count: 4
          email_address: "email_address"
          address:
            country: "United States"
            country_code: "US"
            province: "Georgia"
            address2: "Suite 5000"
            city: "Atlanta"
            address1: "675 Ponce de Leon Ave NE"
            province_code: "GA"
            postal_code: "30308"
          updated_at: "2015-07-15T19:28:00+00:00"
          _links:
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          last_name: "last_name"
          created_at: "2015-07-15T19:28:00+00:00"
          opt_in_status: true
          company: "company"
          id: "id"
          first_name: "first_name"
      - discount_total: 6.02745618307040320615897144307382404804229736328125
        fulfillment_status: "fulfillment_status"
        tax_total: 1.46581298050294517310021547018550336360931396484375
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        processed_at_foreign: "2015-07-15T19:28:00+00:00"
        billing_address:
          country: "United States"
          address2: "Suite 5000"
          city: "Atlanta"
          address1: "675 Ponce de Leon Ave NE"
          latitude: 45.427408
          province_code: "GA"
          country_code: "US"
          province: "Georgia"
          phone: "8675309"
          name: "Freddie Chimpenheimer"
          company: "company"
          postal_code: "30308"
          longitude: -75.68903
        currency_code: "currency_code"
        landing_site: "http://www.example.com?source=abc"
        order_url: "order_url"
        tracking_number: "tracking_number"
        id: "id"
        shipping_address:
          country: "United States"
          address2: "Suite 5000"
          city: "Atlanta"
          address1: "675 Ponce de Leon Ave NE"
          latitude: 45.427408
          province_code: "GA"
          country_code: "US"
          province: "Georgia"
          phone: "8675309"
          name: "Freddie Chimpenheimer"
          company: "company"
          postal_code: "30308"
          longitude: -75.68903
        updated_at_foreign: "2015-07-15T19:28:00+00:00"
        lines:
        - product_variant_title: "product_variant_title"
          quantity: 2
          _links:
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          image_url: "image_url"
          price: 7.061401241503109105224211816675961017608642578125
          product_id: "product_id"
          discount: 9.301444243932575517419536481611430644989013671875
          id: "id"
          product_variant_id: "product_variant_id"
          product_title: "product_title"
        - product_variant_title: "product_variant_title"
          quantity: 2
          _links:
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          image_url: "image_url"
          price: 7.061401241503109105224211816675961017608642578125
          product_id: "product_id"
          discount: 9.301444243932575517419536481611430644989013671875
          id: "id"
          product_variant_id: "product_variant_id"
          product_title: "product_title"
        promos:
        - code: "code"
          amount_discounted: 5.63737665663332876420099637471139430999755859375
          type: "fixed"
        - code: "code"
          amount_discounted: 5.63737665663332876420099637471139430999755859375
          type: "fixed"
        tracking_url: "tracking_url"
        campaign_id: "839488a60b"
        cancelled_at_foreign: "2015-07-15T19:28:00+00:00"
        store_id: "store_id"
        shipping_total: 5.962133916683182377482808078639209270477294921875
        outreach:
          published_time: "2017-06-06T13:56:12+00:00"
          name: "Freddie's Jokes"
          id: "839488a60b"
          type: "regular"
        tracking_code: "prec"
        tracking_carrier: "tracking_carrier"
        financial_status: "financial_status"
        order_total: 0.80082819046101150206595775671303272247314453125
        customer:
          total_spent: 100.0
          orders_count: 4
          email_address: "email_address"
          address:
            country: "United States"
            country_code: "US"
            province: "Georgia"
            address2: "Suite 5000"
            city: "Atlanta"
            address1: "675 Ponce de Leon Ave NE"
            province_code: "GA"
            postal_code: "30308"
          updated_at: "2015-07-15T19:28:00+00:00"
          _links:
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          last_name: "last_name"
          created_at: "2015-07-15T19:28:00+00:00"
          opt_in_status: true
          company: "company"
          id: "id"
          first_name: "first_name"
      total_items: 0
  Shipping Address_1:
    type: "object"
    properties:
      name:
        type: "string"
        example: "Freddie Chimpenheimer"
        description: "The name associated with an order's shipping address."
        title: "Name"
      address1:
        type: "string"
        example: "675 Ponce de Leon Ave NE"
        description: "The shipping address for the order."
        title: "Address Field 1"
      address2:
        type: "string"
        example: "Suite 5000"
        description: "An additional field for the shipping address."
        title: "Address Field 2"
      city:
        type: "string"
        example: "Atlanta"
        description: "The city in the order's shipping address."
        title: "City "
      province:
        type: "string"
        example: "Georgia"
        description: "The state or normalized province in the order's shipping address."
        title: "Province"
      province_code:
        type: "string"
        example: "GA"
        description: "The two-letter code for the province or state in the shipping\
          \ address."
        title: "Province Code"
      postal_code:
        type: "string"
        example: "30308"
        description: "The postal or zip code in the shipping address."
        title: "Postal Code"
      country:
        type: "string"
        example: "United States"
        description: "The country in the shipping address."
        title: "Country Code"
      country_code:
        type: "string"
        example: "US"
        description: "The two-letter code for the country in the shipping address."
        title: "Country Code"
      longitude:
        type: "number"
        example: -75.68903
        description: "The longitude for the shipping address location."
        title: "Longitude"
      latitude:
        type: "number"
        example: 45.427408
        description: "The latitude for the shipping address location."
        title: "Latitude"
      phone:
        type: "string"
        example: "8675309"
        description: "The phone number for the order's shipping address."
        title: "Phone Number"
      company:
        type: "string"
        description: "The company associated with the shipping address."
        title: "Company"
    description: "The shipping address for the order."
  Billing Address_1:
    type: "object"
    properties:
      name:
        type: "string"
        example: "Freddie Chimpenheimer"
        description: "The name associated with the billing address."
        title: "Name"
      address1:
        type: "string"
        example: "675 Ponce de Leon Ave NE"
        description: "The billing address for the order."
        title: "Address Field 1"
      address2:
        type: "string"
        example: "Suite 5000"
        description: "An additional field for the billing address."
        title: "Address Field 2"
      city:
        type: "string"
        example: "Atlanta"
        description: "The city in the billing address."
        title: "City "
      province:
        type: "string"
        example: "Georgia"
        description: "The state or normalized province in the billing address."
        title: "Province"
      province_code:
        type: "string"
        example: "GA"
        description: "The two-letter code for the province in the billing address."
        title: "Province Code"
      postal_code:
        type: "string"
        example: "30308"
        description: "The postal or zip code in the billing address."
        title: "Postal Code"
      country:
        type: "string"
        example: "United States"
        description: "The country in the billing address."
        title: "Country Code"
      country_code:
        type: "string"
        example: "US"
        description: "The two-letter code for the country in the billing address."
        title: "Country Code"
      longitude:
        type: "number"
        example: -75.68903
        description: "The longitude for the billing address location."
        title: "Longitude"
      latitude:
        type: "number"
        example: 45.427408
        description: "The latitude for the billing address location."
        title: "Latitude"
      phone:
        type: "string"
        example: "8675309"
        description: "The phone number for the billing address"
        title: "Phone Number"
      company:
        type: "string"
        description: "The company associated with the billing address."
        title: "Company"
    description: "The billing address for the order."
  ecommercestoresstore_idorders_promos:
    type: "object"
    required:
    - "amount_discounted"
    - "code"
    - "type"
    properties:
      code:
        type: "string"
        description: "The Promo Code"
        title: "Code"
      amount_discounted:
        type: "number"
        description: "The amount of discount applied on the total price. For example\
          \ if the total cost was $100 and the customer paid $95.5, amount_discounted\
          \ will be 4.5 For free shipping set amount_discounted to 0"
        title: "Amount Discounted"
      type:
        type: "string"
        description: "Type of discount. For free shipping set type to fixed"
        title: "Type"
        enum:
        - "fixed"
        - "percentage"
  Ecommerce Order Line Item_1:
    type: "object"
    required:
    - "id"
    - "price"
    - "product_id"
    - "product_variant_id"
    - "quantity"
    properties:
      id:
        type: "string"
        description: "A unique identifier for the order line item."
        title: "Order Line Item Foreign ID"
      product_id:
        type: "string"
        description: "A unique identifier for the product associated with the order\
          \ line item."
        title: "Order Line Item Product Foreign ID"
      product_variant_id:
        type: "string"
        description: "A unique identifier for the product variant associated with\
          \ the order line item."
        title: "Order Line Item Product Variant Foreign ID"
      quantity:
        type: "integer"
        description: "The quantity of an order line item."
        title: "Quantity"
      price:
        type: "number"
        description: "The price of an order line item."
        title: "Price"
      discount:
        type: "number"
        description: "The total discount amount applied to this line item."
        title: "Discount"
    description: "Information about a specific order line."
  Outreach_1:
    type: "object"
    properties:
      id:
        type: "string"
        example: "839488a60b"
        description: "A unique identifier for the outreach. Can be an email campaign\
          \ ID."
        title: "Outreach ID"
    description: "The outreach associated with this order. For example, an email campaign\
      \ or Facebook ad."
  Ecommerce Order_1:
    type: "object"
    required:
    - "currency_code"
    - "customer"
    - "id"
    - "lines"
    - "order_total"
    properties:
      id:
        type: "string"
        description: "A unique identifier for the order."
        title: "Order Foreign ID"
      customer:
        $ref: "#/definitions/Ecommerce Customer_1"
      campaign_id:
        type: "string"
        example: "839488a60b"
        description: "A string that uniquely identifies the campaign for an order."
        title: "Campaign ID"
      landing_site:
        type: "string"
        example: "http://www.example.com?source=abc"
        description: "The URL for the page where the buyer landed when entering the\
          \ shop."
        title: "Landing Site"
      financial_status:
        type: "string"
        description: "The order status. Use this parameter to trigger [Order Notifications](https://mailchimp.com/developer/marketing/docs/e-commerce/#order-notifications)."
        title: "Financial Status"
      fulfillment_status:
        type: "string"
        description: "The fulfillment status for the order. Use this parameter to\
          \ trigger [Order Notifications](https://mailchimp.com/developer/marketing/docs/e-commerce/#order-notifications)."
        title: "Fulfillment Status"
      currency_code:
        type: "string"
        description: "The three-letter ISO 4217 code for the currency that the store\
          \ accepts."
        title: "Currency Code"
      order_total:
        type: "number"
        description: "The total for the order."
        title: "Order Total"
      order_url:
        type: "string"
        description: "The URL for the order."
        title: "Order URL"
      discount_total:
        type: "number"
        description: "The total amount of the discounts to be applied to the price\
          \ of the order."
        title: "Discount Total"
      tax_total:
        type: "number"
        description: "The tax total for the order."
        title: "Tax Total"
      shipping_total:
        type: "number"
        description: "The shipping total for the order."
        title: "Shipping Total"
      tracking_code:
        type: "string"
        description: "The Mailchimp tracking code for the order. Uses the 'mc_tc'\
          \ parameter in E-Commerce tracking URLs."
        title: "Tracking Code"
        enum:
        - "prec"
      processed_at_foreign:
        type: "string"
        format: "date-time"
        example: "2015-07-15T19:28:00+00:00"
        description: "The date and time the order was processed in ISO 8601 format."
        title: "Foreign Processed Time"
      cancelled_at_foreign:
        type: "string"
        format: "date-time"
        example: "2015-07-15T19:28:00+00:00"
        description: "The date and time the order was cancelled in ISO 8601 format.\
          \ Note: passing a value for this parameter will cancel the order being created."
        title: "Foreign Cancel Time"
      updated_at_foreign:
        type: "string"
        format: "date-time"
        example: "2015-07-15T19:28:00+00:00"
        description: "The date and time the order was updated in ISO 8601 format."
        title: "Foreign Update Time"
      shipping_address:
        $ref: "#/definitions/Shipping Address_1"
      billing_address:
        $ref: "#/definitions/Billing Address_1"
      promos:
        type: "array"
        description: "The promo codes applied on the order"
        title: "Promos"
        items:
          $ref: "#/definitions/ecommercestoresstore_idorders_promos"
      lines:
        type: "array"
        description: "An array of the order's line items."
        title: "Order Line Items"
        items:
          $ref: "#/definitions/Ecommerce Order Line Item_1"
      outreach:
        $ref: "#/definitions/Outreach_1"
      tracking_number:
        type: "string"
        description: "The tracking number associated with the order."
        title: "Tracking number"
      tracking_carrier:
        type: "string"
        description: "The tracking carrier associated with the order."
        title: "Tracking carrier"
      tracking_url:
        type: "string"
        description: "The tracking URL associated with the order."
        title: "Tracking URL"
    title: "E-commerce Order"
    description: "Information about a specific order."
  Ecommerce Order Line Item_2:
    type: "object"
    properties:
      product_id:
        type: "string"
        description: "A unique identifier for the product associated with the order\
          \ line item."
        title: "Order Line Item Product Foreign ID"
      product_variant_id:
        type: "string"
        description: "A unique identifier for the product variant associated with\
          \ the order line item."
        title: "Order Line Item Product Variant Foreign ID"
      quantity:
        type: "integer"
        description: "The quantity of an order line item."
        title: "Quantity"
      price:
        type: "number"
        description: "The price of an order line item."
        title: "Price"
      discount:
        type: "number"
        description: "The total discount amount applied to this line item."
        title: "Discount"
    description: "Information about a specific order line."
  Ecommerce Order_2:
    type: "object"
    properties:
      customer:
        $ref: "#/definitions/Ecommerce Customer_2"
      campaign_id:
        type: "string"
        example: "839488a60b"
        description: "A string that uniquely identifies the campaign associated with\
          \ an order."
        title: "Campaign ID"
      landing_site:
        type: "string"
        example: "http://www.example.com?source=abc"
        description: "The URL for the page where the buyer landed when entering the\
          \ shop."
        title: "Landing Site"
      financial_status:
        type: "string"
        description: "The order status. Use this parameter to trigger [Order Notifications](https://mailchimp.com/developer/marketing/docs/e-commerce/#order-notifications)."
        title: "Financial Status"
      fulfillment_status:
        type: "string"
        description: "The fulfillment status for the order. Use this parameter to\
          \ trigger [Order Notifications](https://mailchimp.com/developer/marketing/docs/e-commerce/#order-notifications)."
        title: "Fulfillment Status"
      currency_code:
        type: "string"
        description: "The three-letter ISO 4217 code for the currency that the store\
          \ accepts."
        title: "Currency Code"
      order_total:
        type: "number"
        description: "The order total associated with an order."
        title: "Order Total"
      order_url:
        type: "string"
        description: "The URL for the order."
        title: "Order URL"
      discount_total:
        type: "number"
        description: "The total amount of the discounts to be applied to the price\
          \ of the order."
        title: "Discount Total"
      tax_total:
        type: "number"
        description: "The tax total associated with an order."
        title: "Tax Total"
      shipping_total:
        type: "number"
        description: "The shipping total for the order."
        title: "Shipping Total"
      tracking_code:
        type: "string"
        description: "The Mailchimp tracking code for the order. Uses the 'mc_tc'\
          \ parameter in E-Commerce tracking URLs."
        title: "Tracking Code"
        enum:
        - "prec"
      processed_at_foreign:
        type: "string"
        format: "date-time"
        example: "2015-07-15T19:28:00+00:00"
        description: "The date and time the order was processed in ISO 8601 format."
        title: "Foreign Processed Time"
      cancelled_at_foreign:
        type: "string"
        format: "date-time"
        example: "2015-07-15T19:28:00+00:00"
        description: "The date and time the order was cancelled in ISO 8601 format.\
          \ Note: passing a value for this parameter will cancel the order being edited."
        title: "Foreign Cancel Time"
      updated_at_foreign:
        type: "string"
        format: "date-time"
        example: "2015-07-15T19:28:00+00:00"
        description: "The date and time the order was updated in ISO 8601 format."
        title: "Foreign Update Time"
      shipping_address:
        $ref: "#/definitions/Shipping Address"
      billing_address:
        $ref: "#/definitions/Billing Address"
      promos:
        type: "array"
        description: "The promo codes applied on the order. Note: Patch will completely\
          \ replace the value of promos with the new one provided."
        title: "Promos"
        items:
          $ref: "#/definitions/ecommercestoresstore_idorders_promos"
      lines:
        type: "array"
        description: "An array of the order's line items."
        title: "Order Line Items"
        items:
          $ref: "#/definitions/Ecommerce Order Line Item_2"
      outreach:
        $ref: "#/definitions/Outreach_1"
      tracking_number:
        type: "string"
        description: "The tracking number associated with the order."
        title: "Tracking number"
      tracking_carrier:
        type: "string"
        description: "The tracking carrier associated with the order."
        title: "Tracking carrier"
      tracking_url:
        type: "string"
        description: "The tracking URL associated with the order."
        title: "Tracking URL"
    title: "E-commerce Order"
    description: "Information about a specific order."
  Order Lines:
    type: "object"
    properties:
      store_id:
        type: "string"
        description: "The store id."
        title: "Store ID"
      order_id:
        type: "string"
        description: "The order id."
        title: "Order ID"
      lines:
        type: "array"
        description: "An array of objects, each representing an order's line item."
        title: "Ecommerce Order Lines"
        items:
          $ref: "#/definitions/Ecommerce Order Line Item"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A collection of an order's line items."
    example:
      store_id: "store_id"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      lines:
      - product_variant_title: "product_variant_title"
        quantity: 2
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        image_url: "image_url"
        price: 7.061401241503109105224211816675961017608642578125
        product_id: "product_id"
        discount: 9.301444243932575517419536481611430644989013671875
        id: "id"
        product_variant_id: "product_variant_id"
        product_title: "product_title"
      - product_variant_title: "product_variant_title"
        quantity: 2
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        image_url: "image_url"
        price: 7.061401241503109105224211816675961017608642578125
        product_id: "product_id"
        discount: 9.301444243932575517419536481611430644989013671875
        id: "id"
        product_variant_id: "product_variant_id"
        product_title: "product_title"
      order_id: "order_id"
      total_items: 0
  Ecommerce Order Line Item_3:
    type: "object"
    required:
    - "id"
    - "price"
    - "product_id"
    - "product_variant_id"
    - "quantity"
    properties:
      id:
        type: "string"
        description: "A unique identifier for the order line item."
        title: "Order Line Item Foreign ID"
      product_id:
        type: "string"
        description: "A unique identifier for the product associated with the order\
          \ line item."
        title: "Order Line Item Product Foreign ID"
      product_variant_id:
        type: "string"
        description: "A unique identifier for the product variant associated with\
          \ the order line item."
        title: "Order Line Item Product Variant Foreign ID"
      quantity:
        type: "integer"
        description: "The quantity of an order line item."
        title: "Quantity"
      price:
        type: "number"
        description: "The price of an order line item."
        title: "Price"
      discount:
        type: "number"
        description: "The total discount amount applied to this line item."
        title: "Discount"
    title: "E-commerce Order Line Item"
    description: "Information about a specific order line."
  Ecommerce Order Line Item_4:
    type: "object"
    properties:
      product_id:
        type: "string"
        description: "A unique identifier for the product associated with the order\
          \ line item."
        title: "Order Line Item Product Foreign ID"
      product_variant_id:
        type: "string"
        description: "A unique identifier for the product variant associated with\
          \ the order line item."
        title: "Order Line Item Product Variant Foreign ID"
      quantity:
        type: "integer"
        description: "The quantity of an order line item."
        title: "Quantity"
      price:
        type: "number"
        description: "The price of an order line item."
        title: "Price"
      discount:
        type: "number"
        description: "The total discount amount applied to this line item."
        title: "Discount"
    title: "E-commerce Order Line Item"
    description: "Information about a specific order line."
  Ecommerce Product Variant:
    type: "object"
    properties:
      id:
        type: "string"
        description: "A unique identifier for the product variant."
        title: "Product Variant Foreign ID"
        readOnly: true
      title:
        type: "string"
        example: "Cat Hat"
        description: "The title of a product variant."
        title: "Title"
      url:
        type: "string"
        description: "The URL for a product variant."
        title: "URL"
      sku:
        type: "string"
        description: "The stock keeping unit (SKU) of a product variant."
        title: "SKU"
      price:
        type: "number"
        description: "The price of a product variant."
        title: "Price"
      inventory_quantity:
        type: "integer"
        description: "The inventory quantity of a product variant."
        title: "Inventory Quantity"
      image_url:
        type: "string"
        description: "The image URL for a product variant."
        title: "Image URL"
      backorders:
        type: "string"
        description: "The backorders of a product variant."
        title: "Backorders"
      visibility:
        type: "string"
        description: "The visibility of a product variant."
        title: "Visibility"
      created_at:
        type: "string"
        format: "date-time"
        example: "2015-07-15T19:28:00+00:00"
        description: "The date and time the product was created in ISO 8601 format."
        title: "Creation Time"
        readOnly: true
      updated_at:
        type: "string"
        format: "date-time"
        example: "2015-07-15T19:28:00+00:00"
        description: "The date and time the product was last updated in ISO 8601 format."
        title: "Update Time"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "Information about a specific product variant."
    example:
      inventory_quantity: 6
      visibility: "visibility"
      updated_at: "2015-07-15T19:28:00+00:00"
      backorders: "backorders"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      price: 0.80082819046101150206595775671303272247314453125
      image_url: "image_url"
      created_at: "2015-07-15T19:28:00+00:00"
      id: "id"
      title: "Cat Hat"
      sku: "sku"
      url: "url"
  Ecommerce Product Image:
    type: "object"
    properties:
      id:
        type: "string"
        description: "A unique identifier for the product image."
        title: "Image Foreign ID"
      url:
        type: "string"
        description: "The URL for a product image."
        title: "URL"
      variant_ids:
        type: "array"
        description: "The list of product variants using the image."
        title: "Product Variants"
        items:
          type: "string"
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "Information about a specific product image."
    example:
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      variant_ids:
      - "variant_ids"
      - "variant_ids"
      id: "id"
      url: "url"
  Ecommerce Product:
    type: "object"
    properties:
      id:
        type: "string"
        description: "A unique identifier for the product."
        title: "Product Foreign ID"
        readOnly: true
      currency_code:
        type: "string"
        description: "The currency code"
        title: "Currency Code"
        readOnly: true
      title:
        type: "string"
        example: "Cat Hat"
        description: "The title of a product."
        title: "Title"
      handle:
        type: "string"
        example: "cat-hat"
        description: "The handle of a product."
        title: "Handle"
      url:
        type: "string"
        description: "The URL for a product."
        title: "Product URL"
      description:
        type: "string"
        example: "This is a cat hat."
        description: "The description of a product."
        title: "Description"
      type:
        type: "string"
        example: "Accessories"
        description: "The type of product."
        title: "Type"
      vendor:
        type: "string"
        description: "The vendor for a product."
        title: "Vendor"
      image_url:
        type: "string"
        description: "The image URL for a product."
        title: "Product Image URL"
      variants:
        type: "array"
        description: "Returns up to 50 of the product's variants. To retrieve all\
          \ variants use [Product Variants](https://mailchimp.com/developer/marketing/api/ecommerce-product-variants/)."
        title: "Product Variants"
        items:
          $ref: "#/definitions/Ecommerce Product Variant"
      images:
        type: "array"
        description: "An array of the product's images."
        title: "Product Images"
        items:
          $ref: "#/definitions/Ecommerce Product Image"
      published_at_foreign:
        type: "string"
        format: "date-time"
        example: "2015-07-15T19:28:00+00:00"
        description: "The date and time the product was published in ISO 8601 format."
        title: "Foreign Publish Time"
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "Information about a specific product."
    example:
      images:
      - _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        variant_ids:
        - "variant_ids"
        - "variant_ids"
        id: "id"
        url: "url"
      - _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        variant_ids:
        - "variant_ids"
        - "variant_ids"
        id: "id"
        url: "url"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      image_url: "image_url"
      description: "This is a cat hat."
      handle: "cat-hat"
      variants:
      - inventory_quantity: 6
        visibility: "visibility"
        updated_at: "2015-07-15T19:28:00+00:00"
        backorders: "backorders"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        price: 0.80082819046101150206595775671303272247314453125
        image_url: "image_url"
        created_at: "2015-07-15T19:28:00+00:00"
        id: "id"
        title: "Cat Hat"
        sku: "sku"
        url: "url"
      - inventory_quantity: 6
        visibility: "visibility"
        updated_at: "2015-07-15T19:28:00+00:00"
        backorders: "backorders"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        price: 0.80082819046101150206595775671303272247314453125
        image_url: "image_url"
        created_at: "2015-07-15T19:28:00+00:00"
        id: "id"
        title: "Cat Hat"
        sku: "sku"
        url: "url"
      title: "Cat Hat"
      type: "Accessories"
      currency_code: "currency_code"
      url: "url"
      vendor: "vendor"
      published_at_foreign: "2015-07-15T19:28:00+00:00"
      id: "id"
  Products:
    type: "object"
    properties:
      store_id:
        type: "string"
        description: "The store id."
        title: "Store ID"
      products:
        type: "array"
        description: "An array of objects, each representing a store product."
        title: "Products"
        items:
          $ref: "#/definitions/Ecommerce Product"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A collection of a store's products."
    example:
      store_id: "store_id"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      total_items: 1
      products:
      - images:
        - _links:
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          variant_ids:
          - "variant_ids"
          - "variant_ids"
          id: "id"
          url: "url"
        - _links:
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          variant_ids:
          - "variant_ids"
          - "variant_ids"
          id: "id"
          url: "url"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        image_url: "image_url"
        description: "This is a cat hat."
        handle: "cat-hat"
        variants:
        - inventory_quantity: 6
          visibility: "visibility"
          updated_at: "2015-07-15T19:28:00+00:00"
          backorders: "backorders"
          _links:
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          price: 0.80082819046101150206595775671303272247314453125
          image_url: "image_url"
          created_at: "2015-07-15T19:28:00+00:00"
          id: "id"
          title: "Cat Hat"
          sku: "sku"
          url: "url"
        - inventory_quantity: 6
          visibility: "visibility"
          updated_at: "2015-07-15T19:28:00+00:00"
          backorders: "backorders"
          _links:
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          price: 0.80082819046101150206595775671303272247314453125
          image_url: "image_url"
          created_at: "2015-07-15T19:28:00+00:00"
          id: "id"
          title: "Cat Hat"
          sku: "sku"
          url: "url"
        title: "Cat Hat"
        type: "Accessories"
        currency_code: "currency_code"
        url: "url"
        vendor: "vendor"
        published_at_foreign: "2015-07-15T19:28:00+00:00"
        id: "id"
      - images:
        - _links:
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          variant_ids:
          - "variant_ids"
          - "variant_ids"
          id: "id"
          url: "url"
        - _links:
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          variant_ids:
          - "variant_ids"
          - "variant_ids"
          id: "id"
          url: "url"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        image_url: "image_url"
        description: "This is a cat hat."
        handle: "cat-hat"
        variants:
        - inventory_quantity: 6
          visibility: "visibility"
          updated_at: "2015-07-15T19:28:00+00:00"
          backorders: "backorders"
          _links:
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          price: 0.80082819046101150206595775671303272247314453125
          image_url: "image_url"
          created_at: "2015-07-15T19:28:00+00:00"
          id: "id"
          title: "Cat Hat"
          sku: "sku"
          url: "url"
        - inventory_quantity: 6
          visibility: "visibility"
          updated_at: "2015-07-15T19:28:00+00:00"
          backorders: "backorders"
          _links:
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          price: 0.80082819046101150206595775671303272247314453125
          image_url: "image_url"
          created_at: "2015-07-15T19:28:00+00:00"
          id: "id"
          title: "Cat Hat"
          sku: "sku"
          url: "url"
        title: "Cat Hat"
        type: "Accessories"
        currency_code: "currency_code"
        url: "url"
        vendor: "vendor"
        published_at_foreign: "2015-07-15T19:28:00+00:00"
        id: "id"
  Ecommerce Product Variant_1:
    type: "object"
    required:
    - "id"
    - "title"
    properties:
      id:
        type: "string"
        description: "A unique identifier for the product variant."
        title: "Product Variant Foreign ID"
      title:
        type: "string"
        example: "Cat Hat"
        description: "The title of a product variant."
        title: "Title"
      url:
        type: "string"
        description: "The URL for a product variant."
        title: "URL"
      sku:
        type: "string"
        description: "The stock keeping unit (SKU) of a product variant."
        title: "SKU"
      price:
        type: "number"
        description: "The price of a product variant."
        title: "Price"
      inventory_quantity:
        type: "integer"
        description: "The inventory quantity of a product variant."
        title: "Inventory Quantity"
      image_url:
        type: "string"
        description: "The image URL for a product variant."
        title: "Image URL"
      backorders:
        type: "string"
        description: "The backorders of a product variant."
        title: "Backorders"
      visibility:
        type: "string"
        description: "The visibility of a product variant."
        title: "Visibility"
    description: "Information about a specific product variant."
  Ecommerce Product Image_1:
    type: "object"
    required:
    - "id"
    - "url"
    properties:
      id:
        type: "string"
        description: "A unique identifier for the product image."
        title: "Image Foreign ID"
      url:
        type: "string"
        description: "The URL for a product image."
        title: "URL"
      variant_ids:
        type: "array"
        description: "The list of product variants using the image."
        title: "Product Variants"
        items:
          type: "string"
    description: "Information about a specific product image."
  Ecommerce Product_1:
    type: "object"
    required:
    - "id"
    - "title"
    - "variants"
    properties:
      id:
        type: "string"
        description: "A unique identifier for the product."
        title: "Product Foreign ID"
      title:
        type: "string"
        example: "Cat Hat"
        description: "The title of a product."
        title: "Title"
      handle:
        type: "string"
        example: "cat-hat"
        description: "The handle of a product."
        title: "Handle"
      url:
        type: "string"
        description: "The URL for a product."
        title: "Product URL"
      description:
        type: "string"
        example: "This is a cat hat."
        description: "The description of a product."
        title: "Description"
      type:
        type: "string"
        example: "Accessories"
        description: "The type of product."
        title: "Type"
      vendor:
        type: "string"
        description: "The vendor for a product."
        title: "Vendor"
      image_url:
        type: "string"
        description: "The image URL for a product."
        title: "Product Image URL"
      variants:
        type: "array"
        description: "An array of the product's variants. At least one variant is\
          \ required for each product. A variant can use the same `id` and `title`\
          \ as the parent product."
        title: "Product Variants"
        items:
          $ref: "#/definitions/Ecommerce Product Variant_1"
      images:
        type: "array"
        description: "An array of the product's images."
        title: "Product Images"
        items:
          $ref: "#/definitions/Ecommerce Product Image_1"
      published_at_foreign:
        type: "string"
        format: "date-time"
        example: "2015-07-15T19:28:00+00:00"
        description: "The date and time the product was published."
        title: "Foreign Publish Time"
    title: "E-commerce Product"
    description: "Information about a specific product."
  Ecommerce Product Variant_2:
    type: "object"
    properties:
      title:
        type: "string"
        example: "Cat Hat"
        description: "The title of a product variant."
        title: "Title"
      url:
        type: "string"
        description: "The URL for a product variant."
        title: "URL"
      sku:
        type: "string"
        description: "The stock keeping unit (SKU) of a product variant."
        title: "SKU"
      price:
        type: "number"
        description: "The price of a product variant."
        title: "Price"
      inventory_quantity:
        type: "integer"
        description: "The inventory quantity of a product variant."
        title: "Inventory Quantity"
      image_url:
        type: "string"
        description: "The image URL for a product variant."
        title: "Image URL"
      backorders:
        type: "string"
        description: "The backorders of a product variant."
        title: "Backorders"
      visibility:
        type: "string"
        description: "The visibility of a product variant."
        title: "Visibility"
    description: "Information about a specific product variant."
  Ecommerce Product Image_2:
    type: "object"
    properties:
      id:
        type: "string"
        description: "A unique identifier for the product image."
        title: "Image Foreign ID"
      url:
        type: "string"
        description: "The URL for a product image."
        title: "URL"
      variant_ids:
        type: "array"
        description: "The list of product variants using the image."
        title: "Product Variants"
        items:
          type: "string"
    description: "Information about a specific product image."
  Ecommerce Product_2:
    type: "object"
    properties:
      title:
        type: "string"
        example: "Cat Hat"
        description: "The title of a product."
        title: "Title"
      handle:
        type: "string"
        example: "cat-hat"
        description: "The handle of a product."
        title: "Handle"
      url:
        type: "string"
        description: "The URL for a product."
        title: "Product URL"
      description:
        type: "string"
        example: "This is a cat hat."
        description: "The description of a product."
        title: "Description"
      type:
        type: "string"
        example: "Accessories"
        description: "The type of product."
        title: "Type"
      vendor:
        type: "string"
        description: "The vendor for a product."
        title: "Vendor"
      image_url:
        type: "string"
        description: "The image URL for a product."
        title: "Product Image URL"
      variants:
        type: "array"
        description: "An array of the product's variants. At least one variant is\
          \ required for each product. A variant can use the same `id` and `title`\
          \ as the parent product."
        title: "Product Variants"
        items:
          $ref: "#/definitions/Ecommerce Product Variant_2"
      images:
        type: "array"
        description: "An array of the product's images."
        title: "Product Images"
        items:
          $ref: "#/definitions/Ecommerce Product Image_2"
      published_at_foreign:
        type: "string"
        format: "date-time"
        example: "2015-07-15T19:28:00+00:00"
        description: "The date and time the product was published in ISO 8601 format."
        title: "Foreign Publish Time"
    title: "E-commerce Product"
    description: "Information about a specific product."
  Ecommerce Product Variants:
    type: "object"
    properties:
      store_id:
        type: "string"
        description: "The store id."
        title: "Store ID"
      product_id:
        type: "string"
        description: "The product id."
        title: "Product ID"
      variants:
        type: "array"
        description: "An array of objects, each representing a product's variants."
        title: "Ecommerce Product Variants"
        items:
          $ref: "#/definitions/Ecommerce Product Variant"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A collection of a product's variants."
    example:
      store_id: "store_id"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      product_id: "product_id"
      variants:
      - inventory_quantity: 6
        visibility: "visibility"
        updated_at: "2015-07-15T19:28:00+00:00"
        backorders: "backorders"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        price: 0.80082819046101150206595775671303272247314453125
        image_url: "image_url"
        created_at: "2015-07-15T19:28:00+00:00"
        id: "id"
        title: "Cat Hat"
        sku: "sku"
        url: "url"
      - inventory_quantity: 6
        visibility: "visibility"
        updated_at: "2015-07-15T19:28:00+00:00"
        backorders: "backorders"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        price: 0.80082819046101150206595775671303272247314453125
        image_url: "image_url"
        created_at: "2015-07-15T19:28:00+00:00"
        id: "id"
        title: "Cat Hat"
        sku: "sku"
        url: "url"
      total_items: 0
  Ecommerce Product Variant_3:
    type: "object"
    required:
    - "id"
    - "title"
    properties:
      id:
        type: "string"
        description: "A unique identifier for the product variant."
        title: "Product Variant Foreign ID"
      title:
        type: "string"
        example: "Cat Hat"
        description: "The title of a product variant."
        title: "Title"
      url:
        type: "string"
        description: "The URL for a product variant."
        title: "URL"
      sku:
        type: "string"
        description: "The stock keeping unit (SKU) of a product variant."
        title: "SKU"
      price:
        type: "number"
        description: "The price of a product variant."
        title: "Price"
      inventory_quantity:
        type: "integer"
        description: "The inventory quantity of a product variant."
        title: "Inventory Quantity"
      image_url:
        type: "string"
        description: "The image URL for a product variant."
        title: "Image URL"
      backorders:
        type: "string"
        description: "The backorders of a product variant."
        title: "Backorders"
      visibility:
        type: "string"
        description: "The visibility of a product variant."
        title: "Visibility"
    title: "E-commerce Product Variant"
    description: "Information about a specific product variant."
  Ecommerce Product Variant_4:
    type: "object"
    required:
    - "id"
    - "title"
    properties:
      id:
        type: "string"
        description: "A unique identifier for the product variant."
        title: "Product Variant Foreign ID"
      title:
        type: "string"
        example: "Cat Hat"
        description: "The title of a product variant."
        title: "Title"
      url:
        type: "string"
        description: "The URL for a product variant."
        title: "URL"
      sku:
        type: "string"
        description: "The stock keeping unit (SKU) of a product variant."
        title: "SKU"
      price:
        type: "number"
        description: "The price of a product variant."
        title: "Price"
      inventory_quantity:
        type: "integer"
        description: "The inventory quantity of a product variant."
        title: "Inventory Quantity"
      image_url:
        type: "string"
        description: "The image URL for a product variant."
        title: "Image URL"
      backorders:
        type: "string"
        description: "The backorders of a product variant."
        title: "Backorders"
      visibility:
        type: "string"
        description: "The visibility of a product variant."
        title: "Visibility"
    title: "E-commerce Product Variant"
    description: "Information about a specific product variant."
  Ecommerce Product Variant_5:
    type: "object"
    properties:
      title:
        type: "string"
        example: "Cat Hat"
        description: "The title of a product variant."
        title: "Title"
      url:
        type: "string"
        description: "The URL for a product variant."
        title: "URL"
      sku:
        type: "string"
        description: "The stock keeping unit (SKU) of a product variant."
        title: "SKU"
      price:
        type: "number"
        description: "The price of a product variant."
        title: "Price"
      inventory_quantity:
        type: "integer"
        description: "The inventory quantity of a product variant."
        title: "Inventory Quantity"
      image_url:
        type: "string"
        description: "The image URL for a product variant."
        title: "Image URL"
      backorders:
        type: "string"
        description: "The backorders of a product variant."
        title: "Backorders"
      visibility:
        type: "string"
        description: "The visibility of a product variant."
        title: "Visibility"
    title: "E-commerce Product Variant"
    description: "Information about a specific product variant."
  Ecommerce Product Images:
    type: "object"
    properties:
      store_id:
        type: "string"
        description: "The store id."
        title: "Store ID"
      product_id:
        type: "string"
        description: "The product id."
        title: "Product ID"
      images:
        type: "array"
        description: "An array of objects, each representing a product image resource."
        title: "Ecommerce Product Images"
        items:
          $ref: "#/definitions/Ecommerce Product Image"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A collection of a product's images."
    example:
      store_id: "store_id"
      images:
      - _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        variant_ids:
        - "variant_ids"
        - "variant_ids"
        id: "id"
        url: "url"
      - _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        variant_ids:
        - "variant_ids"
        - "variant_ids"
        id: "id"
        url: "url"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      product_id: "product_id"
      total_items: 0
  Ecommerce Product Image_3:
    type: "object"
    required:
    - "id"
    - "url"
    properties:
      id:
        type: "string"
        description: "A unique identifier for the product image."
        title: "Image Foreign ID"
      url:
        type: "string"
        description: "The URL for a product image."
        title: "URL"
      variant_ids:
        type: "array"
        description: "The list of product variants using the image."
        title: "Product Variants"
        items:
          type: "string"
    title: "E-commerce Product Image"
    description: "Information about a specific product image."
  Ecommerce Product Image_4:
    type: "object"
    properties:
      id:
        type: "string"
        description: "A unique identifier for the product image."
        title: "Image Foreign ID"
      url:
        type: "string"
        description: "The URL for a product image."
        title: "URL"
      variant_ids:
        type: "array"
        description: "The list of product variants using the image."
        title: "Product Variants"
        items:
          type: "string"
    title: "E-commerce Product Image"
    description: "Information about a specific product image."
  Campaigns_results:
    type: "object"
    properties:
      campaign:
        $ref: "#/definitions/Campaign"
      snippet:
        type: "string"
        title: "Matching snippet"
    example:
      snippet: "snippet"
      campaign:
        archive_url: "archive_url"
        resendable: true
        settings:
          auto_footer: true
          subject_line: "subject_line"
          preview_text: "preview_text"
          use_conversation: true
          authenticate: true
          to_name: "to_name"
          timewarp: true
          title: "title"
          from_name: "from_name"
          auto_tweet: true
          auto_fb_post:
          - "auto_fb_post"
          - "auto_fb_post"
          fb_comments: true
          drag_and_drop: true
          reply_to: "reply_to"
          inline_css: true
          template_id: 5
          folder_id: "folder_id"
        variate_settings:
          send_times:
          - "2000-01-23T04:56:07.000+00:00"
          - "2000-01-23T04:56:07.000+00:00"
          combinations:
          - subject_line: 7
            send_time: 9
            reply_to: 2
            recipients: 7
            id: "id"
            from_name: 3
            content_description: 4
          - subject_line: 7
            send_time: 9
            reply_to: 2
            recipients: 7
            id: "id"
            from_name: 3
            content_description: 4
          wait_time: 5
          subject_lines:
          - "subject_lines"
          - "subject_lines"
          contents:
          - "contents"
          - "contents"
          test_size: 2
          winning_combination_id: "winning_combination_id"
          reply_to_addresses:
          - "reply_to_addresses"
          - "reply_to_addresses"
          winner_criteria: "opens"
          winning_campaign_id: "winning_campaign_id"
          from_names:
          - "from_names"
          - "from_names"
        ab_split_opts:
          pick_winner: "opens"
          wait_time: 1
          wait_units: "hours"
          subject_b: "subject_b"
          subject_a: "subject_a"
          split_test: "subject"
          from_name_a: "from_name_a"
          from_name_b: "from_name_b"
          send_time_winner: "send_time_winner"
          reply_email_b: "reply_email_b"
          reply_email_a: "reply_email_a"
          send_time_a: "2000-01-23T04:56:07.000+00:00"
          send_time_b: "2000-01-23T04:56:07.000+00:00"
          split_size: 34
        create_time: "2000-01-23T04:56:07.000+00:00"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        web_id: 0
        type: "regular"
        tracking:
          salesforce:
            notes: true
            campaign: true
          goal_tracking: true
          capsule:
            notes: true
          clicktale: "clicktale"
          text_clicks: true
          ecomm360: true
          opens: true
          google_analytics: "google_analytics"
          html_clicks: true
        needs_block_refresh: true
        send_time: "2000-01-23T04:56:07.000+00:00"
        rss_opts:
          schedule:
            hour: 2
            weekly_send_day: "sunday"
            daily_send:
              sunday: true
              saturday: true
              tuesday: true
              wednesday: true
              thursday: true
              friday: true
              monday: true
            monthly_send_date: 3.176401670446889369259224622510373592376708984375
          last_sent: "2000-01-23T04:56:07.000+00:00"
          constrain_rss_img: true
          feed_url: "http://example.com/aeiou"
          frequency: "daily"
        parent_campaign_id: "parent_campaign_id"
        content_type: "template"
        social_card:
          image_url: "image_url"
          description: "description"
          title: "title"
        recipients:
          segment_opts:
            prebuilt_segment_id: "subscribers-female"
            match: "any"
            saved_segment_id: 5
            conditions:
            - ""
            - ""
          list_id: "list_id"
          segment_text: "segment_text"
          recipient_count: 1
          list_name: "list_name"
          list_is_active: true
        emails_sent: 6
        id: "id"
        delivery_status:
          emails_sent: 6
          can_cancel: true
          emails_canceled: 3
          enabled: true
          status: "delivering"
        long_archive_url: "long_archive_url"
        status: "save"
        report_summary:
          subscriber_clicks: 9
          click_rate: 9.3693102714106686335071572102606296539306640625
          ecommerce:
            total_spent: 8.7620420127490010742121739895083010196685791015625
            total_revenue: 9.0183481860707832566959041287191212177276611328125
            total_orders: 6
          opens: 7
          clicks: 5
          unique_opens: 1
          open_rate: 4.9652184929849543237878606305457651615142822265625
  Campaigns:
    type: "object"
    properties:
      results:
        type: "array"
        description: "An array of matching campaigns and snippets."
        title: "Results"
        items:
          $ref: "#/definitions/Campaigns_results"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "Campaigns and Snippets found for given search term."
    example:
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      results:
      - snippet: "snippet"
        campaign:
          archive_url: "archive_url"
          resendable: true
          settings:
            auto_footer: true
            subject_line: "subject_line"
            preview_text: "preview_text"
            use_conversation: true
            authenticate: true
            to_name: "to_name"
            timewarp: true
            title: "title"
            from_name: "from_name"
            auto_tweet: true
            auto_fb_post:
            - "auto_fb_post"
            - "auto_fb_post"
            fb_comments: true
            drag_and_drop: true
            reply_to: "reply_to"
            inline_css: true
            template_id: 5
            folder_id: "folder_id"
          variate_settings:
            send_times:
            - "2000-01-23T04:56:07.000+00:00"
            - "2000-01-23T04:56:07.000+00:00"
            combinations:
            - subject_line: 7
              send_time: 9
              reply_to: 2
              recipients: 7
              id: "id"
              from_name: 3
              content_description: 4
            - subject_line: 7
              send_time: 9
              reply_to: 2
              recipients: 7
              id: "id"
              from_name: 3
              content_description: 4
            wait_time: 5
            subject_lines:
            - "subject_lines"
            - "subject_lines"
            contents:
            - "contents"
            - "contents"
            test_size: 2
            winning_combination_id: "winning_combination_id"
            reply_to_addresses:
            - "reply_to_addresses"
            - "reply_to_addresses"
            winner_criteria: "opens"
            winning_campaign_id: "winning_campaign_id"
            from_names:
            - "from_names"
            - "from_names"
          ab_split_opts:
            pick_winner: "opens"
            wait_time: 1
            wait_units: "hours"
            subject_b: "subject_b"
            subject_a: "subject_a"
            split_test: "subject"
            from_name_a: "from_name_a"
            from_name_b: "from_name_b"
            send_time_winner: "send_time_winner"
            reply_email_b: "reply_email_b"
            reply_email_a: "reply_email_a"
            send_time_a: "2000-01-23T04:56:07.000+00:00"
            send_time_b: "2000-01-23T04:56:07.000+00:00"
            split_size: 34
          create_time: "2000-01-23T04:56:07.000+00:00"
          _links:
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          web_id: 0
          type: "regular"
          tracking:
            salesforce:
              notes: true
              campaign: true
            goal_tracking: true
            capsule:
              notes: true
            clicktale: "clicktale"
            text_clicks: true
            ecomm360: true
            opens: true
            google_analytics: "google_analytics"
            html_clicks: true
          needs_block_refresh: true
          send_time: "2000-01-23T04:56:07.000+00:00"
          rss_opts:
            schedule:
              hour: 2
              weekly_send_day: "sunday"
              daily_send:
                sunday: true
                saturday: true
                tuesday: true
                wednesday: true
                thursday: true
                friday: true
                monday: true
              monthly_send_date: 3.176401670446889369259224622510373592376708984375
            last_sent: "2000-01-23T04:56:07.000+00:00"
            constrain_rss_img: true
            feed_url: "http://example.com/aeiou"
            frequency: "daily"
          parent_campaign_id: "parent_campaign_id"
          content_type: "template"
          social_card:
            image_url: "image_url"
            description: "description"
            title: "title"
          recipients:
            segment_opts:
              prebuilt_segment_id: "subscribers-female"
              match: "any"
              saved_segment_id: 5
              conditions:
              - ""
              - ""
            list_id: "list_id"
            segment_text: "segment_text"
            recipient_count: 1
            list_name: "list_name"
            list_is_active: true
          emails_sent: 6
          id: "id"
          delivery_status:
            emails_sent: 6
            can_cancel: true
            emails_canceled: 3
            enabled: true
            status: "delivering"
          long_archive_url: "long_archive_url"
          status: "save"
          report_summary:
            subscriber_clicks: 9
            click_rate: 9.3693102714106686335071572102606296539306640625
            ecommerce:
              total_spent: 8.7620420127490010742121739895083010196685791015625
              total_revenue: 9.0183481860707832566959041287191212177276611328125
              total_orders: 6
            opens: 7
            clicks: 5
            unique_opens: 1
            open_rate: 4.9652184929849543237878606305457651615142822265625
      - snippet: "snippet"
        campaign:
          archive_url: "archive_url"
          resendable: true
          settings:
            auto_footer: true
            subject_line: "subject_line"
            preview_text: "preview_text"
            use_conversation: true
            authenticate: true
            to_name: "to_name"
            timewarp: true
            title: "title"
            from_name: "from_name"
            auto_tweet: true
            auto_fb_post:
            - "auto_fb_post"
            - "auto_fb_post"
            fb_comments: true
            drag_and_drop: true
            reply_to: "reply_to"
            inline_css: true
            template_id: 5
            folder_id: "folder_id"
          variate_settings:
            send_times:
            - "2000-01-23T04:56:07.000+00:00"
            - "2000-01-23T04:56:07.000+00:00"
            combinations:
            - subject_line: 7
              send_time: 9
              reply_to: 2
              recipients: 7
              id: "id"
              from_name: 3
              content_description: 4
            - subject_line: 7
              send_time: 9
              reply_to: 2
              recipients: 7
              id: "id"
              from_name: 3
              content_description: 4
            wait_time: 5
            subject_lines:
            - "subject_lines"
            - "subject_lines"
            contents:
            - "contents"
            - "contents"
            test_size: 2
            winning_combination_id: "winning_combination_id"
            reply_to_addresses:
            - "reply_to_addresses"
            - "reply_to_addresses"
            winner_criteria: "opens"
            winning_campaign_id: "winning_campaign_id"
            from_names:
            - "from_names"
            - "from_names"
          ab_split_opts:
            pick_winner: "opens"
            wait_time: 1
            wait_units: "hours"
            subject_b: "subject_b"
            subject_a: "subject_a"
            split_test: "subject"
            from_name_a: "from_name_a"
            from_name_b: "from_name_b"
            send_time_winner: "send_time_winner"
            reply_email_b: "reply_email_b"
            reply_email_a: "reply_email_a"
            send_time_a: "2000-01-23T04:56:07.000+00:00"
            send_time_b: "2000-01-23T04:56:07.000+00:00"
            split_size: 34
          create_time: "2000-01-23T04:56:07.000+00:00"
          _links:
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          web_id: 0
          type: "regular"
          tracking:
            salesforce:
              notes: true
              campaign: true
            goal_tracking: true
            capsule:
              notes: true
            clicktale: "clicktale"
            text_clicks: true
            ecomm360: true
            opens: true
            google_analytics: "google_analytics"
            html_clicks: true
          needs_block_refresh: true
          send_time: "2000-01-23T04:56:07.000+00:00"
          rss_opts:
            schedule:
              hour: 2
              weekly_send_day: "sunday"
              daily_send:
                sunday: true
                saturday: true
                tuesday: true
                wednesday: true
                thursday: true
                friday: true
                monday: true
              monthly_send_date: 3.176401670446889369259224622510373592376708984375
            last_sent: "2000-01-23T04:56:07.000+00:00"
            constrain_rss_img: true
            feed_url: "http://example.com/aeiou"
            frequency: "daily"
          parent_campaign_id: "parent_campaign_id"
          content_type: "template"
          social_card:
            image_url: "image_url"
            description: "description"
            title: "title"
          recipients:
            segment_opts:
              prebuilt_segment_id: "subscribers-female"
              match: "any"
              saved_segment_id: 5
              conditions:
              - ""
              - ""
            list_id: "list_id"
            segment_text: "segment_text"
            recipient_count: 1
            list_name: "list_name"
            list_is_active: true
          emails_sent: 6
          id: "id"
          delivery_status:
            emails_sent: 6
            can_cancel: true
            emails_canceled: 3
            enabled: true
            status: "delivering"
          long_archive_url: "long_archive_url"
          status: "save"
          report_summary:
            subscriber_clicks: 9
            click_rate: 9.3693102714106686335071572102606296539306640625
            ecommerce:
              total_spent: 8.7620420127490010742121739895083010196685791015625
              total_revenue: 9.0183481860707832566959041287191212177276611328125
              total_orders: 6
            opens: 7
            clicks: 5
            unique_opens: 1
            open_rate: 4.9652184929849543237878606305457651615142822265625
      total_items: 0
  Exact Matches:
    type: "object"
    properties:
      members:
        type: "array"
        description: "An array of objects, each representing a specific list member."
        title: "Members"
        items:
          $ref: "#/definitions/List Members_2"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
    description: "Exact matches of the provided search query."
    example:
      members:
      - list_id: "list_id"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        members:
        - null
        - null
        total_items: 0
      - list_id: "list_id"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        members:
        - null
        - null
        total_items: 0
      total_items: 0
  Partial Matches:
    type: "object"
    properties:
      members:
        type: "array"
        description: "An array of objects, each representing a specific list member."
        title: "Members"
        items:
          $ref: "#/definitions/List Members_2"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
    description: "Partial matches of the provided search query."
    example:
      members:
      - list_id: "list_id"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        members:
        - null
        - null
        total_items: 0
      - list_id: "list_id"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        members:
        - null
        - null
        total_items: 0
      total_items: 6
  Members:
    type: "object"
    properties:
      exact_matches:
        $ref: "#/definitions/Exact Matches"
      full_search:
        $ref: "#/definitions/Partial Matches"
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "Members found for given search term"
    example:
      full_search:
        members:
        - list_id: "list_id"
          _links:
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          members:
          - null
          - null
          total_items: 0
        - list_id: "list_id"
          _links:
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          members:
          - null
          - null
          total_items: 0
        total_items: 6
      exact_matches:
        members:
        - list_id: "list_id"
          _links:
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          members:
          - null
          - null
          total_items: 0
        - list_id: "list_id"
          _links:
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          - schema: "schema"
            targetSchema: "targetSchema"
            method: "GET"
            rel: "rel"
            href: "href"
          members:
          - null
          - null
          total_items: 0
        total_items: 0
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
  API health status:
    type: "object"
    properties:
      health_status:
        type: "string"
        example: "\"Everything's Chimpy!\""
        description: "This will return a constant string value if the request is successful.\
          \ Ex. \"Everything's Chimpy!\""
        title: "API health status"
        readOnly: true
    description: "API health status."
    example:
      health_status: "\"Everything's Chimpy!\""
  inline_response_200_8:
    type: "object"
    properties:
      facebook_ads:
        type: "array"
        items:
          type: "object"
          allOf:
          - type: "object"
            properties:
              id:
                type: "string"
                description: "Unique ID of an Outreach."
                title: "ID"
              web_id:
                type: "integer"
                description: "The ID used in the Mailchimp web application. For example,\
                  \ for a `regular` outreach, you can view this campaign in your Mailchimp\
                  \ account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`."
                title: "Web ID"
              name:
                type: "string"
                description: "Title or name of an Outreach."
                title: "Name"
              type:
                type: "string"
                description: "The type of outreach this object is."
                title: "Outreach Type"
                enum:
                - "regular"
                - "plaintext"
                - "rss"
                - "reconfirm"
                - "variate"
                - "absplit"
                - "automation"
                - "facebook"
                - "google"
                - "autoresponder"
                - "transactional"
                - "page"
                - "website"
                - "social_post"
                - "survey"
                - "customer_journey"
              status:
                type: "string"
                description: "The status of this outreach."
                title: "Outreach Status"
                enum:
                - "save"
                - "paused"
                - "schedule"
                - "scheduled"
                - "sending"
                - "sent"
                - "canceled"
                - "canceling"
                - "active"
                - "disconnected"
                - "somepaused"
                - "draft"
                - "completed"
                - "partialRejected"
                - "pending"
                - "rejected"
                - "published"
                - "unpublished"
              show_report:
                type: "boolean"
                description: "Outreach report availability. Note: This property is\
                  \ hotly debated in what it _should_ convey. See [MCP-1371](https://jira.mailchimp.com/browse/MCP-1371)\
                  \ for more context."
                title: "Show Report"
              create_time:
                type: "string"
                format: "date-time"
                description: "The date and time the outreach was created in ISO 8601\
                  \ format."
                title: "Create Time"
              start_time:
                type: "string"
                format: "date-time"
                description: "The date and time the outreach was started in ISO 8601\
                  \ format."
                title: "Start Time"
              updated_at:
                type: "string"
                format: "date-time"
                description: "The date and time the outreach was last updated in ISO\
                  \ 8601 format."
                title: "Updated At"
              canceled_at:
                type: "string"
                format: "date-time"
                description: "The date and time the outreach was canceled in ISO 8601\
                  \ format."
                title: "Canceled At"
              published_time:
                type: "string"
                format: "date-time"
                description: "The date and time the outreach was (or will be) published\
                  \ in ISO 8601 format."
                title: "Publish Time"
              has_segment:
                type: "boolean"
                description: "If this outreach targets a segment of your audience."
                title: "Has Segment"
              report_summary:
                type: "object"
                description: "High level reporting stats for an outreach."
                title: "Report Summary"
                properties:
                  opens:
                    type: "integer"
                  unique_opens:
                    type: "integer"
                  open_rate:
                    type: "number"
                  clicks:
                    type: "integer"
                  subscriber_clicks:
                    type: "integer"
                  click_rate:
                    type: "number"
                  visits:
                    type: "integer"
                  unique_visits:
                    type: "integer"
                  conversion_rate:
                    type: "number"
                  subscribes:
                    type: "integer"
                  ecommerce:
                    type: "object"
                    properties:
                      total_revenue:
                        type: "number"
                      currency_code:
                        type: "string"
                      average_order_revenue:
                        type: "number"
                  impressions:
                    type: "number"
                  reach:
                    type: "integer"
                  engagements:
                    type: "integer"
                  total_sent:
                    type: "integer"
              recipients:
                type: "object"
                description: "High level audience information for who the outreach\
                  \ targets."
                title: "Recipients"
                properties:
                  list_id:
                    type: "string"
                    description: "The unique list id."
                    title: "List ID"
                  list_is_active:
                    type: "boolean"
                    description: "The status of the list used, namely if it's deleted\
                      \ or disabled."
                    title: "List Status"
                    readOnly: true
                  list_name:
                    type: "string"
                    description: "The name of the list."
                    title: "List Name"
                    readOnly: true
                  segment_text:
                    type: "string"
                    description: "A description of the [segment](https://mailchimp.com/help/save-and-manage-segments/)\
                      \ used for the campaign. Formatted as a string marked up with\
                      \ HTML."
                    title: "Segment Text"
                    readOnly: true
                  recipient_count:
                    type: "integer"
                    description: "Count of the recipients on the associated list.\
                      \ Formatted as an integer."
                    title: "Recipient Count"
                    readOnly: true
                  segment_opts:
                    type: "object"
                    description: "An object representing all segmentation options.\
                      \ This object should contain a `saved_segment_id` to use an\
                      \ existing segment, or you can create a new segment by including\
                      \ both `match` and `conditions` options."
                    title: "Segment Options"
                    properties:
                      saved_segment_id:
                        type: "integer"
                        description: "The id for an existing saved segment."
                        title: "Saved Segment ID"
                      prebuilt_segment_id:
                        type: "string"
                        example: "subscribers-female"
                        description: "The prebuilt segment id, if a prebuilt segment\
                          \ has been designated for this campaign."
                        title: "Prebuilt Segment Id"
                      match:
                        type: "string"
                        description: "Segment match type."
                        title: "Match Type"
                        enum:
                        - "any"
                        - "all"
                      conditions:
                        type: "array"
                        description: "Segment match conditions. There are multiple\
                          \ possible types, see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas)."
                        title: "Segment Type"
                        items:
                          x-oneOf:
                          - type: "object"
                            title: "Aim Segment"
                            description: "Segment by interaction with a specific campaign."
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "Aim"
                                enum:
                                - "Aim"
                              field:
                                type: "string"
                                enum:
                                - "aim"
                                title: "Segment Field"
                                description: "Segment by interaction with a specific\
                                  \ campaign."
                                example: "aim"
                              op:
                                type: "string"
                                enum:
                                - "open"
                                - "click"
                                - "sent"
                                - "noopen"
                                - "noclick"
                                - "nosent"
                                title: "Segment Operator"
                                description: "The status of the member with regard\
                                  \ to their campaign interaction. One of the following:\
                                  \ opened, clicked, was sent, didn't open, didn't\
                                  \ click, or was not sent."
                                example: "open"
                              value:
                                type: "string"
                                title: "Segment Data"
                                description: "Either the web id value for a specific\
                                  \ campaign or 'any' to account for subscribers who\
                                  \ have/have not interacted with any campaigns."
                                example: "any"
                          - type: "object"
                            title: "Automation Segment"
                            description: "Segment by interaction with an Automation\
                              \ workflow."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "Automation"
                                enum:
                                - "Automation"
                              field:
                                type: "string"
                                enum:
                                - "automation"
                                title: "Segment Field"
                                description: "Segment by interaction with an Automation\
                                  \ workflow."
                                example: "automation"
                              op:
                                type: "string"
                                enum:
                                - "started"
                                - "completed"
                                - "not_started"
                                - "not_completed"
                                title: "Segment Operator"
                                description: "The status of the member with regard\
                                  \ to the automation workflow. One of the following:\
                                  \ has started the workflow, has completed the workflow,\
                                  \ has not started the workflow, or has not completed\
                                  \ the workflow."
                                example: "started"
                              value:
                                type: "string"
                                title: "Segment Data"
                                description: "The web id for the automation workflow\
                                  \ to segment against."
                                example: "2135217"
                          - type: "object"
                            title: "Poll Activity Segment"
                            description: "Segment by poll activity."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "CampaignPoll"
                                enum:
                                - "CampaignPoll"
                              field:
                                type: "string"
                                enum:
                                - "poll"
                                title: "Segment Field"
                                description: "Segment by poll activity."
                                example: "poll"
                              op:
                                type: "string"
                                enum:
                                - "member"
                                - "notmember"
                                title: "Segment Operator"
                                description: "Members have/have not interacted with\
                                  \ a specific poll in a Mailchimp email."
                                example: "member"
                              value:
                                type: "number"
                                title: "Segment Operator"
                                description: "The id for the poll."
                                example: 409
                          - type: "object"
                            title: "Conversation Segment"
                            description: "Segment by interaction with a campaign via\
                              \ Conversations."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "Conversation"
                                enum:
                                - "Conversation"
                              field:
                                type: "string"
                                enum:
                                - "conversation"
                                title: "Segment Field"
                                description: "Segment by interaction with a campaign\
                                  \ via Conversations."
                                example: "conversation"
                              op:
                                type: "string"
                                enum:
                                - "member"
                                - "notmember"
                                title: "Segment Operator"
                                description: "The status of a member's interaction\
                                  \ with a conversation. One of the following: has\
                                  \ replied or has not replied."
                                example: "member"
                              value:
                                type: "string"
                                title: "Segment Data"
                                description: "The web id value for a specific campaign\
                                  \ or 'any' to account for subscribers who have/have\
                                  \ not interacted with any campaigns."
                                example: "any"
                          - type: "object"
                            title: "Date Segment"
                            description: "Segment by a specific date field."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "Date"
                                enum:
                                - "Date"
                              field:
                                type: "string"
                                enum:
                                - "timestamp_opt"
                                - "info_changed"
                                - "ecomm_date"
                                title: "Segment Field"
                                description: "The type of date field to segment on:\
                                  \ The opt-in time for a signup, the date the subscriber\
                                  \ was last updated, or the date of their last ecomm\
                                  \ purchase."
                                example: "timestamp_opt"
                              op:
                                type: "string"
                                enum:
                                - "greater"
                                - "less"
                                - "is"
                                - "not"
                                - "blank"
                                - "blank_not"
                                - "within"
                                - "notwithin"
                                title: "Segment Operator"
                                description: "When the event took place:  Before,\
                                  \ after, is a specific date, is not a specific date,\
                                  \ is blank, or is not blank."
                                example: "greater"
                              value:
                                type: "string"
                                title: "Segment Data"
                                description: "What type of data to segment on: a specific\
                                  \ date, a specific campaign, or the last campaign\
                                  \ sent."
                                example: "date"
                              extra:
                                type: "string"
                                title: "Segment Extra Value"
                                description: "When segmenting on 'date' or 'campaign',\
                                  \ the date for the segment formatted as YYYY-MM-DD\
                                  \ or the web id for the campaign."
                                example: "2015-01-30"
                          - type: "object"
                            title: "Email Client Segment"
                            description: "Segment by use of a particular email client."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "EmailClient"
                                enum:
                                - "EmailClient"
                              field:
                                type: "string"
                                enum:
                                - "email_client"
                                title: "Segment Field"
                                description: "Segment by use of a particular email\
                                  \ client."
                                example: "email_client"
                              op:
                                type: "string"
                                enum:
                                - "client_is"
                                - "client_not"
                                title: "Segment Operator"
                                description: "The operation to determine whether we\
                                  \ select clients that match the value, or clients\
                                  \ that do not match the value."
                                example: "client_is"
                              value:
                                type: "string"
                                title: "Segment Data"
                                description: "The name of the email client."
                                example: "Gmail"
                          - type: "object"
                            title: "Language Segment"
                            description: "Segment by language."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "Language"
                                enum:
                                - "Language"
                              field:
                                type: "string"
                                enum:
                                - "language"
                                title: "Segment Field"
                                description: "Segmenting based off of a subscriber's\
                                  \ language."
                                example: "language"
                              op:
                                type: "string"
                                enum:
                                - "is"
                                - "not"
                                title: "Segment Operator"
                                description: "Whether the member's language is or\
                                  \ is not set to a specific language."
                                example: "is"
                              value:
                                type: "string"
                                title: "Segment Data"
                                description: "A two-letter language identifier."
                                example: "en"
                          - type: "object"
                            title: "Member Rating Segment"
                            description: "Segment by member rating."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "MemberRating"
                                enum:
                                - "MemberRating"
                              field:
                                type: "string"
                                enum:
                                - "rating"
                                title: "Segment Field"
                                description: "Segment by member rating."
                                example: "rating"
                              op:
                                type: "string"
                                enum:
                                - "is"
                                - "not"
                                - "greater"
                                - "less"
                                title: "Segment Operator"
                                description: "Members who have have a rating that\
                                  \ is/not exactly a given number or members who have\
                                  \ a rating greater/less than a given number."
                                example: "greater"
                              value:
                                type: "number"
                                title: "Segment Operator"
                                description: "The star rating number to segment against."
                                example: 4
                          - type: "object"
                            title: "Signup Source Segment"
                            description: "Segment by signup source."
                            required:
                            - "field"
                            - "condition_type"
                            - "op"
                            properties:
                              condition_type:
                                type: "string"
                                enum:
                                - "SignupSource"
                                x-value: "SignupSource"
                                title: "Type"
                              field:
                                type: "string"
                                enum:
                                - "source"
                                title: "Segment Field"
                                example: "source"
                              op:
                                type: "string"
                                enum:
                                - "source_is"
                                - "source_not"
                                title: "Segment Operator"
                                description: "Whether the member's signup source was/was\
                                  \ not a particular value."
                                example: "source_is"
                              value:
                                type: "string"
                                title: "Segment Data"
                                description: "The signup source."
                                example: "List Import"
                          - type: "object"
                            title: "Survey Monkey Segment"
                            description: "Segment by interaction with a SurveyMonkey\
                              \ survey."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "SurveyMonkey"
                                enum:
                                - "SurveyMonkey"
                              field:
                                type: "string"
                                enum:
                                - "survey_monkey"
                                title: "Segment Field"
                                description: "Segment by interaction with a SurveyMonkey\
                                  \ survey."
                                example: "survey_monkey"
                              op:
                                type: "string"
                                enum:
                                - "started"
                                - "completed"
                                - "not_started"
                                - "not_completed"
                                title: "Segment Operator"
                                description: "The status of the member with regard\
                                  \ to the survey.One of the following: has started\
                                  \ the survey, has completed the survey, has not\
                                  \ started the survey, or has not completed the survey."
                                example: "started"
                              value:
                                type: "string"
                                title: "Survey ID"
                                description: "The unique ID of the survey monkey survey."
                                example: "32179586"
                          - type: "object"
                            title: "VIP Segment"
                            description: "Segment by VIP status."
                            required:
                            - "field"
                            - "op"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "VIP"
                                enum:
                                - "VIP"
                              field:
                                type: "string"
                                enum:
                                - "gmonkey"
                                title: "Segment Field"
                                description: "Segment by VIP status."
                                example: "gmonkey"
                              op:
                                type: "string"
                                enum:
                                - "member"
                                - "notmember"
                                title: "Segment Operator"
                                description: "Whether the member is or is not marked\
                                  \ as VIP."
                                example: "member"
                          - type: "object"
                            title: "Interests Segment"
                            description: "Segment by an interest group merge field."
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "Interests"
                                enum:
                                - "Interests"
                              field:
                                type: "string"
                                title: "Segment Field"
                                description: "Segmenting based on interest group information.\
                                  \ This should start with 'interests-' followed by\
                                  \ the grouping id. Ex. 'interests-123'."
                                example: "interests-123"
                              op:
                                type: "string"
                                enum:
                                - "interestcontains"
                                - "interestcontainsall"
                                - "interestnotcontains"
                                title: "Segment Operator"
                                description: "Whether the member is a part of one,\
                                  \ all, or none of the groups."
                                example: "interestcontains"
                              value:
                                type: "array"
                                title: "Segment Value"
                                description: "An array containing strings, each representing\
                                  \ a group id."
                                items:
                                  type: "string"
                                  example:
                                  - "44401"
                                  - "44405"
                                  - "44409"
                          - type: "object"
                            title: "Ecommerce Category Segment"
                            description: "Segment by purchases in specific items or\
                              \ categories."
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "EcommCategory"
                                enum:
                                - "EcommCategory"
                              field:
                                type: "string"
                                enum:
                                - "ecomm_cat"
                                - "ecomm_prod"
                                title: "Segment Field"
                                description: "Segment by purchases in specific items\
                                  \ or categories."
                                example: "ecomm_cat"
                              op:
                                type: "string"
                                enum:
                                - "is"
                                - "not"
                                - "contains"
                                - "notcontain"
                                - "starts"
                                - "ends"
                                title: "Segment Operator"
                                description: "A member who has purchased from a category/specific\
                                  \ item that is/is not a specific name, where the\
                                  \ category/item name contains/doesn't contain a\
                                  \ specific phrase or string, or a category/item\
                                  \ name that starts/ends with a string."
                                example: "is"
                              value:
                                type: "string"
                                title: "Segment Data"
                                description: "The ecommerce category/item information."
                                example: "Product"
                          - type: "object"
                            title: "Ecommerce Number Segment"
                            description: "Segment by average spent total, number of\
                              \ orders, total number of products purchased, or average\
                              \ number of products per order."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "EcommNumber"
                                enum:
                                - "EcommNumber"
                              field:
                                type: "string"
                                enum:
                                - "ecomm_spent_avg"
                                - "ecomm_orders"
                                - "ecomm_prod_all"
                                - "ecomm_avg_ord"
                                title: "Segment Field"
                                description: "Segment by average spent total, number\
                                  \ of orders, total number of products purchased,\
                                  \ or average number of products per order."
                                example: "ecomm_orders"
                              op:
                                type: "string"
                                enum:
                                - "is"
                                - "not"
                                - "greater"
                                - "less"
                                title: "Segment Operator"
                                description: "Members who have spent exactly, have\
                                  \ not spent exactly, spent more, or spent less than\
                                  \ the segment value."
                                example: "greater"
                              value:
                                type: "number"
                                title: "Segment Operator"
                                description: "Members who have spent exactly, have\
                                  \ not spent exactly, spent more, or spent less than\
                                  \ this amount."
                                example: 42
                          - type: "object"
                            title: "Ecommerce Purchased Segment"
                            description: "Segment by whether someone has purchased\
                              \ anything."
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "EcommPurchased"
                                enum:
                                - "EcommPurchased"
                              field:
                                type: "string"
                                enum:
                                - "ecomm_purchased"
                                title: "Segment Field"
                                description: "Segment by whether someone has purchased\
                                  \ anything."
                                example: "ecomm_purchased"
                              op:
                                type: "string"
                                enum:
                                - "member"
                                - "notmember"
                                title: "Segment Operator"
                                description: "Members who have have ('member') or\
                                  \ have not ('notmember') purchased."
                                example: "member"
                          - type: "object"
                            title: "Ecommerce Spent Segment"
                            description: "Segment by amount spent on a single order\
                              \ or across all orders."
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "EcommSpent"
                                enum:
                                - "EcommSpent"
                              field:
                                type: "string"
                                enum:
                                - "ecomm_spent_one"
                                - "ecomm_spent_all"
                                title: "Segment Field"
                                description: "Segment by amount spent on a single\
                                  \ order or across all orders."
                                example: "ecomm_spent_one"
                              op:
                                type: "string"
                                enum:
                                - "greater"
                                - "less"
                                title: "Segment Operator"
                                description: "Members who have spent 'more' or 'less'\
                                  \ than then specified value."
                                example: "greater"
                              value:
                                type: "integer"
                                title: "Segment Data"
                                description: "The total amount a member spent."
                                example: 42
                          - type: "object"
                            title: "Ecommerce Purchased Store Segment"
                            description: "Segment by purchases from a specific store."
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "EcommStore"
                                enum:
                                - "EcommStore"
                              field:
                                type: "string"
                                enum:
                                - "ecomm_store"
                                title: "Segment Field"
                                description: "Segment by purchases from a specific\
                                  \ store."
                                example: "ecomm_store"
                              op:
                                type: "string"
                                enum:
                                - "is"
                                - "not"
                                title: "Segment Operator"
                                description: "Members who have or have not purchased\
                                  \ from a specific store."
                                example: "is"
                              value:
                                type: "string"
                                title: "Segment Operator"
                                description: "The store id to segment against."
                                example: "289"
                          - type: "object"
                            title: "Goal Activity Segment"
                            description: "Segment by Goal activity."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "GoalActivity"
                                enum:
                                - "GoalActivity"
                              field:
                                type: "string"
                                enum:
                                - "goal"
                                title: "Segment Field"
                                description: "Segment by Goal activity."
                                example: "goal"
                              op:
                                type: "string"
                                enum:
                                - "is"
                                - "goal_not"
                                - "contains"
                                - "goal_notcontain"
                                - "starts"
                                - "ends"
                                title: "Segment Operator"
                                description: "Whether the website URL is/not exactly,\
                                  \ contains/doesn't contain, starts with/ends with\
                                  \ a string."
                                example: "is"
                              value:
                                type: "string"
                                title: "Segment Value"
                                description: "The URL to check Goal activity against."
                          - type: "object"
                            title: "Goal Timestamp Segment"
                            description: "Segment by most recent interaction with\
                              \ a website."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "GoalTimestamp"
                                enum:
                                - "GoalTimestamp"
                              field:
                                type: "string"
                                enum:
                                - "goal_last_visited"
                                title: "Segment Field"
                                description: "Segment by most recent interaction with\
                                  \ a website."
                                example: "goal_last_visited"
                              op:
                                type: "string"
                                enum:
                                - "greater"
                                - "less"
                                - "is"
                                title: "Segment Operator"
                                description: "Whether the website activity happened\
                                  \ after, before, or at a given timestamp."
                                example: "greater"
                              value:
                                type: "string"
                                title: "Segment Value"
                                description: "The date to check Goal activity against."
                                example: "2015-07-20 19:45:21"
                          - type: "object"
                            title: "Similar Subscribers Segment Member Segment"
                            description: "Segment by similar subscribers."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "FuzzySegment"
                                enum:
                                - "FuzzySegment"
                              field:
                                type: "string"
                                enum:
                                - "fuzzy_segment"
                                title: "Segment Field"
                                description: "Segment by similar subscribers."
                                example: "fuzzy_segment"
                              op:
                                type: "string"
                                enum:
                                - "fuzzy_is"
                                - "fuzzy_not"
                                title: "Segment Operator"
                                description: "Members who are/are not apart of a 'similar\
                                  \ subscribers' segment."
                                example: "fuzzy_is"
                              value:
                                type: "number"
                                title: "Segment Operator"
                                description: "The id for the 'similar subscribers'\
                                  \ segment."
                                example: 48433
                          - type: "object"
                            title: "Static Segment Member Segment"
                            description: "Segment by a given static segment."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "StaticSegment"
                                enum:
                                - "StaticSegment"
                              field:
                                type: "string"
                                enum:
                                - "static_segment"
                                title: "Segment Field"
                                description: "Segment by a given static segment."
                                example: "static_segment"
                              op:
                                type: "string"
                                enum:
                                - "static_is"
                                - "static_not"
                                title: "Segment Operator"
                                description: "Members who are/are not apart of a static\
                                  \ segment."
                                example: "static_is"
                              value:
                                type: "number"
                                title: "Segment Operator"
                                description: "The id for the static segment."
                                example: 48433
                          - type: "object"
                            title: "Location-Based Segment"
                            description: "Segment by a specific country or US state."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "IPGeoCountryState"
                                enum:
                                - "IPGeoCountryState"
                              field:
                                type: "string"
                                enum:
                                - "ipgeo"
                                title: "Segment Field"
                                description: "Segmenting subscribers who are within\
                                  \ a specific location."
                                example: "ipgeo"
                              op:
                                type: "string"
                                enum:
                                - "ipgeocountry"
                                - "ipgeonotcountry"
                                - "ipgeostate"
                                - "ipgeonotstate"
                                title: "Segment Operator"
                                description: "Segment members who are within a specific\
                                  \ country or US state."
                                example: "ipgeocountry"
                              value:
                                type: "string"
                                title: "Segment Data"
                                description: "The two-letter country code or US state\
                                  \ abbreviation."
                                example: "US"
                          - type: "object"
                            title: "Geolocation Segment"
                            description: "Segment by a specific geographic region."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            - "addr"
                            - "lat"
                            - "lng"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "IPGeoIn"
                                enum:
                                - "IPGeoIn"
                              field:
                                type: "string"
                                enum:
                                - "ipgeo"
                                title: "Segment Field"
                                description: "Segmenting subscribers who are within\
                                  \ a specific location."
                                example: "ipgeo"
                              op:
                                type: "string"
                                enum:
                                - "ipgeoin"
                                - "ipgeonotin"
                                title: "Segment Operator"
                                description: "Segment members who are within a specific\
                                  \ geographic region."
                                example: "ipgeoin"
                              value:
                                type: "integer"
                                title: "Segment Data"
                                description: "The radius of the target location."
                                example: 42
                              addr:
                                type: "string"
                                title: "Segment Location Address"
                                description: "The address of the target location."
                                example: "Atlanta, GA, USA"
                              lat:
                                type: "string"
                                title: "Segment Location Latitude"
                                description: "The latitude of the target location."
                                example: "33.7489954"
                              lng:
                                type: "string"
                                title: "Segment Location Longitude"
                                description: "The longitude of the target location."
                                example: "-84.3879824"
                          - type: "object"
                            title: "US Zip Code Segment"
                            description: "Segment by a specific US ZIP code."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            - "extra"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "IPGeoInZip"
                                enum:
                                - "IPGeoInZip"
                              field:
                                type: "string"
                                enum:
                                - "ipgeo"
                                title: "Segment Field"
                                description: "Segmenting subscribers who are within\
                                  \ a specific location."
                                example: "ipgeo"
                              op:
                                type: "string"
                                enum:
                                - "ipgeoinzip"
                                title: "Segment Operator"
                                description: "Segment members who are within a specific\
                                  \ US zip code."
                                example: "ipgeoinzip"
                              value:
                                type: "integer"
                                title: "Segment Data"
                                description: "The radius of the target location."
                                example: 25
                              extra:
                                type: "integer"
                                title: "Extra Data"
                                description: "The zip code to segment against."
                                example: 30318
                          - type: "object"
                            title: "Unknown Location-Based Segment"
                            description: "Segment members whose location information\
                              \ is unknown."
                            required:
                            - "field"
                            - "op"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "IPGeoUnknown"
                                enum:
                                - "IPGeoUnknown"
                              field:
                                type: "string"
                                enum:
                                - "ipgeo"
                                title: "Segment Field"
                                description: "Segmenting subscribers who are within\
                                  \ a specific location."
                                example: "ipgeo"
                              op:
                                type: "string"
                                enum:
                                - "ipgeounknown"
                                title: "Segment Operator"
                                description: "Segment members for which location information\
                                  \ is unknown."
                                example: "ipgeounknown"
                          - type: "object"
                            title: "Zip Code Location-Based Segment"
                            description: "Segment by a specific US ZIP code."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "IPGeoZip"
                                enum:
                                - "IPGeoZip"
                              field:
                                type: "string"
                                enum:
                                - "ipgeo"
                                title: "Segment Field"
                                description: "Segmenting subscribers who are within\
                                  \ a specific location."
                                example: "ipgeo"
                              op:
                                type: "string"
                                enum:
                                - "ipgeoiszip"
                                - "ipgeonotzip"
                                title: "Segment Operator"
                                description: "Segment members who are/are not within\
                                  \ a specific US zip code."
                                example: "ipgeonotzip"
                              value:
                                type: "integer"
                                title: "Segment Data"
                                description: "The 5-digit zip code."
                                example: 30318
                          - type: "object"
                            title: "Social Profiles Age Segment"
                            description: "Segment by age ranges in Social Profiles\
                              \ data."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "SocialAge"
                                enum:
                                - "SocialAge"
                              field:
                                type: "string"
                                enum:
                                - "social_age"
                                title: "Segment Field"
                                description: "Segment by age ranges in Social Profiles\
                                  \ data."
                                example: "social_age"
                              op:
                                type: "string"
                                enum:
                                - "is"
                                - "not"
                                title: "Segment Operator"
                                description: "Members who are/not the exact criteria\
                                  \ listed."
                                example: "is"
                              value:
                                type: "string"
                                enum:
                                - "18-24"
                                - "25-34"
                                - "35-54"
                                - "55+"
                                title: "Segment Operator"
                                description: "The age range to segment."
                                example: "35-54"
                          - type: "object"
                            title: "Social Profiles Gender Segment"
                            description: "Segment by listed gender in Social Profiles\
                              \ data."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "SocialGender"
                                enum:
                                - "SocialGender"
                              field:
                                type: "string"
                                enum:
                                - "social_gender"
                                title: "Segment Field"
                                description: "Segment by listed gender in Social Profiles\
                                  \ data."
                                example: "social_gender"
                              op:
                                type: "string"
                                enum:
                                - "is"
                                - "not"
                                title: "Segment Operator"
                                description: "Members who are/not the exact criteria\
                                  \ listed."
                                example: "is"
                              value:
                                type: "string"
                                enum:
                                - "male"
                                - "female"
                                title: "Segment Operator"
                                description: "The Social Profiles gender to segment."
                                example: "female"
                          - type: "object"
                            title: "Social Profiles Influence Segment"
                            description: "Segment by influence rating in Social Profiles\
                              \ data."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "SocialInfluence"
                                enum:
                                - "SocialInfluence"
                              field:
                                type: "string"
                                enum:
                                - "social_influence"
                                title: "Segment Field"
                                description: "Segment by influence rating in Social\
                                  \ Profiles data."
                                example: "social_influence"
                              op:
                                type: "string"
                                enum:
                                - "is"
                                - "not"
                                - "greater"
                                - "less"
                                title: "Segment Operator"
                                description: "Members who have a rating that is/not\
                                  \ or greater/less than the rating provided."
                                example: "greater"
                              value:
                                type: "number"
                                title: "Segment Operator"
                                description: "The Social Profiles influence rating\
                                  \ to segment."
                                example: 2
                          - type: "object"
                            title: "Social Profiles Social Network Segment"
                            description: "Segment by social network in Social Profiles\
                              \ data."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "SocialNetworkMember"
                                enum:
                                - "SocialNetworkMember"
                              field:
                                type: "string"
                                enum:
                                - "social_network"
                                title: "Segment Field"
                                description: "Segment by social network in Social\
                                  \ Profiles data."
                                example: "social_network"
                              op:
                                type: "string"
                                enum:
                                - "member"
                                - "notmember"
                                title: "Segment Operator"
                                description: "Members who are/not on a given social\
                                  \ network."
                                example: "member"
                              value:
                                type: "string"
                                enum:
                                - "twitter"
                                - "facebook"
                                - "linkedin"
                                - "flickr"
                                - "foursquare"
                                - "lastfm"
                                - "myspace"
                                - "quora"
                                - "vimeo"
                                - "yelp"
                                - "youtube"
                                title: "Segment Operator"
                                description: "The social network to segment against."
                                example: "twitter"
                          - type: "object"
                            title: "Social Profiles Social Network Follow Segment"
                            description: "Segment by social network in Social Profiles\
                              \ data."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "SocialNetworkFollow"
                                enum:
                                - "SocialNetworkFollow"
                              field:
                                type: "string"
                                enum:
                                - "social_network"
                                title: "Segment Field"
                                description: "Segment by social network in Social\
                                  \ Profiles data."
                                example: "social_network"
                              op:
                                type: "string"
                                enum:
                                - "follow"
                                - "notfollow"
                                title: "Segment Operator"
                                description: "Members who are/not following a linked\
                                  \ account on a given social network."
                                example: "follow"
                              value:
                                type: "string"
                                enum:
                                - "twitter_follow"
                                title: "Segment Operator"
                                description: "The social network to segment against."
                                example: "twitter_follow"
                          - type: "object"
                            title: "Address Merge Field Segment"
                            description: "Segment by an address-type merge field."
                            required:
                            - "field"
                            - "op"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "AddressMerge"
                                enum:
                                - "AddressMerge"
                              field:
                                type: "string"
                                title: "Segment Field"
                                description: "An address-type merge field to segment."
                                example: "MMERGE3"
                              op:
                                type: "string"
                                enum:
                                - "contains"
                                - "notcontain"
                                - "blank"
                                - "blank_not"
                                title: "Segment Operator"
                                description: "Whether the member's address merge field\
                                  \ contains/does not contain a value or is/is not\
                                  \ blank."
                                example: "contains"
                              value:
                                type: "string"
                                title: "Segment Value"
                                description: "The value to segment a text merge field\
                                  \ with."
                                example: "Atlanta"
                          - type: "object"
                            title: "Address/Zip Merge Field Segment"
                            description: "Segment by an address-type merge field within\
                              \ a given distance."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            - "extra"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "ZipMerge"
                                enum:
                                - "ZipMerge"
                              field:
                                type: "string"
                                title: "Segment Field"
                                description: "An address or zip-type merge field to\
                                  \ segment."
                                example: "MMERGE2"
                              op:
                                type: "string"
                                enum:
                                - "geoin"
                                title: "Segment Operator"
                                description: "Whether the member's address merge field\
                                  \ is within a given distance from a city or zip."
                                example: "geoin"
                              value:
                                type: "string"
                                title: "Segment Value"
                                description: "The distance from the city/zip."
                                example: "25"
                              extra:
                                type: "string"
                                title: "Segment Extra"
                                description: "The city or the zip being used to segment\
                                  \ against."
                                example: "30318"
                          - type: "object"
                            title: "Birthday Merge Field Segment"
                            description: "Segment by a contact's birthday."
                            required:
                            - "field"
                            - "op"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "BirthdayMerge"
                                enum:
                                - "BirthdayMerge"
                              field:
                                type: "string"
                                title: "Segment Field"
                                description: "A date merge field to segment."
                                example: "MMERGE4"
                              op:
                                type: "string"
                                enum:
                                - "is"
                                - "not"
                                - "blank"
                                - "blank_not"
                                title: "Segment Operator"
                                description: "Whether the member's birthday merge\
                                  \ information is/is not a certain date or is/is\
                                  \ not blank."
                                example: "is"
                              value:
                                type: "string"
                                title: "Segment Value"
                                description: "A date to segment against (mm/dd)."
                                example: "01/30"
                          - type: "object"
                            title: "Date Merge Field Segment"
                            description: "Segment by a given date merge field."
                            required:
                            - "field"
                            - "op"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "DateMerge"
                                enum:
                                - "DateMerge"
                              field:
                                type: "string"
                                title: "Segment Field"
                                description: "A date merge field to segment."
                                example: "MMERGE5"
                              op:
                                type: "string"
                                enum:
                                - "is"
                                - "not"
                                - "less"
                                - "blank"
                                - "blank_not"
                                - "greater"
                                title: "Segment Operator"
                                description: "Whether the member's merge information\
                                  \ is/is not, is greater/less than a value or is/is\
                                  \ not blank."
                                example: "is"
                              value:
                                type: "string"
                                title: "Segment Value"
                                description: "A date to segment against."
                                example: "01/30/2015"
                          - type: "object"
                            title: "Dropdown/Radio Merge Field Segment"
                            description: "An individual segment condition"
                            required:
                            - "field"
                            - "op"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "SelectMerge"
                                enum:
                                - "SelectMerge"
                              field:
                                type: "string"
                                title: "Segment Field"
                                description: "A merge field to segment."
                                example: "MMERGE6"
                              op:
                                type: "string"
                                enum:
                                - "is"
                                - "not"
                                - "blank"
                                - "blank_not"
                                - "notcontain"
                                - "contains"
                                title: "Segment Operator"
                                description: "Whether the member's merge information\
                                  \ is/is not a value or is/is not blank."
                                example: "is"
                              value:
                                type: "string"
                                title: "Segment Value"
                                description: "The value to segment a text merge field\
                                  \ with."
                                example: "Second Choice"
                          - type: "object"
                            title: "Text or Number Merge Field Segment"
                            description: "Segment by a given text or number merge\
                              \ field."
                            required:
                            - "field"
                            - "op"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "TextMerge"
                                enum:
                                - "TextMerge"
                              field:
                                type: "string"
                                title: "Segment Field"
                                description: "A text or number merge field to segment."
                                example: "MMERGE7"
                              op:
                                type: "string"
                                enum:
                                - "is"
                                - "not"
                                - "contains"
                                - "notcontain"
                                - "starts"
                                - "ends"
                                - "greater"
                                - "less"
                                - "blank"
                                - "blank_not"
                                title: "Segment Operator"
                                description: "Whether the member's merge information\
                                  \ is/is not, contains/does not contain, starts/ends\
                                  \ with, or is greater/less than a value"
                                example: "contains"
                              value:
                                type: "string"
                                title: "Segment Value"
                                description: "The value to segment a text or number\
                                  \ merge field with."
                                example: "Freddie's Jokes"
                          - type: "object"
                            title: "Email Segment"
                            description: "Segment by email address."
                            required:
                            - "field"
                            - "op"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "EmailAddress"
                                enum:
                                - "EmailAddress"
                              field:
                                type: "string"
                                enum:
                                - "merge0"
                                - "EMAIL"
                                title: "Segment Field"
                                description: "Segmenting based off of a subscriber's\
                                  \ email address."
                                example: "EMAIL"
                              op:
                                type: "string"
                                enum:
                                - "is"
                                - "not"
                                - "contains"
                                - "notcontain"
                                - "starts"
                                - "ends"
                                - "greater"
                                - "less"
                                title: "Segment Operator"
                                description: "Whether the email address is/not exactly,\
                                  \ contains/doesn't contain, starts/ends with a string."
                              value:
                                type: "string"
                                title: "Segment Value"
                                description: "The value to compare the email against."
                                example: "urist.mcvankab@freddiesjokes.com"
                          - type: "object"
                            title: "Predicted Gender Segment"
                            description: "Segment by predicted gender."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "PredictedGender"
                                enum:
                                - "PredictedGender"
                              field:
                                type: "string"
                                enum:
                                - "predicted_gender"
                                title: "Segment Field"
                                description: "Segment by predicted gender."
                              op:
                                type: "string"
                                enum:
                                - "is"
                                - "not"
                                title: "Segment Operator"
                                description: "Members who are/not the exact criteria\
                                  \ listed."
                                example: "is"
                              value:
                                type: "string"
                                enum:
                                - "male"
                                - "female"
                                title: "Segment Operator"
                                description: "The predicted gender to segment."
                                example: "female"
                          - type: "object"
                            title: "Predicted Age Segment"
                            description: "Segment by predicted age."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "PredictedAge"
                                enum:
                                - "PredictedAge"
                              field:
                                type: "string"
                                enum:
                                - "predicted_age_range"
                                title: "Segment Field"
                                description: "Segment by predicted age."
                              op:
                                type: "string"
                                enum:
                                - "is"
                                title: "Segment Operator"
                                description: "Members who are/not the exact criteria\
                                  \ listed."
                                example: "is"
                              value:
                                type: "string"
                                enum:
                                - "18-24"
                                - "25-34"
                                - "35-44"
                                - "45-54"
                                - "55-64"
                                - "65+"
                                title: "Segment Operator"
                                description: "The predicted age to segment."
                                example: "female"
                          - type: "object"
                            title: "New Subscribers Prebuilt Segment"
                            description: "Segment by when people subscribed."
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "NewSubscribers"
                                enum:
                                - "NewSubscribers"
                              field:
                                type: "string"
                                enum:
                                - "timestamp_opt"
                                title: "Segment Field"
                                description: "Segment by when people subscribed."
                              op:
                                type: "string"
                                enum:
                                - "date_within"
                                title: "Segment Operator"
                                description: "Whe the event took place, namely within\
                                  \ a time frame."
                              value:
                                type: "string"
                                title: "Segment Data"
                                description: "What type of data to segment on: a specific\
                                  \ date, a specific campaign, or the last campaign\
                                  \ sent."
                          x-discriminator:
                            type: "string"
                            propertyName: "condition_type"
              thumbnail:
                type: "string"
                description: "The URL of the thumbnail for this outreach."
                title: "Thumbnail"
          - type: "object"
            properties:
              email_source_name:
                type: "string"
                title: "Ad: Email Source Name"
              paused_at:
                type: "string"
                format: "date-time"
                description: "The date and time the ad was paused in ISO 8601 format."
                title: "Ad: Paused At"
              end_time:
                type: "string"
                format: "date-time"
                description: "The date and time the ad was ended in ISO 8601 format."
                title: "Ad: End Time"
              needs_attention:
                type: "boolean"
                description: "If the ad has a problem and needs attention."
                title: "Ad: Needs Attention"
              was_canceled_by_facebook:
                type: "boolean"
                title: "Ad: Was Canceled By Facebook"
          - type: "object"
            description: "A facebook ad."
            properties:
              is_connected:
                type: "boolean"
                description: "Check if this ad is connected to a facebook page"
              has_audience:
                type: "boolean"
                description: "Check if this ad has audience setup"
              has_content:
                type: "boolean"
                description: "Check if this ad has content"
              channel:
                type: "object"
                description: "Channel settings"
                properties:
                  fb_placement_feed:
                    type: "boolean"
                    example: true
                    description: "Is this for facebook feed"
                  fb_placement_audience:
                    type: "boolean"
                    example: false
                    description: "Is this for facebook audience"
                  ig_placement_feed:
                    type: "boolean"
                    example: false
                    description: "Is this for instagram feed"
              feedback:
                type: "object"
                description: "Check if this ad is connected to a facebook page"
                properties:
                  content:
                    type: "string"
                    description: "Feedback regarding the content of this Ad."
                  audience:
                    type: "string"
                    description: "Feedback regarding the audience of this Ad."
                  budget:
                    type: "string"
                    description: "Feedback regarding the budget of this Ad."
                  compliance:
                    type: "string"
                    description: "Feedback regarding the compliance of this Ad."
              site:
                type: "object"
                description: "Connected Site"
                properties:
                  id:
                    type: "integer"
                    example: 43
                    description: "The ID of this connected site."
                  name:
                    type: "string"
                    example: "My Connected Site"
                    description: "The name of the connected site"
                  url:
                    type: "string"
                    example: "www.example.com"
                    description: "The URL for this connected site."
              audience:
                type: "object"
                description: "Audience settings"
                properties:
                  type:
                    type: "string"
                    description: "Type of the audience"
                    enum:
                    - "Custom Audience"
                    - "Lookalike Audience"
                    - "Interest-based Audience"
                  source_type:
                    type: "string"
                    description: "List or Facebook based audience"
                    enum:
                    - "facebook"
                    - "list"
                  email_source:
                    type: "object"
                    properties:
                      name:
                        type: "string"
                        description: "Email source name"
                      type:
                        type: "string"
                        description: "Type of the email source"
                      is_segment:
                        type: "boolean"
                        description: "Is the source reference a segment"
                      segment_type:
                        type: "string"
                        description: "Segment type if this source is tied to a segment"
                      list_name:
                        type: "string"
                        description: "Associated list name to the source"
                  include_source_in_target:
                    type: "boolean"
                    description: "To include list contacts as part of audience"
                  lookalike_country_code:
                    type: "string"
                    description: "To find similar audience in given country"
                  targeting_specs:
                    type: "object"
                    properties:
                      gender:
                        type: "integer"
                      min_age:
                        type: "integer"
                      max_age:
                        type: "integer"
                      locations:
                        type: "object"
                        properties:
                          countries:
                            type: "array"
                            items:
                              type: "string"
                          regions:
                            type: "array"
                            items:
                              type: "string"
                          cities:
                            type: "array"
                            items:
                              type: "string"
                          zips:
                            type: "array"
                            items:
                              type: "string"
                      interests:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            name:
                              type: "string"
              budget:
                type: "object"
                properties:
                  duration:
                    type: "integer"
                    example: 86400
                    description: "Duration of the ad in seconds"
                  total_amount:
                    type: "number"
                    example: 500.0
                    description: "Total budget of the ad"
                  currency_code:
                    type: "string"
                    example: "USD"
                    description: "Currency code"
              content:
                type: "object"
                properties:
                  title:
                    type: "string"
                  link_url:
                    type: "string"
                  message:
                    type: "string"
                  description:
                    type: "string"
                  image_url:
                    type: "string"
                  call_to_action:
                    type: "string"
                  attachments:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        name:
                          type: "string"
                        link_url:
                          type: "string"
                        description:
                          type: "string"
                        image_url:
                          type: "string"
                        call_to_action:
                          type: "string"
          - type: "object"
            properties:
              _links:
                type: "array"
                description: "A list of link types and descriptions for the API schema\
                  \ documents."
                title: "Links"
                readOnly: true
                items:
                  type: "object"
                  description: "This object represents a link from the resource where\
                    \ it is found to another resource or action that may be performed."
                  title: "Resource Link"
                  properties:
                    rel:
                      type: "string"
                      description: "As with an HTML 'rel' attribute, this describes\
                        \ the type of link."
                      title: "Rel"
                      readOnly: true
                    href:
                      type: "string"
                      description: "This property contains a fully-qualified URL that\
                        \ can be called to retrieve the linked resource or perform\
                        \ the linked action."
                      title: "Href"
                      readOnly: true
                    method:
                      type: "string"
                      description: "The HTTP method that should be used when accessing\
                        \ the URL defined in 'href'."
                      title: "Method"
                      readOnly: true
                      enum:
                      - "GET"
                      - "POST"
                      - "PUT"
                      - "PATCH"
                      - "DELETE"
                      - "OPTIONS"
                      - "HEAD"
                    targetSchema:
                      type: "string"
                      description: "For GETs, this is a URL representing the schema\
                        \ that the response should conform to."
                      title: "Target Schema"
                      readOnly: true
                    schema:
                      type: "string"
                      description: "For HTTP methods that can receive bodies (POST\
                        \ and PUT), this is a URL representing the schema that the\
                        \ body should conform to."
                      title: "Schema"
                      readOnly: true
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "Contains an array of facebook ads."
    example:
      facebook_ads:
      - ""
      - ""
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      total_items: 0
  inline_response_200_9_audience_email_source:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Email source name"
      type:
        type: "string"
        description: "Type of the email source"
      is_segment:
        type: "boolean"
        description: "Is the source reference a segment"
      segment_type:
        type: "string"
        description: "Segment type if this source is tied to a segment"
      list_name:
        type: "string"
        description: "Associated list name to the source"
    example:
      name: "name"
      segment_type: "segment_type"
      list_name: "list_name"
      type: "type"
      is_segment: true
  inline_response_200_9_audience_targeting_specs_locations:
    type: "object"
    properties:
      countries:
        type: "array"
        items:
          type: "string"
      regions:
        type: "array"
        items:
          type: "string"
      cities:
        type: "array"
        items:
          type: "string"
      zips:
        type: "array"
        items:
          type: "string"
    example:
      regions:
      - "regions"
      - "regions"
      cities:
      - "cities"
      - "cities"
      countries:
      - "countries"
      - "countries"
      zips:
      - "zips"
      - "zips"
  inline_response_200_9_audience_targeting_specs_interests:
    type: "object"
    properties:
      name:
        type: "string"
    example:
      name: "name"
  inline_response_200_9_audience_targeting_specs:
    type: "object"
    properties:
      gender:
        type: "integer"
      min_age:
        type: "integer"
      max_age:
        type: "integer"
      locations:
        $ref: "#/definitions/inline_response_200_9_audience_targeting_specs_locations"
      interests:
        type: "array"
        items:
          $ref: "#/definitions/inline_response_200_9_audience_targeting_specs_interests"
    example:
      max_age: 1
      gender: 0
      locations:
        regions:
        - "regions"
        - "regions"
        cities:
        - "cities"
        - "cities"
        countries:
        - "countries"
        - "countries"
        zips:
        - "zips"
        - "zips"
      min_age: 6
      interests:
      - name: "name"
      - name: "name"
  inline_response_200_9_audience:
    type: "object"
    properties:
      type:
        type: "string"
        description: "Type of the audience"
        enum:
        - "Custom Audience"
        - "Lookalike Audience"
        - "Interest-based Audience"
      source_type:
        type: "string"
        description: "List or Facebook based audience"
        enum:
        - "facebook"
        - "list"
      email_source:
        $ref: "#/definitions/inline_response_200_9_audience_email_source"
      include_source_in_target:
        type: "boolean"
        description: "To include list contacts as part of audience"
      lookalike_country_code:
        type: "string"
        description: "To find similar audience in given country"
      targeting_specs:
        $ref: "#/definitions/inline_response_200_9_audience_targeting_specs"
    description: "Audience settings"
    example:
      include_source_in_target: true
      email_source:
        name: "name"
        segment_type: "segment_type"
        list_name: "list_name"
        type: "type"
        is_segment: true
      targeting_specs:
        max_age: 1
        gender: 0
        locations:
          regions:
          - "regions"
          - "regions"
          cities:
          - "cities"
          - "cities"
          countries:
          - "countries"
          - "countries"
          zips:
          - "zips"
          - "zips"
        min_age: 6
        interests:
        - name: "name"
        - name: "name"
      source_type: "facebook"
      type: "Custom Audience"
      lookalike_country_code: "lookalike_country_code"
  inline_response_200_9_budget:
    type: "object"
    properties:
      duration:
        type: "integer"
        example: 86400
        description: "Duration of the ad in seconds"
      total_amount:
        type: "number"
        example: 500.0
        description: "Total budget of the ad"
      currency_code:
        type: "string"
        example: "USD"
        description: "Currency code"
    example:
      duration: 86400
      total_amount: 500.0
      currency_code: "USD"
  inline_response_200_9_channel:
    type: "object"
    properties:
      fb_placement_feed:
        type: "boolean"
        example: true
        description: "Is this for facebook feed"
      fb_placement_audience:
        type: "boolean"
        example: false
        description: "Is this for facebook audience"
      ig_placement_feed:
        type: "boolean"
        example: false
        description: "Is this for instagram feed"
    description: "Channel settings"
    example:
      fb_placement_feed: true
      fb_placement_audience: false
      ig_placement_feed: false
  inline_response_200_9_content_attachments:
    type: "object"
    properties:
      name:
        type: "string"
      link_url:
        type: "string"
      description:
        type: "string"
      image_url:
        type: "string"
      call_to_action:
        type: "string"
    example:
      call_to_action: "call_to_action"
      image_url: "image_url"
      name: "name"
      link_url: "link_url"
      description: "description"
  inline_response_200_9_content:
    type: "object"
    properties:
      title:
        type: "string"
      link_url:
        type: "string"
      message:
        type: "string"
      description:
        type: "string"
      image_url:
        type: "string"
      call_to_action:
        type: "string"
      attachments:
        type: "array"
        items:
          $ref: "#/definitions/inline_response_200_9_content_attachments"
    example:
      attachments:
      - call_to_action: "call_to_action"
        image_url: "image_url"
        name: "name"
        link_url: "link_url"
        description: "description"
      - call_to_action: "call_to_action"
        image_url: "image_url"
        name: "name"
        link_url: "link_url"
        description: "description"
      call_to_action: "call_to_action"
      image_url: "image_url"
      link_url: "link_url"
      description: "description"
      title: "title"
      message: "message"
  inline_response_200_9_feedback:
    type: "object"
    properties:
      content:
        type: "string"
        description: "Feedback regarding the content of this Ad."
      audience:
        type: "string"
        description: "Feedback regarding the audience of this Ad."
      budget:
        type: "string"
        description: "Feedback regarding the budget of this Ad."
      compliance:
        type: "string"
        description: "Feedback regarding the compliance of this Ad."
    description: "Check if this ad is connected to a facebook page"
    example:
      audience: "audience"
      compliance: "compliance"
      content: "content"
      budget: "budget"
  Recipients:
    type: "object"
    properties:
      list_id:
        type: "string"
        description: "The unique list id."
        title: "List ID"
      list_is_active:
        type: "boolean"
        description: "The status of the list used, namely if it's deleted or disabled."
        title: "List Status"
        readOnly: true
      list_name:
        type: "string"
        description: "The name of the list."
        title: "List Name"
        readOnly: true
      segment_text:
        type: "string"
        description: "A description of the [segment](https://mailchimp.com/help/save-and-manage-segments/)\
          \ used for the campaign. Formatted as a string marked up with HTML."
        title: "Segment Text"
        readOnly: true
      recipient_count:
        type: "integer"
        description: "Count of the recipients on the associated list. Formatted as\
          \ an integer."
        title: "Recipient Count"
        readOnly: true
      segment_opts:
        $ref: "#/definitions/Segment Options_1"
    description: "High level audience information for who the outreach targets."
    example:
      segment_opts:
        prebuilt_segment_id: "subscribers-female"
        match: "any"
        saved_segment_id: 5
        conditions:
        - ""
        - ""
      list_id: "list_id"
      segment_text: "segment_text"
      recipient_count: 5
      list_name: "list_name"
      list_is_active: true
  Report Summary_ecommerce:
    type: "object"
    properties:
      total_revenue:
        type: "number"
      currency_code:
        type: "string"
      average_order_revenue:
        type: "number"
    example:
      average_order_revenue: 6.8468526983526398765889098285697400569915771484375
      total_revenue: 1.489415909854170383397331534069962799549102783203125
      currency_code: "currency_code"
  Report Summary:
    type: "object"
    properties:
      opens:
        type: "integer"
      unique_opens:
        type: "integer"
      open_rate:
        type: "number"
      clicks:
        type: "integer"
      subscriber_clicks:
        type: "integer"
      click_rate:
        type: "number"
      visits:
        type: "integer"
      unique_visits:
        type: "integer"
      conversion_rate:
        type: "number"
      subscribes:
        type: "integer"
      ecommerce:
        $ref: "#/definitions/Report Summary_ecommerce"
      impressions:
        type: "number"
      reach:
        type: "integer"
      engagements:
        type: "integer"
      total_sent:
        type: "integer"
    description: "High level reporting stats for an outreach."
    example:
      unique_visits: 7
      subscribes: 1
      reach: 1
      click_rate: 2.027123023002321833274663731572218239307403564453125
      total_sent: 5
      impressions: 7.4577447736837658709418974467553198337554931640625
      unique_opens: 2
      subscriber_clicks: 3
      visits: 4
      ecommerce:
        average_order_revenue: 6.8468526983526398765889098285697400569915771484375
        total_revenue: 1.489415909854170383397331534069962799549102783203125
        currency_code: "currency_code"
      opens: 5
      clicks: 9
      engagements: 4
      conversion_rate: 1.231513536777255612975068288506008684635162353515625
      open_rate: 7.061401241503109105224211816675961017608642578125
  inline_response_200_9_site:
    type: "object"
    properties:
      id:
        type: "integer"
        example: 43
        description: "The ID of this connected site."
      name:
        type: "string"
        example: "My Connected Site"
        description: "The name of the connected site"
      url:
        type: "string"
        example: "www.example.com"
        description: "The URL for this connected site."
    description: "Connected Site"
    example:
      name: "My Connected Site"
      id: 43
      url: "www.example.com"
  inline_response_200_9:
    type: "object"
    properties:
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
      audience:
        $ref: "#/definitions/inline_response_200_9_audience"
      budget:
        $ref: "#/definitions/inline_response_200_9_budget"
      canceled_at:
        type: "string"
        format: "date-time"
        description: "The date and time the outreach was canceled in ISO 8601 format."
        title: "Canceled At"
      channel:
        $ref: "#/definitions/inline_response_200_9_channel"
      content:
        $ref: "#/definitions/inline_response_200_9_content"
      create_time:
        type: "string"
        format: "date-time"
        description: "The date and time the outreach was created in ISO 8601 format."
        title: "Create Time"
      email_source_name:
        type: "string"
        title: "Ad: Email Source Name"
      end_time:
        type: "string"
        format: "date-time"
        description: "The date and time the ad was ended in ISO 8601 format."
        title: "Ad: End Time"
      feedback:
        $ref: "#/definitions/inline_response_200_9_feedback"
      has_audience:
        type: "boolean"
        description: "Check if this ad has audience setup"
      has_content:
        type: "boolean"
        description: "Check if this ad has content"
      has_segment:
        type: "boolean"
        description: "If this outreach targets a segment of your audience."
        title: "Has Segment"
      id:
        type: "string"
        description: "Unique ID of an Outreach."
        title: "ID"
      is_connected:
        type: "boolean"
        description: "Check if this ad is connected to a facebook page"
      name:
        type: "string"
        description: "Title or name of an Outreach."
        title: "Name"
      needs_attention:
        type: "boolean"
        description: "If the ad has a problem and needs attention."
        title: "Ad: Needs Attention"
      paused_at:
        type: "string"
        format: "date-time"
        description: "The date and time the ad was paused in ISO 8601 format."
        title: "Ad: Paused At"
      published_time:
        type: "string"
        format: "date-time"
        description: "The date and time the outreach was (or will be) published in\
          \ ISO 8601 format."
        title: "Publish Time"
      recipients:
        $ref: "#/definitions/Recipients"
      report_summary:
        $ref: "#/definitions/Report Summary"
      show_report:
        type: "boolean"
        description: "Outreach report availability. Note: This property is hotly debated\
          \ in what it _should_ convey. See [MCP-1371](https://jira.mailchimp.com/browse/MCP-1371)\
          \ for more context."
        title: "Show Report"
      site:
        $ref: "#/definitions/inline_response_200_9_site"
      start_time:
        type: "string"
        format: "date-time"
        description: "The date and time the outreach was started in ISO 8601 format."
        title: "Start Time"
      status:
        type: "string"
        description: "The status of this outreach."
        title: "Outreach Status"
        enum:
        - "save"
        - "paused"
        - "schedule"
        - "scheduled"
        - "sending"
        - "sent"
        - "canceled"
        - "canceling"
        - "active"
        - "disconnected"
        - "somepaused"
        - "draft"
        - "completed"
        - "partialRejected"
        - "pending"
        - "rejected"
        - "published"
        - "unpublished"
      thumbnail:
        type: "string"
        description: "The URL of the thumbnail for this outreach."
        title: "Thumbnail"
      type:
        type: "string"
        description: "The type of outreach this object is."
        title: "Outreach Type"
        enum:
        - "regular"
        - "plaintext"
        - "rss"
        - "reconfirm"
        - "variate"
        - "absplit"
        - "automation"
        - "facebook"
        - "google"
        - "autoresponder"
        - "transactional"
        - "page"
        - "website"
        - "social_post"
        - "survey"
        - "customer_journey"
      updated_at:
        type: "string"
        format: "date-time"
        description: "The date and time the outreach was last updated in ISO 8601\
          \ format."
        title: "Updated At"
      was_canceled_by_facebook:
        type: "boolean"
        title: "Ad: Was Canceled By Facebook"
      web_id:
        type: "integer"
        description: "The ID used in the Mailchimp web application. For example, for\
          \ a `regular` outreach, you can view this campaign in your Mailchimp account\
          \ at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`."
        title: "Web ID"
    example:
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      canceled_at: "2000-01-23T04:56:07.000+00:00"
      channel:
        fb_placement_feed: true
        fb_placement_audience: false
        ig_placement_feed: false
      type: "regular"
      content:
        attachments:
        - call_to_action: "call_to_action"
          image_url: "image_url"
          name: "name"
          link_url: "link_url"
          description: "description"
        - call_to_action: "call_to_action"
          image_url: "image_url"
          name: "name"
          link_url: "link_url"
          description: "description"
        call_to_action: "call_to_action"
        image_url: "image_url"
        link_url: "link_url"
        description: "description"
        title: "title"
        message: "message"
      feedback:
        audience: "audience"
        compliance: "compliance"
        content: "content"
        budget: "budget"
      show_report: true
      email_source_name: "email_source_name"
      paused_at: "2000-01-23T04:56:07.000+00:00"
      updated_at: "2000-01-23T04:56:07.000+00:00"
      has_audience: true
      has_content: true
      published_time: "2000-01-23T04:56:07.000+00:00"
      id: "id"
      budget:
        duration: 86400
        total_amount: 500.0
        currency_code: "USD"
      has_segment: true
      is_connected: true
      audience:
        include_source_in_target: true
        email_source:
          name: "name"
          segment_type: "segment_type"
          list_name: "list_name"
          type: "type"
          is_segment: true
        targeting_specs:
          max_age: 1
          gender: 0
          locations:
            regions:
            - "regions"
            - "regions"
            cities:
            - "cities"
            - "cities"
            countries:
            - "countries"
            - "countries"
            zips:
            - "zips"
            - "zips"
          min_age: 6
          interests:
          - name: "name"
          - name: "name"
        source_type: "facebook"
        type: "Custom Audience"
        lookalike_country_code: "lookalike_country_code"
      thumbnail: "thumbnail"
      create_time: "2000-01-23T04:56:07.000+00:00"
      end_time: "2000-01-23T04:56:07.000+00:00"
      web_id: 9
      start_time: "2000-01-23T04:56:07.000+00:00"
      site:
        name: "My Connected Site"
        id: 43
        url: "www.example.com"
      recipients:
        segment_opts:
          prebuilt_segment_id: "subscribers-female"
          match: "any"
          saved_segment_id: 5
          conditions:
          - ""
          - ""
        list_id: "list_id"
        segment_text: "segment_text"
        recipient_count: 5
        list_name: "list_name"
        list_is_active: true
      name: "name"
      needs_attention: true
      report_summary:
        unique_visits: 7
        subscribes: 1
        reach: 1
        click_rate: 2.027123023002321833274663731572218239307403564453125
        total_sent: 5
        impressions: 7.4577447736837658709418974467553198337554931640625
        unique_opens: 2
        subscriber_clicks: 3
        visits: 4
        ecommerce:
          average_order_revenue: 6.8468526983526398765889098285697400569915771484375
          total_revenue: 1.489415909854170383397331534069962799549102783203125
          currency_code: "currency_code"
        opens: 5
        clicks: 9
        engagements: 4
        conversion_rate: 1.231513536777255612975068288506008684635162353515625
        open_rate: 7.061401241503109105224211816675961017608642578125
      status: "save"
      was_canceled_by_facebook: true
  inline_response_200_10:
    type: "object"
    properties:
      facebook_ads:
        type: "array"
        items:
          type: "object"
          allOf:
          - type: "object"
            properties:
              id:
                type: "string"
                description: "Unique ID of an Outreach."
                title: "ID"
              web_id:
                type: "integer"
                description: "The ID used in the Mailchimp web application. For example,\
                  \ for a `regular` outreach, you can view this campaign in your Mailchimp\
                  \ account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`."
                title: "Web ID"
              name:
                type: "string"
                description: "Title or name of an Outreach."
                title: "Name"
              type:
                type: "string"
                description: "The type of outreach this object is."
                title: "Outreach Type"
                enum:
                - "regular"
                - "plaintext"
                - "rss"
                - "reconfirm"
                - "variate"
                - "absplit"
                - "automation"
                - "facebook"
                - "google"
                - "autoresponder"
                - "transactional"
                - "page"
                - "website"
                - "social_post"
                - "survey"
                - "customer_journey"
              status:
                type: "string"
                description: "The status of this outreach."
                title: "Outreach Status"
                enum:
                - "save"
                - "paused"
                - "schedule"
                - "scheduled"
                - "sending"
                - "sent"
                - "canceled"
                - "canceling"
                - "active"
                - "disconnected"
                - "somepaused"
                - "draft"
                - "completed"
                - "partialRejected"
                - "pending"
                - "rejected"
                - "published"
                - "unpublished"
              show_report:
                type: "boolean"
                description: "Outreach report availability. Note: This property is\
                  \ hotly debated in what it _should_ convey. See [MCP-1371](https://jira.mailchimp.com/browse/MCP-1371)\
                  \ for more context."
                title: "Show Report"
              create_time:
                type: "string"
                format: "date-time"
                description: "The date and time the outreach was created in ISO 8601\
                  \ format."
                title: "Create Time"
              start_time:
                type: "string"
                format: "date-time"
                description: "The date and time the outreach was started in ISO 8601\
                  \ format."
                title: "Start Time"
              updated_at:
                type: "string"
                format: "date-time"
                description: "The date and time the outreach was last updated in ISO\
                  \ 8601 format."
                title: "Updated At"
              canceled_at:
                type: "string"
                format: "date-time"
                description: "The date and time the outreach was canceled in ISO 8601\
                  \ format."
                title: "Canceled At"
              published_time:
                type: "string"
                format: "date-time"
                description: "The date and time the outreach was (or will be) published\
                  \ in ISO 8601 format."
                title: "Publish Time"
              has_segment:
                type: "boolean"
                description: "If this outreach targets a segment of your audience."
                title: "Has Segment"
              report_summary:
                type: "object"
                description: "High level reporting stats for an outreach."
                title: "Report Summary"
                properties:
                  opens:
                    type: "integer"
                  unique_opens:
                    type: "integer"
                  open_rate:
                    type: "number"
                  clicks:
                    type: "integer"
                  subscriber_clicks:
                    type: "integer"
                  click_rate:
                    type: "number"
                  visits:
                    type: "integer"
                  unique_visits:
                    type: "integer"
                  conversion_rate:
                    type: "number"
                  subscribes:
                    type: "integer"
                  ecommerce:
                    type: "object"
                    properties:
                      total_revenue:
                        type: "number"
                      currency_code:
                        type: "string"
                      average_order_revenue:
                        type: "number"
                  impressions:
                    type: "number"
                  reach:
                    type: "integer"
                  engagements:
                    type: "integer"
                  total_sent:
                    type: "integer"
              recipients:
                type: "object"
                description: "High level audience information for who the outreach\
                  \ targets."
                title: "Recipients"
                properties:
                  list_id:
                    type: "string"
                    description: "The unique list id."
                    title: "List ID"
                  list_is_active:
                    type: "boolean"
                    description: "The status of the list used, namely if it's deleted\
                      \ or disabled."
                    title: "List Status"
                    readOnly: true
                  list_name:
                    type: "string"
                    description: "The name of the list."
                    title: "List Name"
                    readOnly: true
                  segment_text:
                    type: "string"
                    description: "A description of the [segment](https://mailchimp.com/help/save-and-manage-segments/)\
                      \ used for the campaign. Formatted as a string marked up with\
                      \ HTML."
                    title: "Segment Text"
                    readOnly: true
                  recipient_count:
                    type: "integer"
                    description: "Count of the recipients on the associated list.\
                      \ Formatted as an integer."
                    title: "Recipient Count"
                    readOnly: true
                  segment_opts:
                    type: "object"
                    description: "An object representing all segmentation options.\
                      \ This object should contain a `saved_segment_id` to use an\
                      \ existing segment, or you can create a new segment by including\
                      \ both `match` and `conditions` options."
                    title: "Segment Options"
                    properties:
                      saved_segment_id:
                        type: "integer"
                        description: "The id for an existing saved segment."
                        title: "Saved Segment ID"
                      prebuilt_segment_id:
                        type: "string"
                        example: "subscribers-female"
                        description: "The prebuilt segment id, if a prebuilt segment\
                          \ has been designated for this campaign."
                        title: "Prebuilt Segment Id"
                      match:
                        type: "string"
                        description: "Segment match type."
                        title: "Match Type"
                        enum:
                        - "any"
                        - "all"
                      conditions:
                        type: "array"
                        description: "Segment match conditions. There are multiple\
                          \ possible types, see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas)."
                        title: "Segment Type"
                        items:
                          x-oneOf:
                          - type: "object"
                            title: "Aim Segment"
                            description: "Segment by interaction with a specific campaign."
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "Aim"
                                enum:
                                - "Aim"
                              field:
                                type: "string"
                                enum:
                                - "aim"
                                title: "Segment Field"
                                description: "Segment by interaction with a specific\
                                  \ campaign."
                                example: "aim"
                              op:
                                type: "string"
                                enum:
                                - "open"
                                - "click"
                                - "sent"
                                - "noopen"
                                - "noclick"
                                - "nosent"
                                title: "Segment Operator"
                                description: "The status of the member with regard\
                                  \ to their campaign interaction. One of the following:\
                                  \ opened, clicked, was sent, didn't open, didn't\
                                  \ click, or was not sent."
                                example: "open"
                              value:
                                type: "string"
                                title: "Segment Data"
                                description: "Either the web id value for a specific\
                                  \ campaign or 'any' to account for subscribers who\
                                  \ have/have not interacted with any campaigns."
                                example: "any"
                          - type: "object"
                            title: "Automation Segment"
                            description: "Segment by interaction with an Automation\
                              \ workflow."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "Automation"
                                enum:
                                - "Automation"
                              field:
                                type: "string"
                                enum:
                                - "automation"
                                title: "Segment Field"
                                description: "Segment by interaction with an Automation\
                                  \ workflow."
                                example: "automation"
                              op:
                                type: "string"
                                enum:
                                - "started"
                                - "completed"
                                - "not_started"
                                - "not_completed"
                                title: "Segment Operator"
                                description: "The status of the member with regard\
                                  \ to the automation workflow. One of the following:\
                                  \ has started the workflow, has completed the workflow,\
                                  \ has not started the workflow, or has not completed\
                                  \ the workflow."
                                example: "started"
                              value:
                                type: "string"
                                title: "Segment Data"
                                description: "The web id for the automation workflow\
                                  \ to segment against."
                                example: "2135217"
                          - type: "object"
                            title: "Poll Activity Segment"
                            description: "Segment by poll activity."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "CampaignPoll"
                                enum:
                                - "CampaignPoll"
                              field:
                                type: "string"
                                enum:
                                - "poll"
                                title: "Segment Field"
                                description: "Segment by poll activity."
                                example: "poll"
                              op:
                                type: "string"
                                enum:
                                - "member"
                                - "notmember"
                                title: "Segment Operator"
                                description: "Members have/have not interacted with\
                                  \ a specific poll in a Mailchimp email."
                                example: "member"
                              value:
                                type: "number"
                                title: "Segment Operator"
                                description: "The id for the poll."
                                example: 409
                          - type: "object"
                            title: "Conversation Segment"
                            description: "Segment by interaction with a campaign via\
                              \ Conversations."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "Conversation"
                                enum:
                                - "Conversation"
                              field:
                                type: "string"
                                enum:
                                - "conversation"
                                title: "Segment Field"
                                description: "Segment by interaction with a campaign\
                                  \ via Conversations."
                                example: "conversation"
                              op:
                                type: "string"
                                enum:
                                - "member"
                                - "notmember"
                                title: "Segment Operator"
                                description: "The status of a member's interaction\
                                  \ with a conversation. One of the following: has\
                                  \ replied or has not replied."
                                example: "member"
                              value:
                                type: "string"
                                title: "Segment Data"
                                description: "The web id value for a specific campaign\
                                  \ or 'any' to account for subscribers who have/have\
                                  \ not interacted with any campaigns."
                                example: "any"
                          - type: "object"
                            title: "Date Segment"
                            description: "Segment by a specific date field."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "Date"
                                enum:
                                - "Date"
                              field:
                                type: "string"
                                enum:
                                - "timestamp_opt"
                                - "info_changed"
                                - "ecomm_date"
                                title: "Segment Field"
                                description: "The type of date field to segment on:\
                                  \ The opt-in time for a signup, the date the subscriber\
                                  \ was last updated, or the date of their last ecomm\
                                  \ purchase."
                                example: "timestamp_opt"
                              op:
                                type: "string"
                                enum:
                                - "greater"
                                - "less"
                                - "is"
                                - "not"
                                - "blank"
                                - "blank_not"
                                - "within"
                                - "notwithin"
                                title: "Segment Operator"
                                description: "When the event took place:  Before,\
                                  \ after, is a specific date, is not a specific date,\
                                  \ is blank, or is not blank."
                                example: "greater"
                              value:
                                type: "string"
                                title: "Segment Data"
                                description: "What type of data to segment on: a specific\
                                  \ date, a specific campaign, or the last campaign\
                                  \ sent."
                                example: "date"
                              extra:
                                type: "string"
                                title: "Segment Extra Value"
                                description: "When segmenting on 'date' or 'campaign',\
                                  \ the date for the segment formatted as YYYY-MM-DD\
                                  \ or the web id for the campaign."
                                example: "2015-01-30"
                          - type: "object"
                            title: "Email Client Segment"
                            description: "Segment by use of a particular email client."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "EmailClient"
                                enum:
                                - "EmailClient"
                              field:
                                type: "string"
                                enum:
                                - "email_client"
                                title: "Segment Field"
                                description: "Segment by use of a particular email\
                                  \ client."
                                example: "email_client"
                              op:
                                type: "string"
                                enum:
                                - "client_is"
                                - "client_not"
                                title: "Segment Operator"
                                description: "The operation to determine whether we\
                                  \ select clients that match the value, or clients\
                                  \ that do not match the value."
                                example: "client_is"
                              value:
                                type: "string"
                                title: "Segment Data"
                                description: "The name of the email client."
                                example: "Gmail"
                          - type: "object"
                            title: "Language Segment"
                            description: "Segment by language."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "Language"
                                enum:
                                - "Language"
                              field:
                                type: "string"
                                enum:
                                - "language"
                                title: "Segment Field"
                                description: "Segmenting based off of a subscriber's\
                                  \ language."
                                example: "language"
                              op:
                                type: "string"
                                enum:
                                - "is"
                                - "not"
                                title: "Segment Operator"
                                description: "Whether the member's language is or\
                                  \ is not set to a specific language."
                                example: "is"
                              value:
                                type: "string"
                                title: "Segment Data"
                                description: "A two-letter language identifier."
                                example: "en"
                          - type: "object"
                            title: "Member Rating Segment"
                            description: "Segment by member rating."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "MemberRating"
                                enum:
                                - "MemberRating"
                              field:
                                type: "string"
                                enum:
                                - "rating"
                                title: "Segment Field"
                                description: "Segment by member rating."
                                example: "rating"
                              op:
                                type: "string"
                                enum:
                                - "is"
                                - "not"
                                - "greater"
                                - "less"
                                title: "Segment Operator"
                                description: "Members who have have a rating that\
                                  \ is/not exactly a given number or members who have\
                                  \ a rating greater/less than a given number."
                                example: "greater"
                              value:
                                type: "number"
                                title: "Segment Operator"
                                description: "The star rating number to segment against."
                                example: 4
                          - type: "object"
                            title: "Signup Source Segment"
                            description: "Segment by signup source."
                            required:
                            - "field"
                            - "condition_type"
                            - "op"
                            properties:
                              condition_type:
                                type: "string"
                                enum:
                                - "SignupSource"
                                x-value: "SignupSource"
                                title: "Type"
                              field:
                                type: "string"
                                enum:
                                - "source"
                                title: "Segment Field"
                                example: "source"
                              op:
                                type: "string"
                                enum:
                                - "source_is"
                                - "source_not"
                                title: "Segment Operator"
                                description: "Whether the member's signup source was/was\
                                  \ not a particular value."
                                example: "source_is"
                              value:
                                type: "string"
                                title: "Segment Data"
                                description: "The signup source."
                                example: "List Import"
                          - type: "object"
                            title: "Survey Monkey Segment"
                            description: "Segment by interaction with a SurveyMonkey\
                              \ survey."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "SurveyMonkey"
                                enum:
                                - "SurveyMonkey"
                              field:
                                type: "string"
                                enum:
                                - "survey_monkey"
                                title: "Segment Field"
                                description: "Segment by interaction with a SurveyMonkey\
                                  \ survey."
                                example: "survey_monkey"
                              op:
                                type: "string"
                                enum:
                                - "started"
                                - "completed"
                                - "not_started"
                                - "not_completed"
                                title: "Segment Operator"
                                description: "The status of the member with regard\
                                  \ to the survey.One of the following: has started\
                                  \ the survey, has completed the survey, has not\
                                  \ started the survey, or has not completed the survey."
                                example: "started"
                              value:
                                type: "string"
                                title: "Survey ID"
                                description: "The unique ID of the survey monkey survey."
                                example: "32179586"
                          - type: "object"
                            title: "VIP Segment"
                            description: "Segment by VIP status."
                            required:
                            - "field"
                            - "op"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "VIP"
                                enum:
                                - "VIP"
                              field:
                                type: "string"
                                enum:
                                - "gmonkey"
                                title: "Segment Field"
                                description: "Segment by VIP status."
                                example: "gmonkey"
                              op:
                                type: "string"
                                enum:
                                - "member"
                                - "notmember"
                                title: "Segment Operator"
                                description: "Whether the member is or is not marked\
                                  \ as VIP."
                                example: "member"
                          - type: "object"
                            title: "Interests Segment"
                            description: "Segment by an interest group merge field."
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "Interests"
                                enum:
                                - "Interests"
                              field:
                                type: "string"
                                title: "Segment Field"
                                description: "Segmenting based on interest group information.\
                                  \ This should start with 'interests-' followed by\
                                  \ the grouping id. Ex. 'interests-123'."
                                example: "interests-123"
                              op:
                                type: "string"
                                enum:
                                - "interestcontains"
                                - "interestcontainsall"
                                - "interestnotcontains"
                                title: "Segment Operator"
                                description: "Whether the member is a part of one,\
                                  \ all, or none of the groups."
                                example: "interestcontains"
                              value:
                                type: "array"
                                title: "Segment Value"
                                description: "An array containing strings, each representing\
                                  \ a group id."
                                items:
                                  type: "string"
                                  example:
                                  - "44401"
                                  - "44405"
                                  - "44409"
                          - type: "object"
                            title: "Ecommerce Category Segment"
                            description: "Segment by purchases in specific items or\
                              \ categories."
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "EcommCategory"
                                enum:
                                - "EcommCategory"
                              field:
                                type: "string"
                                enum:
                                - "ecomm_cat"
                                - "ecomm_prod"
                                title: "Segment Field"
                                description: "Segment by purchases in specific items\
                                  \ or categories."
                                example: "ecomm_cat"
                              op:
                                type: "string"
                                enum:
                                - "is"
                                - "not"
                                - "contains"
                                - "notcontain"
                                - "starts"
                                - "ends"
                                title: "Segment Operator"
                                description: "A member who has purchased from a category/specific\
                                  \ item that is/is not a specific name, where the\
                                  \ category/item name contains/doesn't contain a\
                                  \ specific phrase or string, or a category/item\
                                  \ name that starts/ends with a string."
                                example: "is"
                              value:
                                type: "string"
                                title: "Segment Data"
                                description: "The ecommerce category/item information."
                                example: "Product"
                          - type: "object"
                            title: "Ecommerce Number Segment"
                            description: "Segment by average spent total, number of\
                              \ orders, total number of products purchased, or average\
                              \ number of products per order."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "EcommNumber"
                                enum:
                                - "EcommNumber"
                              field:
                                type: "string"
                                enum:
                                - "ecomm_spent_avg"
                                - "ecomm_orders"
                                - "ecomm_prod_all"
                                - "ecomm_avg_ord"
                                title: "Segment Field"
                                description: "Segment by average spent total, number\
                                  \ of orders, total number of products purchased,\
                                  \ or average number of products per order."
                                example: "ecomm_orders"
                              op:
                                type: "string"
                                enum:
                                - "is"
                                - "not"
                                - "greater"
                                - "less"
                                title: "Segment Operator"
                                description: "Members who have spent exactly, have\
                                  \ not spent exactly, spent more, or spent less than\
                                  \ the segment value."
                                example: "greater"
                              value:
                                type: "number"
                                title: "Segment Operator"
                                description: "Members who have spent exactly, have\
                                  \ not spent exactly, spent more, or spent less than\
                                  \ this amount."
                                example: 42
                          - type: "object"
                            title: "Ecommerce Purchased Segment"
                            description: "Segment by whether someone has purchased\
                              \ anything."
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "EcommPurchased"
                                enum:
                                - "EcommPurchased"
                              field:
                                type: "string"
                                enum:
                                - "ecomm_purchased"
                                title: "Segment Field"
                                description: "Segment by whether someone has purchased\
                                  \ anything."
                                example: "ecomm_purchased"
                              op:
                                type: "string"
                                enum:
                                - "member"
                                - "notmember"
                                title: "Segment Operator"
                                description: "Members who have have ('member') or\
                                  \ have not ('notmember') purchased."
                                example: "member"
                          - type: "object"
                            title: "Ecommerce Spent Segment"
                            description: "Segment by amount spent on a single order\
                              \ or across all orders."
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "EcommSpent"
                                enum:
                                - "EcommSpent"
                              field:
                                type: "string"
                                enum:
                                - "ecomm_spent_one"
                                - "ecomm_spent_all"
                                title: "Segment Field"
                                description: "Segment by amount spent on a single\
                                  \ order or across all orders."
                                example: "ecomm_spent_one"
                              op:
                                type: "string"
                                enum:
                                - "greater"
                                - "less"
                                title: "Segment Operator"
                                description: "Members who have spent 'more' or 'less'\
                                  \ than then specified value."
                                example: "greater"
                              value:
                                type: "integer"
                                title: "Segment Data"
                                description: "The total amount a member spent."
                                example: 42
                          - type: "object"
                            title: "Ecommerce Purchased Store Segment"
                            description: "Segment by purchases from a specific store."
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "EcommStore"
                                enum:
                                - "EcommStore"
                              field:
                                type: "string"
                                enum:
                                - "ecomm_store"
                                title: "Segment Field"
                                description: "Segment by purchases from a specific\
                                  \ store."
                                example: "ecomm_store"
                              op:
                                type: "string"
                                enum:
                                - "is"
                                - "not"
                                title: "Segment Operator"
                                description: "Members who have or have not purchased\
                                  \ from a specific store."
                                example: "is"
                              value:
                                type: "string"
                                title: "Segment Operator"
                                description: "The store id to segment against."
                                example: "289"
                          - type: "object"
                            title: "Goal Activity Segment"
                            description: "Segment by Goal activity."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "GoalActivity"
                                enum:
                                - "GoalActivity"
                              field:
                                type: "string"
                                enum:
                                - "goal"
                                title: "Segment Field"
                                description: "Segment by Goal activity."
                                example: "goal"
                              op:
                                type: "string"
                                enum:
                                - "is"
                                - "goal_not"
                                - "contains"
                                - "goal_notcontain"
                                - "starts"
                                - "ends"
                                title: "Segment Operator"
                                description: "Whether the website URL is/not exactly,\
                                  \ contains/doesn't contain, starts with/ends with\
                                  \ a string."
                                example: "is"
                              value:
                                type: "string"
                                title: "Segment Value"
                                description: "The URL to check Goal activity against."
                          - type: "object"
                            title: "Goal Timestamp Segment"
                            description: "Segment by most recent interaction with\
                              \ a website."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "GoalTimestamp"
                                enum:
                                - "GoalTimestamp"
                              field:
                                type: "string"
                                enum:
                                - "goal_last_visited"
                                title: "Segment Field"
                                description: "Segment by most recent interaction with\
                                  \ a website."
                                example: "goal_last_visited"
                              op:
                                type: "string"
                                enum:
                                - "greater"
                                - "less"
                                - "is"
                                title: "Segment Operator"
                                description: "Whether the website activity happened\
                                  \ after, before, or at a given timestamp."
                                example: "greater"
                              value:
                                type: "string"
                                title: "Segment Value"
                                description: "The date to check Goal activity against."
                                example: "2015-07-20 19:45:21"
                          - type: "object"
                            title: "Similar Subscribers Segment Member Segment"
                            description: "Segment by similar subscribers."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "FuzzySegment"
                                enum:
                                - "FuzzySegment"
                              field:
                                type: "string"
                                enum:
                                - "fuzzy_segment"
                                title: "Segment Field"
                                description: "Segment by similar subscribers."
                                example: "fuzzy_segment"
                              op:
                                type: "string"
                                enum:
                                - "fuzzy_is"
                                - "fuzzy_not"
                                title: "Segment Operator"
                                description: "Members who are/are not apart of a 'similar\
                                  \ subscribers' segment."
                                example: "fuzzy_is"
                              value:
                                type: "number"
                                title: "Segment Operator"
                                description: "The id for the 'similar subscribers'\
                                  \ segment."
                                example: 48433
                          - type: "object"
                            title: "Static Segment Member Segment"
                            description: "Segment by a given static segment."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "StaticSegment"
                                enum:
                                - "StaticSegment"
                              field:
                                type: "string"
                                enum:
                                - "static_segment"
                                title: "Segment Field"
                                description: "Segment by a given static segment."
                                example: "static_segment"
                              op:
                                type: "string"
                                enum:
                                - "static_is"
                                - "static_not"
                                title: "Segment Operator"
                                description: "Members who are/are not apart of a static\
                                  \ segment."
                                example: "static_is"
                              value:
                                type: "number"
                                title: "Segment Operator"
                                description: "The id for the static segment."
                                example: 48433
                          - type: "object"
                            title: "Location-Based Segment"
                            description: "Segment by a specific country or US state."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "IPGeoCountryState"
                                enum:
                                - "IPGeoCountryState"
                              field:
                                type: "string"
                                enum:
                                - "ipgeo"
                                title: "Segment Field"
                                description: "Segmenting subscribers who are within\
                                  \ a specific location."
                                example: "ipgeo"
                              op:
                                type: "string"
                                enum:
                                - "ipgeocountry"
                                - "ipgeonotcountry"
                                - "ipgeostate"
                                - "ipgeonotstate"
                                title: "Segment Operator"
                                description: "Segment members who are within a specific\
                                  \ country or US state."
                                example: "ipgeocountry"
                              value:
                                type: "string"
                                title: "Segment Data"
                                description: "The two-letter country code or US state\
                                  \ abbreviation."
                                example: "US"
                          - type: "object"
                            title: "Geolocation Segment"
                            description: "Segment by a specific geographic region."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            - "addr"
                            - "lat"
                            - "lng"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "IPGeoIn"
                                enum:
                                - "IPGeoIn"
                              field:
                                type: "string"
                                enum:
                                - "ipgeo"
                                title: "Segment Field"
                                description: "Segmenting subscribers who are within\
                                  \ a specific location."
                                example: "ipgeo"
                              op:
                                type: "string"
                                enum:
                                - "ipgeoin"
                                - "ipgeonotin"
                                title: "Segment Operator"
                                description: "Segment members who are within a specific\
                                  \ geographic region."
                                example: "ipgeoin"
                              value:
                                type: "integer"
                                title: "Segment Data"
                                description: "The radius of the target location."
                                example: 42
                              addr:
                                type: "string"
                                title: "Segment Location Address"
                                description: "The address of the target location."
                                example: "Atlanta, GA, USA"
                              lat:
                                type: "string"
                                title: "Segment Location Latitude"
                                description: "The latitude of the target location."
                                example: "33.7489954"
                              lng:
                                type: "string"
                                title: "Segment Location Longitude"
                                description: "The longitude of the target location."
                                example: "-84.3879824"
                          - type: "object"
                            title: "US Zip Code Segment"
                            description: "Segment by a specific US ZIP code."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            - "extra"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "IPGeoInZip"
                                enum:
                                - "IPGeoInZip"
                              field:
                                type: "string"
                                enum:
                                - "ipgeo"
                                title: "Segment Field"
                                description: "Segmenting subscribers who are within\
                                  \ a specific location."
                                example: "ipgeo"
                              op:
                                type: "string"
                                enum:
                                - "ipgeoinzip"
                                title: "Segment Operator"
                                description: "Segment members who are within a specific\
                                  \ US zip code."
                                example: "ipgeoinzip"
                              value:
                                type: "integer"
                                title: "Segment Data"
                                description: "The radius of the target location."
                                example: 25
                              extra:
                                type: "integer"
                                title: "Extra Data"
                                description: "The zip code to segment against."
                                example: 30318
                          - type: "object"
                            title: "Unknown Location-Based Segment"
                            description: "Segment members whose location information\
                              \ is unknown."
                            required:
                            - "field"
                            - "op"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "IPGeoUnknown"
                                enum:
                                - "IPGeoUnknown"
                              field:
                                type: "string"
                                enum:
                                - "ipgeo"
                                title: "Segment Field"
                                description: "Segmenting subscribers who are within\
                                  \ a specific location."
                                example: "ipgeo"
                              op:
                                type: "string"
                                enum:
                                - "ipgeounknown"
                                title: "Segment Operator"
                                description: "Segment members for which location information\
                                  \ is unknown."
                                example: "ipgeounknown"
                          - type: "object"
                            title: "Zip Code Location-Based Segment"
                            description: "Segment by a specific US ZIP code."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "IPGeoZip"
                                enum:
                                - "IPGeoZip"
                              field:
                                type: "string"
                                enum:
                                - "ipgeo"
                                title: "Segment Field"
                                description: "Segmenting subscribers who are within\
                                  \ a specific location."
                                example: "ipgeo"
                              op:
                                type: "string"
                                enum:
                                - "ipgeoiszip"
                                - "ipgeonotzip"
                                title: "Segment Operator"
                                description: "Segment members who are/are not within\
                                  \ a specific US zip code."
                                example: "ipgeonotzip"
                              value:
                                type: "integer"
                                title: "Segment Data"
                                description: "The 5-digit zip code."
                                example: 30318
                          - type: "object"
                            title: "Social Profiles Age Segment"
                            description: "Segment by age ranges in Social Profiles\
                              \ data."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "SocialAge"
                                enum:
                                - "SocialAge"
                              field:
                                type: "string"
                                enum:
                                - "social_age"
                                title: "Segment Field"
                                description: "Segment by age ranges in Social Profiles\
                                  \ data."
                                example: "social_age"
                              op:
                                type: "string"
                                enum:
                                - "is"
                                - "not"
                                title: "Segment Operator"
                                description: "Members who are/not the exact criteria\
                                  \ listed."
                                example: "is"
                              value:
                                type: "string"
                                enum:
                                - "18-24"
                                - "25-34"
                                - "35-54"
                                - "55+"
                                title: "Segment Operator"
                                description: "The age range to segment."
                                example: "35-54"
                          - type: "object"
                            title: "Social Profiles Gender Segment"
                            description: "Segment by listed gender in Social Profiles\
                              \ data."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "SocialGender"
                                enum:
                                - "SocialGender"
                              field:
                                type: "string"
                                enum:
                                - "social_gender"
                                title: "Segment Field"
                                description: "Segment by listed gender in Social Profiles\
                                  \ data."
                                example: "social_gender"
                              op:
                                type: "string"
                                enum:
                                - "is"
                                - "not"
                                title: "Segment Operator"
                                description: "Members who are/not the exact criteria\
                                  \ listed."
                                example: "is"
                              value:
                                type: "string"
                                enum:
                                - "male"
                                - "female"
                                title: "Segment Operator"
                                description: "The Social Profiles gender to segment."
                                example: "female"
                          - type: "object"
                            title: "Social Profiles Influence Segment"
                            description: "Segment by influence rating in Social Profiles\
                              \ data."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "SocialInfluence"
                                enum:
                                - "SocialInfluence"
                              field:
                                type: "string"
                                enum:
                                - "social_influence"
                                title: "Segment Field"
                                description: "Segment by influence rating in Social\
                                  \ Profiles data."
                                example: "social_influence"
                              op:
                                type: "string"
                                enum:
                                - "is"
                                - "not"
                                - "greater"
                                - "less"
                                title: "Segment Operator"
                                description: "Members who have a rating that is/not\
                                  \ or greater/less than the rating provided."
                                example: "greater"
                              value:
                                type: "number"
                                title: "Segment Operator"
                                description: "The Social Profiles influence rating\
                                  \ to segment."
                                example: 2
                          - type: "object"
                            title: "Social Profiles Social Network Segment"
                            description: "Segment by social network in Social Profiles\
                              \ data."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "SocialNetworkMember"
                                enum:
                                - "SocialNetworkMember"
                              field:
                                type: "string"
                                enum:
                                - "social_network"
                                title: "Segment Field"
                                description: "Segment by social network in Social\
                                  \ Profiles data."
                                example: "social_network"
                              op:
                                type: "string"
                                enum:
                                - "member"
                                - "notmember"
                                title: "Segment Operator"
                                description: "Members who are/not on a given social\
                                  \ network."
                                example: "member"
                              value:
                                type: "string"
                                enum:
                                - "twitter"
                                - "facebook"
                                - "linkedin"
                                - "flickr"
                                - "foursquare"
                                - "lastfm"
                                - "myspace"
                                - "quora"
                                - "vimeo"
                                - "yelp"
                                - "youtube"
                                title: "Segment Operator"
                                description: "The social network to segment against."
                                example: "twitter"
                          - type: "object"
                            title: "Social Profiles Social Network Follow Segment"
                            description: "Segment by social network in Social Profiles\
                              \ data."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "SocialNetworkFollow"
                                enum:
                                - "SocialNetworkFollow"
                              field:
                                type: "string"
                                enum:
                                - "social_network"
                                title: "Segment Field"
                                description: "Segment by social network in Social\
                                  \ Profiles data."
                                example: "social_network"
                              op:
                                type: "string"
                                enum:
                                - "follow"
                                - "notfollow"
                                title: "Segment Operator"
                                description: "Members who are/not following a linked\
                                  \ account on a given social network."
                                example: "follow"
                              value:
                                type: "string"
                                enum:
                                - "twitter_follow"
                                title: "Segment Operator"
                                description: "The social network to segment against."
                                example: "twitter_follow"
                          - type: "object"
                            title: "Address Merge Field Segment"
                            description: "Segment by an address-type merge field."
                            required:
                            - "field"
                            - "op"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "AddressMerge"
                                enum:
                                - "AddressMerge"
                              field:
                                type: "string"
                                title: "Segment Field"
                                description: "An address-type merge field to segment."
                                example: "MMERGE3"
                              op:
                                type: "string"
                                enum:
                                - "contains"
                                - "notcontain"
                                - "blank"
                                - "blank_not"
                                title: "Segment Operator"
                                description: "Whether the member's address merge field\
                                  \ contains/does not contain a value or is/is not\
                                  \ blank."
                                example: "contains"
                              value:
                                type: "string"
                                title: "Segment Value"
                                description: "The value to segment a text merge field\
                                  \ with."
                                example: "Atlanta"
                          - type: "object"
                            title: "Address/Zip Merge Field Segment"
                            description: "Segment by an address-type merge field within\
                              \ a given distance."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            - "extra"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "ZipMerge"
                                enum:
                                - "ZipMerge"
                              field:
                                type: "string"
                                title: "Segment Field"
                                description: "An address or zip-type merge field to\
                                  \ segment."
                                example: "MMERGE2"
                              op:
                                type: "string"
                                enum:
                                - "geoin"
                                title: "Segment Operator"
                                description: "Whether the member's address merge field\
                                  \ is within a given distance from a city or zip."
                                example: "geoin"
                              value:
                                type: "string"
                                title: "Segment Value"
                                description: "The distance from the city/zip."
                                example: "25"
                              extra:
                                type: "string"
                                title: "Segment Extra"
                                description: "The city or the zip being used to segment\
                                  \ against."
                                example: "30318"
                          - type: "object"
                            title: "Birthday Merge Field Segment"
                            description: "Segment by a contact's birthday."
                            required:
                            - "field"
                            - "op"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "BirthdayMerge"
                                enum:
                                - "BirthdayMerge"
                              field:
                                type: "string"
                                title: "Segment Field"
                                description: "A date merge field to segment."
                                example: "MMERGE4"
                              op:
                                type: "string"
                                enum:
                                - "is"
                                - "not"
                                - "blank"
                                - "blank_not"
                                title: "Segment Operator"
                                description: "Whether the member's birthday merge\
                                  \ information is/is not a certain date or is/is\
                                  \ not blank."
                                example: "is"
                              value:
                                type: "string"
                                title: "Segment Value"
                                description: "A date to segment against (mm/dd)."
                                example: "01/30"
                          - type: "object"
                            title: "Date Merge Field Segment"
                            description: "Segment by a given date merge field."
                            required:
                            - "field"
                            - "op"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "DateMerge"
                                enum:
                                - "DateMerge"
                              field:
                                type: "string"
                                title: "Segment Field"
                                description: "A date merge field to segment."
                                example: "MMERGE5"
                              op:
                                type: "string"
                                enum:
                                - "is"
                                - "not"
                                - "less"
                                - "blank"
                                - "blank_not"
                                - "greater"
                                title: "Segment Operator"
                                description: "Whether the member's merge information\
                                  \ is/is not, is greater/less than a value or is/is\
                                  \ not blank."
                                example: "is"
                              value:
                                type: "string"
                                title: "Segment Value"
                                description: "A date to segment against."
                                example: "01/30/2015"
                          - type: "object"
                            title: "Dropdown/Radio Merge Field Segment"
                            description: "An individual segment condition"
                            required:
                            - "field"
                            - "op"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "SelectMerge"
                                enum:
                                - "SelectMerge"
                              field:
                                type: "string"
                                title: "Segment Field"
                                description: "A merge field to segment."
                                example: "MMERGE6"
                              op:
                                type: "string"
                                enum:
                                - "is"
                                - "not"
                                - "blank"
                                - "blank_not"
                                - "notcontain"
                                - "contains"
                                title: "Segment Operator"
                                description: "Whether the member's merge information\
                                  \ is/is not a value or is/is not blank."
                                example: "is"
                              value:
                                type: "string"
                                title: "Segment Value"
                                description: "The value to segment a text merge field\
                                  \ with."
                                example: "Second Choice"
                          - type: "object"
                            title: "Text or Number Merge Field Segment"
                            description: "Segment by a given text or number merge\
                              \ field."
                            required:
                            - "field"
                            - "op"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "TextMerge"
                                enum:
                                - "TextMerge"
                              field:
                                type: "string"
                                title: "Segment Field"
                                description: "A text or number merge field to segment."
                                example: "MMERGE7"
                              op:
                                type: "string"
                                enum:
                                - "is"
                                - "not"
                                - "contains"
                                - "notcontain"
                                - "starts"
                                - "ends"
                                - "greater"
                                - "less"
                                - "blank"
                                - "blank_not"
                                title: "Segment Operator"
                                description: "Whether the member's merge information\
                                  \ is/is not, contains/does not contain, starts/ends\
                                  \ with, or is greater/less than a value"
                                example: "contains"
                              value:
                                type: "string"
                                title: "Segment Value"
                                description: "The value to segment a text or number\
                                  \ merge field with."
                                example: "Freddie's Jokes"
                          - type: "object"
                            title: "Email Segment"
                            description: "Segment by email address."
                            required:
                            - "field"
                            - "op"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "EmailAddress"
                                enum:
                                - "EmailAddress"
                              field:
                                type: "string"
                                enum:
                                - "merge0"
                                - "EMAIL"
                                title: "Segment Field"
                                description: "Segmenting based off of a subscriber's\
                                  \ email address."
                                example: "EMAIL"
                              op:
                                type: "string"
                                enum:
                                - "is"
                                - "not"
                                - "contains"
                                - "notcontain"
                                - "starts"
                                - "ends"
                                - "greater"
                                - "less"
                                title: "Segment Operator"
                                description: "Whether the email address is/not exactly,\
                                  \ contains/doesn't contain, starts/ends with a string."
                              value:
                                type: "string"
                                title: "Segment Value"
                                description: "The value to compare the email against."
                                example: "urist.mcvankab@freddiesjokes.com"
                          - type: "object"
                            title: "Predicted Gender Segment"
                            description: "Segment by predicted gender."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "PredictedGender"
                                enum:
                                - "PredictedGender"
                              field:
                                type: "string"
                                enum:
                                - "predicted_gender"
                                title: "Segment Field"
                                description: "Segment by predicted gender."
                              op:
                                type: "string"
                                enum:
                                - "is"
                                - "not"
                                title: "Segment Operator"
                                description: "Members who are/not the exact criteria\
                                  \ listed."
                                example: "is"
                              value:
                                type: "string"
                                enum:
                                - "male"
                                - "female"
                                title: "Segment Operator"
                                description: "The predicted gender to segment."
                                example: "female"
                          - type: "object"
                            title: "Predicted Age Segment"
                            description: "Segment by predicted age."
                            required:
                            - "field"
                            - "op"
                            - "value"
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "PredictedAge"
                                enum:
                                - "PredictedAge"
                              field:
                                type: "string"
                                enum:
                                - "predicted_age_range"
                                title: "Segment Field"
                                description: "Segment by predicted age."
                              op:
                                type: "string"
                                enum:
                                - "is"
                                title: "Segment Operator"
                                description: "Members who are/not the exact criteria\
                                  \ listed."
                                example: "is"
                              value:
                                type: "string"
                                enum:
                                - "18-24"
                                - "25-34"
                                - "35-44"
                                - "45-54"
                                - "55-64"
                                - "65+"
                                title: "Segment Operator"
                                description: "The predicted age to segment."
                                example: "female"
                          - type: "object"
                            title: "New Subscribers Prebuilt Segment"
                            description: "Segment by when people subscribed."
                            properties:
                              condition_type:
                                type: "string"
                                x-value: "NewSubscribers"
                                enum:
                                - "NewSubscribers"
                              field:
                                type: "string"
                                enum:
                                - "timestamp_opt"
                                title: "Segment Field"
                                description: "Segment by when people subscribed."
                              op:
                                type: "string"
                                enum:
                                - "date_within"
                                title: "Segment Operator"
                                description: "Whe the event took place, namely within\
                                  \ a time frame."
                              value:
                                type: "string"
                                title: "Segment Data"
                                description: "What type of data to segment on: a specific\
                                  \ date, a specific campaign, or the last campaign\
                                  \ sent."
                          x-discriminator:
                            type: "string"
                            propertyName: "condition_type"
              thumbnail:
                type: "string"
                description: "The URL of the thumbnail for this outreach."
                title: "Thumbnail"
          - type: "object"
            properties:
              email_source_name:
                type: "string"
                title: "Ad: Email Source Name"
              paused_at:
                type: "string"
                format: "date-time"
                description: "The date and time the ad was paused in ISO 8601 format."
                title: "Ad: Paused At"
              end_time:
                type: "string"
                format: "date-time"
                description: "The date and time the ad was ended in ISO 8601 format."
                title: "Ad: End Time"
              needs_attention:
                type: "boolean"
                description: "If the ad has a problem and needs attention."
                title: "Ad: Needs Attention"
              was_canceled_by_facebook:
                type: "boolean"
                title: "Ad: Was Canceled By Facebook"
          - type: "object"
            properties:
              channel:
                type: "object"
                description: "Channel settings"
                properties:
                  fb_placement_feed:
                    type: "boolean"
                    example: true
                    description: "Is this for facebook feed"
                  fb_placement_audience:
                    type: "boolean"
                    example: false
                    description: "Is this for facebook audience"
                  ig_placement_feed:
                    type: "boolean"
                    example: false
                    description: "Is this for instagram feed"
              audience:
                type: "object"
                description: "Audience settings"
                properties:
                  type:
                    type: "string"
                    description: "Type of the audience"
                    enum:
                    - "Custom Audience"
                    - "Lookalike Audience"
                    - "Interest-based Audience"
                  source_type:
                    type: "string"
                    description: "List or Facebook based audience"
                    enum:
                    - "facebook"
                    - "list"
                  email_source:
                    type: "object"
                    properties:
                      name:
                        type: "string"
                        description: "Email source name"
                      type:
                        type: "string"
                        description: "Type of the email source"
                      is_segment:
                        type: "boolean"
                        description: "Is the source reference a segment"
                      segment_type:
                        type: "string"
                        description: "Segment type if this source is tied to a segment"
                      list_name:
                        type: "string"
                        description: "Associated list name to the source"
                  include_source_in_target:
                    type: "boolean"
                    description: "To include list contacts as part of audience"
                  lookalike_country_code:
                    type: "string"
                    description: "To find similar audience in given country"
                  targeting_specs:
                    type: "object"
                    properties:
                      gender:
                        type: "integer"
                      min_age:
                        type: "integer"
                      max_age:
                        type: "integer"
                      locations:
                        type: "object"
                        properties:
                          countries:
                            type: "array"
                            items:
                              type: "string"
                          regions:
                            type: "array"
                            items:
                              type: "string"
                          cities:
                            type: "array"
                            items:
                              type: "string"
                          zips:
                            type: "array"
                            items:
                              type: "string"
                      interests:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            name:
                              type: "string"
              budget:
                type: "object"
                properties:
                  duration:
                    type: "integer"
                    example: 86400
                    description: "Duration of the ad in seconds"
                  total_amount:
                    type: "number"
                    example: 500.0
                    description: "Total budget of the ad"
                  currency_code:
                    type: "string"
                    example: "USD"
                    description: "Currency code"
              report_summary:
                type: "object"
                description: "Report summary of facebook ad"
                properties:
                  reach:
                    type: "integer"
                  impressions:
                    type: "integer"
                  clicks:
                    type: "integer"
                  click_rate:
                    type: "number"
                  unique_clicks:
                    type: "integer"
                  first_time_buyers:
                    type: "integer"
                  ecommerce:
                    type: "object"
                    properties:
                      total_revenue:
                        type: "number"
                      currency_code:
                        type: "string"
                  total_products_sold:
                    type: "integer"
                  total_orders:
                    type: "integer"
                  average_order_amount:
                    type: "object"
                    properties:
                      amount:
                        type: "number"
                      currency_code:
                        type: "string"
                  cost_per_click:
                    type: "object"
                    properties:
                      amount:
                        type: "number"
                      currency_code:
                        type: "string"
                  average_daily_budget:
                    type: "object"
                    properties:
                      amount:
                        type: "number"
                      currency_code:
                        type: "string"
                  likes:
                    type: "integer"
                  comments:
                    type: "integer"
                  shares:
                    type: "integer"
                  has_extended_ad_duration:
                    type: "boolean"
                  extended_at:
                    type: "object"
                    properties:
                      datetime:
                        type: "string"
                      timezone:
                        type: "string"
                  return_on_investment:
                    type: "number"
              audience_activity:
                type: "object"
                properties:
                  clicks:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        date:
                          type: "string"
                        clicks:
                          type: "integer"
                  impressions:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        date:
                          type: "string"
                        impressions:
                          type: "integer"
                  revenue:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        date:
                          type: "string"
                        revenue:
                          type: "number"
          - type: "object"
            properties:
              _links:
                type: "array"
                description: "A list of link types and descriptions for the API schema\
                  \ documents."
                title: "Links"
                readOnly: true
                items:
                  type: "object"
                  description: "This object represents a link from the resource where\
                    \ it is found to another resource or action that may be performed."
                  title: "Resource Link"
                  properties:
                    rel:
                      type: "string"
                      description: "As with an HTML 'rel' attribute, this describes\
                        \ the type of link."
                      title: "Rel"
                      readOnly: true
                    href:
                      type: "string"
                      description: "This property contains a fully-qualified URL that\
                        \ can be called to retrieve the linked resource or perform\
                        \ the linked action."
                      title: "Href"
                      readOnly: true
                    method:
                      type: "string"
                      description: "The HTTP method that should be used when accessing\
                        \ the URL defined in 'href'."
                      title: "Method"
                      readOnly: true
                      enum:
                      - "GET"
                      - "POST"
                      - "PUT"
                      - "PATCH"
                      - "DELETE"
                      - "OPTIONS"
                      - "HEAD"
                    targetSchema:
                      type: "string"
                      description: "For GETs, this is a URL representing the schema\
                        \ that the response should conform to."
                      title: "Target Schema"
                      readOnly: true
                    schema:
                      type: "string"
                      description: "For HTTP methods that can receive bodies (POST\
                        \ and PUT), this is a URL representing the schema that the\
                        \ body should conform to."
                      title: "Schema"
                      readOnly: true
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A collection of Facebook ads."
    example:
      facebook_ads:
      - ""
      - ""
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      total_items: 0
  inline_response_200_11_audience_activity_clicks:
    type: "object"
    properties:
      date:
        type: "string"
      clicks:
        type: "integer"
    example:
      date: "date"
      clicks: 0
  inline_response_200_11_audience_activity_impressions:
    type: "object"
    properties:
      date:
        type: "string"
      impressions:
        type: "integer"
    example:
      date: "date"
      impressions: 6
  inline_response_200_11_audience_activity_revenue:
    type: "object"
    properties:
      date:
        type: "string"
      revenue:
        type: "number"
    example:
      date: "date"
      revenue: 1.46581298050294517310021547018550336360931396484375
  inline_response_200_11_audience_activity:
    type: "object"
    properties:
      clicks:
        type: "array"
        items:
          $ref: "#/definitions/inline_response_200_11_audience_activity_clicks"
      impressions:
        type: "array"
        items:
          $ref: "#/definitions/inline_response_200_11_audience_activity_impressions"
      revenue:
        type: "array"
        items:
          $ref: "#/definitions/inline_response_200_11_audience_activity_revenue"
    example:
      revenue:
      - date: "date"
        revenue: 1.46581298050294517310021547018550336360931396484375
      - date: "date"
        revenue: 1.46581298050294517310021547018550336360931396484375
      clicks:
      - date: "date"
        clicks: 0
      - date: "date"
        clicks: 0
      impressions:
      - date: "date"
        impressions: 6
      - date: "date"
        impressions: 6
  inline_response_200_11_report_summary_ecommerce:
    type: "object"
    properties:
      total_revenue:
        type: "number"
      currency_code:
        type: "string"
    example:
      total_revenue: 2.027123023002321833274663731572218239307403564453125
      currency_code: "currency_code"
  inline_response_200_11_report_summary_average_order_amount:
    type: "object"
    properties:
      amount:
        type: "number"
      currency_code:
        type: "string"
    example:
      amount: 1.231513536777255612975068288506008684635162353515625
      currency_code: "currency_code"
  inline_response_200_11_report_summary_extended_at:
    type: "object"
    properties:
      datetime:
        type: "string"
      timezone:
        type: "string"
    example:
      datetime: "datetime"
      timezone: "timezone"
  inline_response_200_11_report_summary:
    type: "object"
    properties:
      reach:
        type: "integer"
      impressions:
        type: "integer"
      clicks:
        type: "integer"
      click_rate:
        type: "number"
      unique_clicks:
        type: "integer"
      first_time_buyers:
        type: "integer"
      ecommerce:
        $ref: "#/definitions/inline_response_200_11_report_summary_ecommerce"
      total_products_sold:
        type: "integer"
      total_orders:
        type: "integer"
      average_order_amount:
        $ref: "#/definitions/inline_response_200_11_report_summary_average_order_amount"
      cost_per_click:
        $ref: "#/definitions/inline_response_200_11_report_summary_average_order_amount"
      average_daily_budget:
        $ref: "#/definitions/inline_response_200_11_report_summary_average_order_amount"
      likes:
        type: "integer"
      comments:
        type: "integer"
      shares:
        type: "integer"
      has_extended_ad_duration:
        type: "boolean"
      extended_at:
        $ref: "#/definitions/inline_response_200_11_report_summary_extended_at"
      return_on_investment:
        type: "number"
    description: "Report summary of facebook ad"
    example:
      total_products_sold: 4
      comments: 1
      reach: 5
      click_rate: 7.061401241503109105224211816675961017608642578125
      cost_per_click:
        amount: 1.231513536777255612975068288506008684635162353515625
        currency_code: "currency_code"
      extended_at:
        datetime: "datetime"
        timezone: "timezone"
      return_on_investment: 7.4577447736837658709418974467553198337554931640625
      impressions: 5
      total_orders: 7
      first_time_buyers: 3
      shares: 6
      average_order_amount:
        amount: 1.231513536777255612975068288506008684635162353515625
        currency_code: "currency_code"
      average_daily_budget:
        amount: 1.231513536777255612975068288506008684635162353515625
        currency_code: "currency_code"
      unique_clicks: 9
      has_extended_ad_duration: true
      ecommerce:
        total_revenue: 2.027123023002321833274663731572218239307403564453125
        currency_code: "currency_code"
      clicks: 2
      likes: 1
  inline_response_200_11:
    type: "object"
    properties:
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
      audience:
        $ref: "#/definitions/inline_response_200_9_audience"
      audience_activity:
        $ref: "#/definitions/inline_response_200_11_audience_activity"
      budget:
        $ref: "#/definitions/inline_response_200_9_budget"
      canceled_at:
        type: "string"
        format: "date-time"
        description: "The date and time the outreach was canceled in ISO 8601 format."
        title: "Canceled At"
      channel:
        $ref: "#/definitions/inline_response_200_9_channel"
      create_time:
        type: "string"
        format: "date-time"
        description: "The date and time the outreach was created in ISO 8601 format."
        title: "Create Time"
      email_source_name:
        type: "string"
        title: "Ad: Email Source Name"
      end_time:
        type: "string"
        format: "date-time"
        description: "The date and time the ad was ended in ISO 8601 format."
        title: "Ad: End Time"
      has_segment:
        type: "boolean"
        description: "If this outreach targets a segment of your audience."
        title: "Has Segment"
      id:
        type: "string"
        description: "Unique ID of an Outreach."
        title: "ID"
      name:
        type: "string"
        description: "Title or name of an Outreach."
        title: "Name"
      needs_attention:
        type: "boolean"
        description: "If the ad has a problem and needs attention."
        title: "Ad: Needs Attention"
      paused_at:
        type: "string"
        format: "date-time"
        description: "The date and time the ad was paused in ISO 8601 format."
        title: "Ad: Paused At"
      published_time:
        type: "string"
        format: "date-time"
        description: "The date and time the outreach was (or will be) published in\
          \ ISO 8601 format."
        title: "Publish Time"
      recipients:
        $ref: "#/definitions/Recipients"
      report_summary:
        $ref: "#/definitions/inline_response_200_11_report_summary"
      show_report:
        type: "boolean"
        description: "Outreach report availability. Note: This property is hotly debated\
          \ in what it _should_ convey. See [MCP-1371](https://jira.mailchimp.com/browse/MCP-1371)\
          \ for more context."
        title: "Show Report"
      start_time:
        type: "string"
        format: "date-time"
        description: "The date and time the outreach was started in ISO 8601 format."
        title: "Start Time"
      status:
        type: "string"
        description: "The status of this outreach."
        title: "Outreach Status"
        enum:
        - "save"
        - "paused"
        - "schedule"
        - "scheduled"
        - "sending"
        - "sent"
        - "canceled"
        - "canceling"
        - "active"
        - "disconnected"
        - "somepaused"
        - "draft"
        - "completed"
        - "partialRejected"
        - "pending"
        - "rejected"
        - "published"
        - "unpublished"
      thumbnail:
        type: "string"
        description: "The URL of the thumbnail for this outreach."
        title: "Thumbnail"
      type:
        type: "string"
        description: "The type of outreach this object is."
        title: "Outreach Type"
        enum:
        - "regular"
        - "plaintext"
        - "rss"
        - "reconfirm"
        - "variate"
        - "absplit"
        - "automation"
        - "facebook"
        - "google"
        - "autoresponder"
        - "transactional"
        - "page"
        - "website"
        - "social_post"
        - "survey"
        - "customer_journey"
      updated_at:
        type: "string"
        format: "date-time"
        description: "The date and time the outreach was last updated in ISO 8601\
          \ format."
        title: "Updated At"
      was_canceled_by_facebook:
        type: "boolean"
        title: "Ad: Was Canceled By Facebook"
      web_id:
        type: "integer"
        description: "The ID used in the Mailchimp web application. For example, for\
          \ a `regular` outreach, you can view this campaign in your Mailchimp account\
          \ at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`."
        title: "Web ID"
    example:
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      canceled_at: "2000-01-23T04:56:07.000+00:00"
      channel:
        fb_placement_feed: true
        fb_placement_audience: false
        ig_placement_feed: false
      type: "regular"
      show_report: true
      email_source_name: "email_source_name"
      paused_at: "2000-01-23T04:56:07.000+00:00"
      updated_at: "2000-01-23T04:56:07.000+00:00"
      published_time: "2000-01-23T04:56:07.000+00:00"
      id: "id"
      budget:
        duration: 86400
        total_amount: 500.0
        currency_code: "USD"
      has_segment: true
      audience:
        include_source_in_target: true
        email_source:
          name: "name"
          segment_type: "segment_type"
          list_name: "list_name"
          type: "type"
          is_segment: true
        targeting_specs:
          max_age: 1
          gender: 0
          locations:
            regions:
            - "regions"
            - "regions"
            cities:
            - "cities"
            - "cities"
            countries:
            - "countries"
            - "countries"
            zips:
            - "zips"
            - "zips"
          min_age: 6
          interests:
          - name: "name"
          - name: "name"
        source_type: "facebook"
        type: "Custom Audience"
        lookalike_country_code: "lookalike_country_code"
      thumbnail: "thumbnail"
      create_time: "2000-01-23T04:56:07.000+00:00"
      end_time: "2000-01-23T04:56:07.000+00:00"
      web_id: 1
      start_time: "2000-01-23T04:56:07.000+00:00"
      recipients:
        segment_opts:
          prebuilt_segment_id: "subscribers-female"
          match: "any"
          saved_segment_id: 5
          conditions:
          - ""
          - ""
        list_id: "list_id"
        segment_text: "segment_text"
        recipient_count: 5
        list_name: "list_name"
        list_is_active: true
      name: "name"
      audience_activity:
        revenue:
        - date: "date"
          revenue: 1.46581298050294517310021547018550336360931396484375
        - date: "date"
          revenue: 1.46581298050294517310021547018550336360931396484375
        clicks:
        - date: "date"
          clicks: 0
        - date: "date"
          clicks: 0
        impressions:
        - date: "date"
          impressions: 6
        - date: "date"
          impressions: 6
      needs_attention: true
      report_summary:
        total_products_sold: 4
        comments: 1
        reach: 5
        click_rate: 7.061401241503109105224211816675961017608642578125
        cost_per_click:
          amount: 1.231513536777255612975068288506008684635162353515625
          currency_code: "currency_code"
        extended_at:
          datetime: "datetime"
          timezone: "timezone"
        return_on_investment: 7.4577447736837658709418974467553198337554931640625
        impressions: 5
        total_orders: 7
        first_time_buyers: 3
        shares: 6
        average_order_amount:
          amount: 1.231513536777255612975068288506008684635162353515625
          currency_code: "currency_code"
        average_daily_budget:
          amount: 1.231513536777255612975068288506008684635162353515625
          currency_code: "currency_code"
        unique_clicks: 9
        has_extended_ad_duration: true
        ecommerce:
          total_revenue: 2.027123023002321833274663731572218239307403564453125
          currency_code: "currency_code"
        clicks: 2
        likes: 1
      status: "save"
      was_canceled_by_facebook: true
  Daily clicks and visits data_clicks:
    type: "object"
    properties:
      date:
        type: "string"
        example: "2018-04-25"
        title: "Date"
        readOnly: true
      val:
        type: "integer"
        example: 13
        title: "Value"
        readOnly: true
    example:
      date: "2018-04-25"
      val: 13
  Daily clicks and visits data_visits:
    type: "object"
    properties:
      date:
        type: "string"
        example: "2018-04-25"
        title: "Date"
        readOnly: true
      val:
        type: "integer"
        example: 11
        title: "Value"
        readOnly: true
    example:
      date: "2018-04-25"
      val: 11
  Daily clicks and visits data_unique_visits:
    type: "object"
    properties:
      date:
        type: "string"
        example: "2018-04-25"
        title: "Date"
        readOnly: true
      val:
        type: "integer"
        example: 1
        title: "Value"
        readOnly: true
    example:
      date: "2018-04-25"
      val: 1
  Daily clicks and visits data:
    type: "object"
    properties:
      clicks:
        type: "array"
        title: "Clicks"
        items:
          $ref: "#/definitions/Daily clicks and visits data_clicks"
      visits:
        type: "array"
        title: "Visits"
        items:
          $ref: "#/definitions/Daily clicks and visits data_visits"
      unique_visits:
        type: "array"
        title: "Unique Visits"
        items:
          $ref: "#/definitions/Daily clicks and visits data_unique_visits"
    description: "The clicks and visits data from the last seven days."
    example:
      unique_visits:
      - date: "2018-04-25"
        val: 1
      - date: "2018-04-25"
        val: 1
      visits:
      - date: "2018-04-25"
        val: 11
      - date: "2018-04-25"
        val: 11
      clicks:
      - date: "2018-04-25"
        val: 13
      - date: "2018-04-25"
        val: 13
  Weekly clicks and visits data_clicks:
    type: "object"
    properties:
      date:
        type: "string"
        example: "2018-04-25"
        title: "Date"
        readOnly: true
      val:
        type: "integer"
        example: 23
        title: "Value"
        readOnly: true
    example:
      date: "2018-04-25"
      val: 23
  Weekly clicks and visits data_visits:
    type: "object"
    properties:
      date:
        type: "string"
        example: "2018-04-25"
        title: "Date"
        readOnly: true
      val:
        type: "integer"
        example: 49
        title: "Value"
        readOnly: true
    example:
      date: "2018-04-25"
      val: 49
  Weekly clicks and visits data:
    type: "object"
    properties:
      clicks:
        type: "array"
        description: "The total number of clicks in a week."
        title: "Clicks"
        items:
          $ref: "#/definitions/Weekly clicks and visits data_clicks"
      visits:
        type: "array"
        description: "The total number of visits in a week."
        title: "Visits"
        items:
          $ref: "#/definitions/Weekly clicks and visits data_visits"
      unique_visits:
        type: "array"
        title: "Unique Visits"
        items:
          $ref: "#/definitions/Daily clicks and visits data_unique_visits"
    description: "The clicks and visits data from the last five weeks."
    example:
      unique_visits:
      - date: "2018-04-25"
        val: 1
      - date: "2018-04-25"
        val: 1
      visits:
      - date: "2018-04-25"
        val: 49
      - date: "2018-04-25"
        val: 49
      clicks:
      - date: "2018-04-25"
        val: 23
      - date: "2018-04-25"
        val: 23
  Landing Page Report_timeseries:
    type: "object"
    properties:
      daily_stats:
        $ref: "#/definitions/Daily clicks and visits data"
      weekly_stats:
        $ref: "#/definitions/Weekly clicks and visits data"
    example:
      daily_stats:
        unique_visits:
        - date: "2018-04-25"
          val: 1
        - date: "2018-04-25"
          val: 1
        visits:
        - date: "2018-04-25"
          val: 11
        - date: "2018-04-25"
          val: 11
        clicks:
        - date: "2018-04-25"
          val: 13
        - date: "2018-04-25"
          val: 13
      weekly_stats:
        unique_visits:
        - date: "2018-04-25"
          val: 1
        - date: "2018-04-25"
          val: 1
        visits:
        - date: "2018-04-25"
          val: 49
        - date: "2018-04-25"
          val: 49
        clicks:
        - date: "2018-04-25"
          val: 23
        - date: "2018-04-25"
          val: 23
  Landing Page Report_ecommerce:
    type: "object"
    properties:
      total_revenue:
        type: "number"
        description: "The total revenue of this landing page."
        title: "Total Revenue"
        readOnly: true
      currency_code:
        type: "string"
        description: "The user's currency code."
        title: "Currency code"
        readOnly: true
      total_orders:
        type: "integer"
        description: "The total number of orders associated with this landing page."
        title: "Total Orders"
        readOnly: true
      average_order_revenue:
        type: "number"
        description: "The average order revenue of this landing page."
        title: "Average Order Revenue"
        readOnly: true
    example:
      average_order_revenue: 9.301444243932575517419536481611430644989013671875
      total_revenue: 2.3021358869347654518833223846741020679473876953125
      total_orders: 7
      currency_code: "currency_code"
  Tag:
    type: "object"
    properties:
      tag_id:
        type: "integer"
        description: "The unique id for the tag."
        title: "Tag ID"
        readOnly: true
      tag_name:
        type: "string"
        description: "The name of the tag."
        title: "Tag Name"
        readOnly: true
    example:
      tag_name: "tag_name"
      tag_id: 3
  Landing Page Report:
    type: "object"
    properties:
      id:
        type: "string"
        example: "00dfc2e1f0"
        description: "A string that uniquely identifies this landing page."
        title: "Landing Page ID"
        readOnly: true
      name:
        type: "string"
        description: "The name of this landing page the user will see."
        title: "Name"
        readOnly: true
      title:
        type: "string"
        description: "The name of the landing page the user's customers will see."
        title: "Title"
        readOnly: true
      url:
        type: "string"
        description: "The landing page url."
        title: "Url"
        readOnly: true
      published_at:
        type: "string"
        format: "date-time"
        description: "The time this landing page was published."
        title: "Published At"
        readOnly: true
      unpublished_at:
        type: "string"
        format: "date-time"
        description: "The time this landing page was unpublished."
        title: "Unpublished At"
        readOnly: true
      status:
        type: "string"
        description: "The status of the landing page."
        title: "Status"
        readOnly: true
      list_id:
        type: "string"
        description: "The list id connected to this landing page."
        title: "List Id"
        readOnly: true
      visits:
        type: "integer"
        description: "The number of visits to this landing pages."
        title: "Visits"
        readOnly: true
      unique_visits:
        type: "integer"
        description: "The number of unique visits to this landing pages."
        title: "Unique Visits"
        readOnly: true
      subscribes:
        type: "integer"
        description: "The number of subscribes to this landing pages."
        title: "Subscribes"
        readOnly: true
      clicks:
        type: "integer"
        description: "The number of clicks to this landing pages."
        title: "Clicks"
        readOnly: true
      conversion_rate:
        type: "number"
        description: "The percentage of people who visited your landing page and were\
          \ added to your list."
        title: "Conversion rate"
        readOnly: true
      timeseries:
        $ref: "#/definitions/Landing Page Report_timeseries"
      ecommerce:
        $ref: "#/definitions/Landing Page Report_ecommerce"
      web_id:
        type: "integer"
        example: 33345484
        description: "The ID used in the Mailchimp web application."
        title: "Landing Page Web ID"
        readOnly: true
      list_name:
        type: "string"
        example: "Test List"
        description: "List Name"
        title: "List Name"
        readOnly: true
      signup_tags:
        type: "array"
        description: "A list of tags associated to the landing page."
        title: "Signup Tags"
        readOnly: true
        items:
          $ref: "#/definitions/Tag"
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A summary of an individual landing page's settings and content."
    example:
      unique_visits: 6
      subscribes: 1
      list_id: "list_id"
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      web_id: 33345484
      list_name: "Test List"
      title: "title"
      url: "url"
      signup_tags:
      - tag_name: "tag_name"
        tag_id: 3
      - tag_name: "tag_name"
        tag_id: 3
      visits: 0
      timeseries:
        daily_stats:
          unique_visits:
          - date: "2018-04-25"
            val: 1
          - date: "2018-04-25"
            val: 1
          visits:
          - date: "2018-04-25"
            val: 11
          - date: "2018-04-25"
            val: 11
          clicks:
          - date: "2018-04-25"
            val: 13
          - date: "2018-04-25"
            val: 13
        weekly_stats:
          unique_visits:
          - date: "2018-04-25"
            val: 1
          - date: "2018-04-25"
            val: 1
          visits:
          - date: "2018-04-25"
            val: 49
          - date: "2018-04-25"
            val: 49
          clicks:
          - date: "2018-04-25"
            val: 23
          - date: "2018-04-25"
            val: 23
      ecommerce:
        average_order_revenue: 9.301444243932575517419536481611430644989013671875
        total_revenue: 2.3021358869347654518833223846741020679473876953125
        total_orders: 7
        currency_code: "currency_code"
      name: "name"
      clicks: 5
      id: "00dfc2e1f0"
      published_at: "2000-01-23T04:56:07.000+00:00"
      conversion_rate: 5.63737665663332876420099637471139430999755859375
      unpublished_at: "2000-01-23T04:56:07.000+00:00"
      status: "status"
  inline_response_200_12:
    type: "object"
    properties:
      landing_pages:
        type: "array"
        items:
          $ref: "#/definitions/Landing Page Report"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    description: "A collection of landing pages."
    example:
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      landing_pages:
      - unique_visits: 6
        subscribes: 1
        list_id: "list_id"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        web_id: 33345484
        list_name: "Test List"
        title: "title"
        url: "url"
        signup_tags:
        - tag_name: "tag_name"
          tag_id: 3
        - tag_name: "tag_name"
          tag_id: 3
        visits: 0
        timeseries:
          daily_stats:
            unique_visits:
            - date: "2018-04-25"
              val: 1
            - date: "2018-04-25"
              val: 1
            visits:
            - date: "2018-04-25"
              val: 11
            - date: "2018-04-25"
              val: 11
            clicks:
            - date: "2018-04-25"
              val: 13
            - date: "2018-04-25"
              val: 13
          weekly_stats:
            unique_visits:
            - date: "2018-04-25"
              val: 1
            - date: "2018-04-25"
              val: 1
            visits:
            - date: "2018-04-25"
              val: 49
            - date: "2018-04-25"
              val: 49
            clicks:
            - date: "2018-04-25"
              val: 23
            - date: "2018-04-25"
              val: 23
        ecommerce:
          average_order_revenue: 9.301444243932575517419536481611430644989013671875
          total_revenue: 2.3021358869347654518833223846741020679473876953125
          total_orders: 7
          currency_code: "currency_code"
        name: "name"
        clicks: 5
        id: "00dfc2e1f0"
        published_at: "2000-01-23T04:56:07.000+00:00"
        conversion_rate: 5.63737665663332876420099637471139430999755859375
        unpublished_at: "2000-01-23T04:56:07.000+00:00"
        status: "status"
      - unique_visits: 6
        subscribes: 1
        list_id: "list_id"
        _links:
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        - schema: "schema"
          targetSchema: "targetSchema"
          method: "GET"
          rel: "rel"
          href: "href"
        web_id: 33345484
        list_name: "Test List"
        title: "title"
        url: "url"
        signup_tags:
        - tag_name: "tag_name"
          tag_id: 3
        - tag_name: "tag_name"
          tag_id: 3
        visits: 0
        timeseries:
          daily_stats:
            unique_visits:
            - date: "2018-04-25"
              val: 1
            - date: "2018-04-25"
              val: 1
            visits:
            - date: "2018-04-25"
              val: 11
            - date: "2018-04-25"
              val: 11
            clicks:
            - date: "2018-04-25"
              val: 13
            - date: "2018-04-25"
              val: 13
          weekly_stats:
            unique_visits:
            - date: "2018-04-25"
              val: 1
            - date: "2018-04-25"
              val: 1
            visits:
            - date: "2018-04-25"
              val: 49
            - date: "2018-04-25"
              val: 49
            clicks:
            - date: "2018-04-25"
              val: 23
            - date: "2018-04-25"
              val: 23
        ecommerce:
          average_order_revenue: 9.301444243932575517419536481611430644989013671875
          total_revenue: 2.3021358869347654518833223846741020679473876953125
          total_orders: 7
          currency_code: "currency_code"
        name: "name"
        clicks: 5
        id: "00dfc2e1f0"
        published_at: "2000-01-23T04:56:07.000+00:00"
        conversion_rate: 5.63737665663332876420099637471139430999755859375
        unpublished_at: "2000-01-23T04:56:07.000+00:00"
        status: "status"
      total_items: 0
  Survey Report:
    type: "object"
    properties:
      id:
        type: "string"
        example: "040d2c2e1f0"
        description: "A string that uniquely identifies this survey."
        title: "Survey ID"
        readOnly: true
      web_id:
        type: "integer"
        example: 165
        description: "The ID used in the Mailchimp web application. View this survey\
          \ report in your Mailchimp account at `https://{dc}.admin.mailchimp.com/lists/surveys/results?survey_id={web_id}`."
        title: "Survey Web ID"
        readOnly: true
      list_id:
        type: "string"
        description: "The ID of the list connected to this survey."
        title: "List ID"
        readOnly: true
      list_name:
        type: "string"
        description: "The name of the list connected to this survey."
        title: "List Name"
        readOnly: true
      title:
        type: "string"
        example: "New product ideas"
        description: "The title of the survey."
        title: "Title"
        readOnly: true
      url:
        type: "string"
        description: "The URL for the survey."
        title: "URL"
        readOnly: true
      status:
        type: "string"
        example: "published"
        description: "The survey's status."
        title: "Status"
        readOnly: true
        enum:
        - "published"
        - "unpublished"
      published_at:
        type: "string"
        format: "date-time"
        example: "2017-08-04T11:09:01+00:00"
        description: "The date and time the survey was published in ISO 8601 format."
        title: "Published At"
        readOnly: true
      created_at:
        type: "string"
        format: "date-time"
        example: "2017-08-04T11:09:01+00:00"
        description: "The date and time the survey was created in ISO 8601 format."
        title: "Created At"
        readOnly: true
      updated_at:
        type: "string"
        format: "date-time"
        example: "2017-08-04T11:09:01+00:00"
        description: "The date and time the survey was last updated in ISO 8601 format."
        title: "Updated At"
        readOnly: true
      total_responses:
        type: "integer"
        example: 810
        description: "The total number of responses to this survey."
        title: "Total Responses"
        readOnly: true
    description: "The report for a survey."
    example:
      list_id: "list_id"
      updated_at: "2017-08-04T11:09:01+00:00"
      created_at: "2017-08-04T11:09:01+00:00"
      total_responses: 810
      id: "040d2c2e1f0"
      web_id: 165
      list_name: "list_name"
      title: "New product ideas"
      published_at: "2017-08-04T11:09:01+00:00"
      url: "url"
      status: "published"
  inline_response_200_13:
    type: "object"
    properties:
      surveys:
        type: "array"
        description: "The surveys that have reports available."
        title: "Surveys"
        items:
          $ref: "#/definitions/Survey Report"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    example:
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      surveys:
      - list_id: "list_id"
        updated_at: "2017-08-04T11:09:01+00:00"
        created_at: "2017-08-04T11:09:01+00:00"
        total_responses: 810
        id: "040d2c2e1f0"
        web_id: 165
        list_name: "list_name"
        title: "New product ideas"
        published_at: "2017-08-04T11:09:01+00:00"
        url: "url"
        status: "published"
      - list_id: "list_id"
        updated_at: "2017-08-04T11:09:01+00:00"
        created_at: "2017-08-04T11:09:01+00:00"
        total_responses: 810
        id: "040d2c2e1f0"
        web_id: 165
        list_name: "list_name"
        title: "New product ideas"
        published_at: "2017-08-04T11:09:01+00:00"
        url: "url"
        status: "published"
      total_items: 0
  Merge Field_3:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "An unchanging id for the merge field."
        title: "Merge Field ID"
        readOnly: true
      label:
        type: "string"
        description: "The [label](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
          \ for the merge field."
        title: "Merge Field Label"
        readOnly: true
      type:
        type: "string"
        description: "The [type](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
          \ for the merge field."
        title: "Merge Field Type"
        readOnly: true
        enum:
        - "text"
        - "number"
        - "address"
        - "phone"
        - "date"
        - "url"
        - "imageurl"
        - "radio"
        - "dropdown"
        - "birthday"
        - "zip"
    description: "A [merge field](https://mailchimp.com/developer/marketing/docs/merge-fields/)\
      \ for an audience."
    example:
      id: 0
      label: "label"
      type: "text"
  inline_response_200_14_options:
    type: "object"
    properties:
      label:
        type: "string"
        description: "The label for this survey question option."
        title: "Option Label"
      id:
        type: "string"
        description: "The ID for this survey question option."
        title: "Option ID"
      count:
        type: "integer"
        description: "The count of responses that selected this survey question option."
        title: "Response Count"
    example:
      count: 6
      label: "label"
      id: "id"
  Contact Counts:
    type: "object"
    properties:
      known:
        type: "integer"
        description: "The number of known contacts that responded to this survey."
        title: "Known Contacts Count"
      unknown:
        type: "integer"
        description: "The number of unknown contacts that responded to this survey."
        title: "Unknown Contacts Count"
      new:
        type: "integer"
        description: "The number of new contacts that responded to this survey."
        title: "New Contacts Count"
    description: "For email question types, how many are new, known, or unknown contacts."
    example:
      new: 5
      known: 1
      unknown: 5
  Survey Question Report:
    type: "object"
    properties:
      id:
        type: "string"
        description: "The ID of the survey question."
        title: "Survey Question ID"
        readOnly: true
      survey_id:
        type: "string"
        description: "The unique ID of the survey."
        title: "Survey ID"
        readOnly: true
      query:
        type: "string"
        description: "The query of the survey question."
        title: "Query Text"
        readOnly: true
      type:
        type: "string"
        description: "The response type of the survey question."
        title: "Response Type"
        readOnly: true
        enum:
        - "pickOne"
        - "pickMany"
        - "range"
        - "text"
        - "email"
      total_responses:
        type: "integer"
        example: 810
        description: "The total number of responses to this question."
        title: "Total Responses"
        readOnly: true
      is_required:
        type: "boolean"
        description: "Whether this survey question is required to answer."
        title: "Is Required"
        readOnly: true
      has_other:
        type: "boolean"
        description: "Whether this survey question has an 'other' option."
        title: "Has Other Option"
        readOnly: true
      other_label:
        type: "string"
        description: "Label used for the 'other' option of this survey question."
        title: "Other Option Label"
        readOnly: true
      average_rating:
        type: "number"
        format: "float"
        example: 2.5
        description: "The average rating for this range question."
        title: "Average Rating for a Range Question"
        readOnly: true
      range_low_label:
        type: "string"
        description: "Label for the low end of the range."
        title: "Range Low Label"
        readOnly: true
      range_high_label:
        type: "string"
        description: "Label for the high end of the range."
        title: "Range High Label"
        readOnly: true
      placeholder_label:
        type: "string"
        description: "Placeholder text for this survey question's answer box."
        title: "Placeholder Label"
        readOnly: true
      subscribe_checkbox_enabled:
        type: "boolean"
        description: "Whether the subscribe checkbox is shown for this email question."
        title: "Is Subscribe Checkbox Enabled"
        readOnly: true
      subscribe_checkbox_label:
        type: "string"
        description: "Label used for the subscribe checkbox for this email question."
        title: "Subscribe Checkbox Label"
        readOnly: true
      merge_field:
        $ref: "#/definitions/Merge Field_3"
      options:
        type: "array"
        description: "The answer choices for this question."
        title: "Options"
        readOnly: true
        items:
          $ref: "#/definitions/inline_response_200_14_options"
      contact_counts:
        $ref: "#/definitions/Contact Counts"
    description: "The details of a survey question's report."
    example:
      range_low_label: "range_low_label"
      query: "query"
      average_rating: 2.5
      subscribe_checkbox_label: "subscribe_checkbox_label"
      type: "pickOne"
      range_high_label: "range_high_label"
      subscribe_checkbox_enabled: true
      survey_id: "survey_id"
      has_other: true
      placeholder_label: "placeholder_label"
      other_label: "other_label"
      contact_counts:
        new: 5
        known: 1
        unknown: 5
      is_required: true
      options:
      - count: 6
        label: "label"
        id: "id"
      - count: 6
        label: "label"
        id: "id"
      total_responses: 810
      id: "id"
      merge_field:
        id: 0
        label: "label"
        type: "text"
  inline_response_200_14:
    type: "object"
    properties:
      questions:
        type: "array"
        description: "An array of reports for each question on the survey."
        title: "Question Reports"
        items:
          $ref: "#/definitions/Survey Question Report"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    example:
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      questions:
      - range_low_label: "range_low_label"
        query: "query"
        average_rating: 2.5
        subscribe_checkbox_label: "subscribe_checkbox_label"
        type: "pickOne"
        range_high_label: "range_high_label"
        subscribe_checkbox_enabled: true
        survey_id: "survey_id"
        has_other: true
        placeholder_label: "placeholder_label"
        other_label: "other_label"
        contact_counts:
          new: 5
          known: 1
          unknown: 5
        is_required: true
        options:
        - count: 6
          label: "label"
          id: "id"
        - count: 6
          label: "label"
          id: "id"
        total_responses: 810
        id: "id"
        merge_field:
          id: 0
          label: "label"
          type: "text"
      - range_low_label: "range_low_label"
        query: "query"
        average_rating: 2.5
        subscribe_checkbox_label: "subscribe_checkbox_label"
        type: "pickOne"
        range_high_label: "range_high_label"
        subscribe_checkbox_enabled: true
        survey_id: "survey_id"
        has_other: true
        placeholder_label: "placeholder_label"
        other_label: "other_label"
        contact_counts:
          new: 5
          known: 1
          unknown: 5
        is_required: true
        options:
        - count: 6
          label: "label"
          id: "id"
        - count: 6
          label: "label"
          id: "id"
        total_responses: 810
        id: "id"
        merge_field:
          id: 0
          label: "label"
          type: "text"
      total_items: 2
  Contact:
    type: "object"
    properties:
      email_id:
        type: "string"
        description: "The MD5 hash of the lowercase version of the list member's email\
          \ address."
        title: "Email ID"
        readOnly: true
      contact_id:
        type: "string"
        description: "The ID of this contact."
        title: "Contact ID"
        readOnly: true
      status:
        type: "string"
        description: "The contact's current status."
        title: "Contact Status"
        readOnly: true
        enum:
        - "Subscribed"
        - "Unsubscribed"
        - "Non-Subscribed"
        - "Cleaned"
        - "Archived"
      email:
        type: "string"
        description: "The contact's email address."
        title: "Contact Email"
        readOnly: true
      full_name:
        type: "string"
        description: "The contact's full name."
        title: "Full Name"
        readOnly: true
      consents_to_one_to_one_messaging:
        type: "boolean"
        description: "Indicates whether a contact consents to 1:1 messaging."
        title: "Messaging Consent"
        readOnly: true
      avatar_url:
        type: "string"
        description: "URL for the contact's avatar or profile image."
        title: "Avatar URL"
        readOnly: true
    description: "Information about the contact."
    example:
      email_id: "email_id"
      full_name: "full_name"
      avatar_url: "avatar_url"
      contact_id: "contact_id"
      email: "email"
      status: "Subscribed"
      consents_to_one_to_one_messaging: true
  Survey Question Answer:
    type: "object"
    properties:
      id:
        type: "string"
        description: "The ID of the answer."
        title: "Answer ID"
        readOnly: true
      value:
        type: "string"
        description: "The raw text answer."
        title: "Value"
        readOnly: true
      response_id:
        type: "string"
        description: "The ID of the survey response."
        title: "Response ID"
        readOnly: true
      submitted_at:
        type: "string"
        format: "date-time"
        description: "The date and time when the survey response was submitted in\
          \ ISO 8601 format."
        title: "Submitted At"
        readOnly: true
      contact:
        $ref: "#/definitions/Contact"
      is_new_contact:
        type: "boolean"
        description: "If this contact was added to the Mailchimp audience via this\
          \ survey."
        title: "Is New Contact"
    description: "The details of a survey question's answer."
    example:
      submitted_at: "2000-01-23T04:56:07.000+00:00"
      response_id: "response_id"
      contact:
        email_id: "email_id"
        full_name: "full_name"
        avatar_url: "avatar_url"
        contact_id: "contact_id"
        email: "email"
        status: "Subscribed"
        consents_to_one_to_one_messaging: true
      is_new_contact: true
      id: "id"
      value: "value"
  inline_response_200_15:
    type: "object"
    properties:
      answers:
        type: "array"
        description: "An array of answers for a question on the survey."
        title: "Answers"
        items:
          $ref: "#/definitions/Survey Question Answer"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    example:
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      answers:
      - submitted_at: "2000-01-23T04:56:07.000+00:00"
        response_id: "response_id"
        contact:
          email_id: "email_id"
          full_name: "full_name"
          avatar_url: "avatar_url"
          contact_id: "contact_id"
          email: "email"
          status: "Subscribed"
          consents_to_one_to_one_messaging: true
        is_new_contact: true
        id: "id"
        value: "value"
      - submitted_at: "2000-01-23T04:56:07.000+00:00"
        response_id: "response_id"
        contact:
          email_id: "email_id"
          full_name: "full_name"
          avatar_url: "avatar_url"
          contact_id: "contact_id"
          email: "email"
          status: "Subscribed"
          consents_to_one_to_one_messaging: true
        is_new_contact: true
        id: "id"
        value: "value"
      total_items: 0
  Survey Respondents:
    type: "object"
    properties:
      response_id:
        type: "string"
        description: "The ID for the survey response."
        title: "Response ID"
        readOnly: true
      submitted_at:
        type: "string"
        format: "date-time"
        description: "The date and time when the survey response was submitted in\
          \ ISO 8601 format."
        title: "Submitted At"
        readOnly: true
      contact:
        $ref: "#/definitions/Contact"
      is_new_contact:
        type: "boolean"
        description: "If this contact was added to the Mailchimp audience via this\
          \ survey."
        title: "Is New Contact"
    description: "Survey respondent details."
    example:
      submitted_at: "2000-01-23T04:56:07.000+00:00"
      response_id: "response_id"
      contact:
        email_id: "email_id"
        full_name: "full_name"
        avatar_url: "avatar_url"
        contact_id: "contact_id"
        email: "email"
        status: "Subscribed"
        consents_to_one_to_one_messaging: true
      is_new_contact: true
  inline_response_200_16:
    type: "object"
    properties:
      responses:
        type: "array"
        description: "An array of responses to a survey."
        title: "Responses"
        items:
          $ref: "#/definitions/Survey Respondents"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
      _links:
        type: "array"
        description: "A list of link types and descriptions for the API schema documents."
        title: "Links"
        readOnly: true
        items:
          $ref: "#/definitions/Resource Link"
    example:
      _links:
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      - schema: "schema"
        targetSchema: "targetSchema"
        method: "GET"
        rel: "rel"
        href: "href"
      responses:
      - submitted_at: "2000-01-23T04:56:07.000+00:00"
        response_id: "response_id"
        contact:
          email_id: "email_id"
          full_name: "full_name"
          avatar_url: "avatar_url"
          contact_id: "contact_id"
          email: "email"
          status: "Subscribed"
          consents_to_one_to_one_messaging: true
        is_new_contact: true
      - submitted_at: "2000-01-23T04:56:07.000+00:00"
        response_id: "response_id"
        contact:
          email_id: "email_id"
          full_name: "full_name"
          avatar_url: "avatar_url"
          contact_id: "contact_id"
          email: "email"
          status: "Subscribed"
          consents_to_one_to_one_messaging: true
        is_new_contact: true
      total_items: 0
  Response:
    type: "object"
    properties:
      question_id:
        type: "string"
        description: "The unique ID for this question."
        title: "Question ID"
      question_type:
        type: "string"
        description: "The type of question this is."
        title: "Question Type"
        enum:
        - "pickOne"
        - "pickMany"
        - "range"
        - "text"
        - "email"
      query:
        type: "string"
        description: "The survey question."
        title: "Question Query"
      answer:
        type: "string"
        description: "The answer to this survey question."
        title: "Answer"
    description: "A single question and the response to that question."
    example:
      answer: "answer"
      question_type: "pickOne"
      query: "query"
      question_id: "question_id"
  Survey Response:
    type: "object"
    properties:
      response_id:
        type: "string"
        description: "The ID for the survey response."
        title: "Response ID"
        readOnly: true
      submitted_at:
        type: "string"
        format: "date-time"
        description: "The date and time when the survey response was submitted in\
          \ ISO 8601 format."
        title: "Submitted At"
        readOnly: true
      contact:
        $ref: "#/definitions/Contact"
      is_new_contact:
        type: "boolean"
        description: "If this contact was added to the Mailchimp audience via this\
          \ survey."
        title: "Is New Contact"
      results:
        type: "array"
        description: "The survey questions and the answers to those questions."
        title: "Results"
        items:
          $ref: "#/definitions/Response"
    description: "A single survey response."
    example:
      submitted_at: "2000-01-23T04:56:07.000+00:00"
      response_id: "response_id"
      contact:
        email_id: "email_id"
        full_name: "full_name"
        avatar_url: "avatar_url"
        contact_id: "contact_id"
        email: "email"
        status: "Subscribed"
        consents_to_one_to_one_messaging: true
      is_new_contact: true
      results:
      - answer: "answer"
        question_type: "pickOne"
        query: "query"
        question_id: "question_id"
      - answer: "answer"
        question_type: "pickOne"
        query: "query"
        question_id: "question_id"
  Verified Domains:
    type: "object"
    properties:
      domain:
        type: "string"
        description: "The name of this domain."
        title: "Domain Name"
        readOnly: true
      verified:
        type: "boolean"
        description: "Whether the domain has been verified for sending."
        title: "Verified"
        readOnly: true
      authenticated:
        type: "boolean"
        description: "Whether domain authentication is enabled for this domain."
        title: "Authenticated"
        readOnly: true
      verification_email:
        type: "string"
        description: "The e-mail address receiving the two-factor challenge for this\
          \ domain."
        title: "Verification Email"
        readOnly: true
      verification_sent:
        type: "string"
        format: "date-time"
        description: "The date/time that the two-factor challenge was sent to the\
          \ verification email."
        title: "Verification Challenge Sent"
        readOnly: true
    description: "The verified domains currently on the account."
    example:
      authenticated: true
      domain: "domain"
      verified: true
      verification_email: "verification_email"
      verification_sent: "2000-01-23T04:56:07.000+00:00"
  Verify a domain for sending.:
    type: "object"
    required:
    - "code"
    properties:
      code:
        type: "string"
        description: "The code that was sent to the email address provided when adding\
          \ a new domain to verify."
        title: "Verification Code"
    title: "Verify a domain for sending."
    description: "Submit a response to the verification challenge and verify a domain\
      \ for sending."
  Verified Domains_1:
    type: "object"
    properties:
      domains:
        type: "array"
        description: "The domains on the account"
        title: "Domains"
        readOnly: true
        items:
          $ref: "#/definitions/Verified Domains"
      total_items:
        type: "integer"
        description: "The total number of items matching the query regardless of pagination."
        title: "Item Count"
        readOnly: true
    description: "The verified domains currently on the account."
    example:
      domains:
      - authenticated: true
        domain: "domain"
        verified: true
        verification_email: "verification_email"
        verification_sent: "2000-01-23T04:56:07.000+00:00"
      - authenticated: true
        domain: "domain"
        verified: true
        verification_email: "verification_email"
        verification_sent: "2000-01-23T04:56:07.000+00:00"
      total_items: 0
  Verified Domains_2:
    type: "object"
    required:
    - "verification_email"
    properties:
      verification_email:
        type: "string"
        description: "The e-mail address at the domain you want to verify. This will\
          \ receive a two-factor challenge to be used in the verify action."
        title: "Verification Email"
    title: "Verified Domains"
    description: "The verified domains currently on the account."
externalDocs:
  description: "Learn more with the full Mailchimp API documentation."
  url: "https://mailchimp.com/developer/marketing/"
x-doc-structure:
  resources:
    root:
      title: "API Root"
      description: "The API root resource links to all other resources available in\
        \ the API. Calling the root directory also returns details about the Mailchimp\
        \ user account."
      paths:
      - "/"
      subResources: []
    chimp-chatter:
      title: "Chimp Chatter Activity"
      description: "Get the latest Chimp Chatter activity from your account."
      paths:
      - "/activity-feed/chimp-chatter"
    authorized-apps:
      title: "Authorized Apps"
      description: "Manage registered, connected apps for your Mailchimp account with\
        \ the Authorized Apps endpoints."
      paths:
      - "/authorized-apps"
      - "/authorized-apps/{app_id}"
    automation:
      title: "Automations"
      description: "Mailchimp's classic automations feature lets you build a series\
        \ of emails that send to subscribers when triggered by a specific date, activity,\
        \ or event. Use the API to manage Automation workflows, emails, and queues.\
        \ Does not include Customer Journeys."
      paths:
      - "/automations"
      - "/automations/{workflow_id}"
      - "/automations/{workflow_id}/actions/start-all-emails"
      - "/automations/{workflow_id}/actions/pause-all-emails"
      - "/automations/{workflow_id}/actions/archive"
      subResources:
      - "automation-email"
      - "automation-removed-subscribers"
    automation-email:
      title: "Emails"
      description: "Manage individual emails in a classic automation workflow."
      paths:
      - "/automations/{workflow_id}/emails"
      - "/automations/{workflow_id}/emails/{workflow_email_id}"
      - "/automations/{workflow_id}/emails/{workflow_email_id}/actions/pause"
      - "/automations/{workflow_id}/emails/{workflow_email_id}/actions/start"
      subResources:
      - "automation-email-queue"
    automation-email-queue:
      title: "Queue"
      description: "Manage list member queues for classic automation emails."
      paths:
      - "/automations/{workflow_id}/emails/{workflow_email_id}/queue"
      - "/automations/{workflow_id}/emails/{workflow_email_id}/queue/{subscriber_hash}"
      subResources: []
    automation-removed-subscribers:
      title: "Removed Subscribers"
      description: "Remove subscribers from a classic automation workflow."
      paths:
      - "/automations/{workflow_id}/removed-subscribers"
      - "/automations/{workflow_id}/removed-subscribers/{subscriber_hash}"
      subResources: []
    batch-operations:
      title: "Batch Operations"
      description: "Use batch operations to complete multiple operations with a single\
        \ call."
      paths:
      - "/batches"
      - "/batches/{batch_id}"
    batch-webhooks:
      title: "Batch Webhooks"
      description: "Manage webhooks for batch operations. "
      paths:
      - "/batch-webhooks"
      - "/batch-webhooks/{batch_webhook_id}"
    account-exports:
      title: "Account Exports"
      description: "Generate a new export or download a finished export."
      paths:
      - "/account-exports"
      - "/account-exports/{export_id}"
    campaigns:
      title: "Campaigns"
      description: "Campaigns are how you send emails to your Mailchimp list. Use\
        \ the Campaigns API calls to manage campaigns in your Mailchimp account."
      paths:
      - "/campaigns"
      - "/campaigns/{campaign_id}"
      - "/campaigns/{campaign_id}/actions/cancel-send"
      - "/campaigns/{campaign_id}/actions/send"
      - "/campaigns/{campaign_id}/actions/schedule"
      - "/campaigns/{campaign_id}/actions/unschedule"
      - "/campaigns/{campaign_id}/actions/pause"
      - "/campaigns/{campaign_id}/actions/resume"
      - "/campaigns/{campaign_id}/actions/replicate"
      - "/campaigns/{campaign_id}/actions/test"
      - "/campaigns/{campaign_id}/actions/create-resend"
      subResources:
      - "campaign-feedback"
      - "campaign-checklist"
      - "campaign-content"
    campaign-feedback:
      title: "Feedback"
      description: "Post comments, reply to team feedback, and send test emails while\
        \ you're working together on a Mailchimp campaign."
      paths:
      - "/campaigns/{campaign_id}/feedback"
      - "/campaigns/{campaign_id}/feedback/{feedback_id}"
    campaign-checklist:
      title: "Send Checklist"
      description: "Review the send checklist for your campaign, and resolve any issues\
        \ before sending."
      paths:
      - "/campaigns/{campaign_id}/send-checklist"
    campaign-content:
      title: "Content"
      description: "Manage the HTML, plain-text, and template content for your Mailchimp\
        \ campaigns."
      paths:
      - "/campaigns/{campaign_id}/content"
    connected-sites:
      title: "Connected Sites"
      description: "Manage sites you've connected to your Mailchimp account."
      paths:
      - "/connected-sites"
      - "/connected-sites/{connected_site_id}"
      - "/connected-sites/{connected_site_id}/actions/verify-script-installation"
    conversations:
      title: "Conversations"
      description: "Conversation tracking lets you view subscribers' replies to your\
        \ campaigns in your Mailchimp account."
      paths:
      - "/conversations"
      - "/conversations/{conversation_id}"
      subResources:
      - "conversation-messages"
    conversation-messages:
      title: "Messages"
      description: "Manage messages in a specific campaign conversation."
      paths:
      - "/conversations/{conversation_id}/messages"
      - "/conversations/{conversation_id}/messages/{message_id}"
    customer-journeys-journeys-steps-actions:
      title: "Customer Journeys"
      description: "Manage Customer Journey automated workflows"
      paths:
      - "/customer-journeys/journeys/{journey_id}/steps/{step_id}/actions/trigger"
      subResources: []
    file-manager:
      title: "File Manager"
      description: "Manage files for your Mailchimp account. The File Manager is a\
        \ place to store images, documents, and other files you include or link to\
        \ in your campaigns, templates, or signup forms."
      paths: []
      subResources:
      - "file-manager-folders"
      - "file-manager-files"
    file-manager-folders:
      title: "File Manager Folders"
      description: "Manage specific folders in the File Manager for your Mailchimp\
        \ account."
      paths:
      - "/file-manager/folders"
      - "/file-manager/folders/{folder_id}"
      subResources:
      - "file-manager-folders-files"
    file-manager-files:
      title: "File Manager Files"
      description: "Manage specific files in the File Manager for your Mailchimp account."
      paths:
      - "/file-manager/files"
      - "/file-manager/files/{file_id}"
    file-manager-folders-files:
      title: "Files in Folder"
      description: "Manage specific files in a folder."
      paths:
      - "/file-manager/folders/{folder_id}/files"
    landing-pages:
      title: "Landing Pages"
      description: "Manage your Landing Pages, including publishing and unpublishing."
      paths:
      - "/landing-pages"
      - "/landing-pages/{page_id}"
      - "/landing-pages/{page_id}/actions/publish"
      - "/landing-pages/{page_id}/actions/unpublish"
      subResources:
      - "landing-pages_content"
    landing-pages_content:
      title: "Content"
      description: "The HTML content for your Mailchimp landing pages."
      paths:
      - "/landing-pages/{page_id}/content"
    lists:
      title: "Lists/Audiences"
      description: "Your Mailchimp list, also known as your audience, is where you\
        \ store and manage all of your contacts."
      paths:
      - "/lists"
      - "/lists/{list_id}"
      subResources:
      - "interest-categories"
      - "list-segments"
      - "abuse-reports"
      - "list-activity"
      - "list-clients"
      - "list-growth-history"
      - "list-imports"
      - "list-members"
      - "list-merges"
      - "list-webhooks"
      - "list-signup-forms"
      - "list-locations"
      - "lists-tags-search"
      - "prebuilt-segments"
      - "list-preview-segment"
      - "list-surveys"
    list-members:
      title: "Members"
      description: "Manage members of a specific Mailchimp list, including currently\
        \ subscribed, unsubscribed, and bounced members."
      paths:
      - "/lists/{list_id}/members"
      - "/lists/{list_id}/members/{subscriber_hash}"
      - "/lists/{list_id}/members/{subscriber_hash}/actions/delete-permanent"
      subResources:
      - "list-member-activity"
      - "list-member-activity-feed"
      - "list-member-goal"
      - "list-member-notes"
      - "list-member-tags"
      - "list-member-events"
    list-merges:
      title: "Merge Fields"
      description: "Manage merge fields for an audience. See [Merge Field documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/)\
        \ for more."
      paths:
      - "/lists/{list_id}/merge-fields"
      - "/lists/{list_id}/merge-fields/{merge_id}"
      subResources: []
    abuse-reports:
      title: "Abuse Reports"
      description: "Manage abuse complaints for a specific list. An abuse complaint\
        \ occurs when your recipient reports an email as spam in their mail program."
      paths:
      - "/lists/{list_id}/abuse-reports"
      - "/lists/{list_id}/abuse-reports/{report_id}"
    list-activity:
      title: "Activity"
      description: "Get recent daily, aggregated activity stats for your list. For\
        \ example, view unsubscribes, signups, total emails sent, opens, clicks, and\
        \ more, for up to 180 days."
      paths:
      - "/lists/{list_id}/activity"
    list-clients:
      title: "Clients"
      description: "Get information about the most popular email clients for subscribers\
        \ in a specific Mailchimp list."
      paths:
      - "/lists/{list_id}/clients"
    list-growth-history:
      title: "Growth History"
      description: "View a summary of the month-by-month growth activity for a specific\
        \ list."
      paths:
      - "/lists/{list_id}/growth-history"
      - "/lists/{list_id}/growth-history/{month}"
    list-webhooks:
      title: "Webhooks"
      description: "Manage webhooks for a specific Mailchimp list."
      paths:
      - "/lists/{list_id}/webhooks"
      - "/lists/{list_id}/webhooks/{webhook_id}"
    list-surveys:
      title: "Surveys"
      description: "Get survey data for this audience."
      paths:
      - "/lists/{list_id}/surveys"
      - "/lists/{list_id}/surveys/{survey_id}"
      - "/lists/{list_id}/surveys/{survey_id}/actions/publish"
      - "/lists/{list_id}/surveys/{survey_id}/actions/unpublish"
      - "/lists/{list_id}/surveys/{survey_id}/actions/create-email"
    interest-categories:
      title: "Interest Categories"
      description: "Manage interest categories for a specific list. Interest categories\
        \ organize interests, which are used to group subscribers based on their preferences.\
        \ These correspond to 'group titles' in the Mailchimp application."
      paths:
      - "/lists/{list_id}/interest-categories"
      - "/lists/{list_id}/interest-categories/{interest_category_id}"
      subResources:
      - "interests"
    interests:
      title: "Interests"
      description: "Manage interests for a specific Mailchimp list. Assign subscribers\
        \ to interests to group them together. Interests are referred to as 'group\
        \ names' in the Mailchimp application."
      paths:
      - "/lists/{list_id}/interest-categories/{interest_category_id}/interests"
      - "/lists/{list_id}/interest-categories/{interest_category_id}/interests/{interest_id}"
    lists-tags-search:
      title: "Tag Search"
      description: "Search for tags on a list by name."
      paths:
      - "/lists/{list_id}/tag-search"
    list-segments:
      title: "Segments"
      description: "Manage segments and tags for a specific Mailchimp list. A segment\
        \ is a section of your list that includes only those subscribers who share\
        \ specific common field information. Tags are labels you create to help organize\
        \ your contacts."
      paths:
      - "/lists/{list_id}/segments"
      - "/lists/{list_id}/segments/{segment_id}"
      subResources:
      - "list-segment-members"
    list-segment-members:
      title: "Segment Members"
      description: "Manage list members in a saved segment."
      paths:
      - "/lists/{list_id}/segments/{segment_id}/members"
      - "/lists/{list_id}/segments/{segment_id}/members/{subscriber_hash}"
    list-member-activity:
      title: "Member Activity"
      description: "Get details about a subscriber's recent activity. Use the new\
        \ activity-feed endpoint to access more events for a given contact."
      paths:
      - "/lists/{list_id}/members/{subscriber_hash}/activity"
    list-member-activity-feed:
      title: "Member Activity Feed"
      description: "Get details about a subscriber's recent activity."
      paths:
      - "/lists/{list_id}/members/{subscriber_hash}/activity-feed"
    list-member-goal:
      title: "Member Goals"
      description: "Get information about recent goal events for a specific list member."
      paths:
      - "/lists/{list_id}/members/{subscriber_hash}/goals"
    list-member-notes:
      title: "Member Notes"
      description: "Retrieve recent notes for a specific list member."
      paths:
      - "/lists/{list_id}/members/{subscriber_hash}/notes"
      - "/lists/{list_id}/members/{subscriber_hash}/notes/{note_id}"
    list-member-tags:
      title: "Member Tags"
      description: "Manage all the tags that have been assigned to a contact."
      paths:
      - "/lists/{list_id}/members/{subscriber_hash}/tags"
    list-member-events:
      title: "Events"
      description: "Use the Events endpoint to collect website or in-app actions and\
        \ trigger targeted automations. "
      paths:
      - "/lists/{list_id}/members/{subscriber_hash}/events"
    list-signup-forms:
      title: "Signup Forms"
      description: "Manage list signup forms."
      paths:
      - "/lists/{list_id}/signup-forms"
    list-locations:
      title: "Locations"
      description: "Get the locations (countries) that the list's subscribers have\
        \ been tagged to based on geocoding their IP address."
      paths:
      - "/lists/{list_id}/locations"
    reports:
      title: "Reports"
      description: "Manage campaign reports for your Mailchimp account. All Reports\
        \ endpoints are read-only. Mailchimp's campaign and automation reports analyze\
        \ clicks, opens, subscribers' social activity, e-commerce data, and more.\
        \ Note: Campaign IDs for A/B Testing Campaigns are available through the Campaign\
        \ API Endpoint's Read method."
      paths:
      - "/reports"
      - "/reports/{campaign_id}"
      subResources:
      - "campaign-abuse"
      - "campaign-advice"
      - "click-reports"
      - "domain-performance-reports"
      - "eepurl-reports"
      - "email-activity-reports"
      - "location-reports"
      - "sent-to-reports"
      - "sub-reports"
      - "unsub-reports"
      - "open-reports"
      - "campaign-ecommerce-product-activity"
    campaign-abuse:
      title: "Campaign Abuse"
      description: "Get information about campaign abuse complaints."
      paths:
      - "/reports/{campaign_id}/abuse-reports"
      - "/reports/{campaign_id}/abuse-reports/{report_id}"
    campaign-advice:
      title: "Campaign Advice"
      description: "Get recent feedback based on a campaign's statistics."
      paths:
      - "/reports/{campaign_id}/advice"
    open-reports:
      title: "Campaign Open Reports"
      description: "Get a detailed report about any emails in a specific campaign\
        \ that were opened by the recipient. "
      paths:
      - "/reports/{campaign_id}/open-details"
      - "/reports/{campaign_id}/open-details/{subscriber_hash}"
    click-reports:
      title: "Click Reports"
      description: "Get detailed information about links clicked in campaigns."
      paths:
      - "/reports/{campaign_id}/click-details"
      - "/reports/{campaign_id}/click-details/{link_id}"
      subResources:
      - "link-clickers"
    campaign-ecommerce-product-activity:
      title: "Ecommerce Product Activity"
      description: "Ecommerce product activity report for a campaign."
      paths:
      - "/reports/{campaign_id}/ecommerce-product-activity"
    link-clickers:
      title: "Click Reports Members"
      description: "Get information about specific subscribers who clicked on links\
        \ in a campaign."
      paths:
      - "/reports/{campaign_id}/click-details/{link_id}/members"
      - "/reports/{campaign_id}/click-details/{link_id}/members/{subscriber_hash}"
    domain-performance-reports:
      title: "Domain Performance"
      description: "Get statistics for the top-performing domains from a campaign."
      paths:
      - "/reports/{campaign_id}/domain-performance"
    eepurl-reports:
      title: "EepURL Reports"
      description: "Get a summary of social activity for the campaign, tracked by\
        \ EepURL."
      paths:
      - "/reports/{campaign_id}/eepurl"
    email-activity-reports:
      title: "Email Activity"
      description: "Get list member activity for a specific campaign."
      paths:
      - "/reports/{campaign_id}/email-activity"
      - "/reports/{campaign_id}/email-activity/{subscriber_hash}"
    location-reports:
      title: "Location"
      description: "Get top open locations for a specific campaign."
      paths:
      - "/reports/{campaign_id}/locations"
    sent-to-reports:
      title: "Sent To"
      description: "Get details about campaign recipients."
      paths:
      - "/reports/{campaign_id}/sent-to"
      - "/reports/{campaign_id}/sent-to/{subscriber_hash}"
    sub-reports:
      title: "Sub-Reports"
      description: "A list of reports for child campaigns of a specific parent campaign.\
        \ For example, use this endpoint to view Multivariate, RSS, and A/B Testing\
        \ Campaign reports."
      paths:
      - "/reports/{campaign_id}/sub-reports"
    unsub-reports:
      title: "Unsubscribes"
      description: "Get information about list members who unsubscribed from a specific\
        \ campaign."
      paths:
      - "/reports/{campaign_id}/unsubscribed"
      - "/reports/{campaign_id}/unsubscribed/{subscriber_hash}"
    templates:
      title: "Templates"
      description: "Manage your Mailchimp templates. A template is an HTML file used\
        \ to create the layout and basic design for a campaign. "
      paths:
      - "/templates"
      - "/templates/{template_id}"
      subResources:
      - "template-default-content"
    template-default-content:
      title: "Default Content"
      description: "Manage the default content for a Mailchimp template."
      paths:
      - "/templates/{template_id}/default-content"
    template-folders:
      title: "Template Folders"
      description: "Organize your templates using folders."
      paths:
      - "/template-folders"
      - "/template-folders/{folder_id}"
    campaign-folders:
      title: "Campaign Folders"
      description: "Organize your campaigns using folders."
      paths:
      - "/campaign-folders"
      - "/campaign-folders/{folder_id}"
    ecommerce-stores:
      title: "E-commerce Stores"
      description: "Connect your E-commerce Store to Mailchimp to take advantage of\
        \ powerful reporting and personalization features and to learn more about\
        \ your customers."
      paths:
      - "/ecommerce/stores"
      - "/ecommerce/stores/{store_id}"
      subResources:
      - "ecommerce-customers"
      - "ecommerce-orders"
      - "ecommerce-products"
      - "ecommerce-carts"
      - "ecommerce-promo-rules"
    ecommerce-customers:
      title: "Customers"
      description: "Add Customers to your Store to track their orders and to view\
        \ E-Commerce Data for your Mailchimp lists and campaigns. Each Customer is\
        \ connected to a Mailchimp list member, so adding a Customer can also add\
        \ or update a list member."
      paths:
      - "/ecommerce/stores/{store_id}/customers"
      - "/ecommerce/stores/{store_id}/customers/{customer_id}"
    ecommerce-promo-rules:
      title: "Promo Rules"
      description: "Promo Rules help you create promo codes for your campaigns. Promo\
        \ Rules define generic information about promo codes like expiration time,\
        \ start time, amount of discount being offered etc. For a given promo rule\
        \ you can define if it's a percentage discount or a fixed amount and if it\
        \ applies for the order as a whole or if it's per item or free shipping. You\
        \ can then create promo codes for this price rule. Promo codes contain the\
        \ actual code that is applied at checkout along with some other information.\
        \ Price Rules have one to many relationship with promo codes."
      paths:
      - "/ecommerce/stores/{store_id}/promo-rules"
      - "/ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}"
      subResources:
      - "ecommerce-promo-codes"
    ecommerce-promo-codes:
      title: "Promo Codes"
      description: "Promo codes can be created for a given price rule. All the promo\
        \ codes under a price rule share the generic information defined for that\
        \ rule like the amount, type, expiration date etc. Promo code defines the\
        \ more specific information about a promo code like the actual code, redemption_url,\
        \ usage_count, etc that's unique to a code. Promo Code must be defined under\
        \ a promo rule."
      paths:
      - "/ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}/promo-codes"
      - "/ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}/promo-codes/{promo_code_id}"
    ecommerce-orders:
      title: "Orders"
      description: "Orders represent successful e-commerce transactions, and this\
        \ data can be used to provide more detailed campaign reports, track sales,\
        \ and personalize emails to your targeted consumers, and view other e-commerce\
        \ data in your Mailchimp account."
      paths:
      - "/ecommerce/orders"
      - "/ecommerce/stores/{store_id}/orders"
      - "/ecommerce/stores/{store_id}/orders/{order_id}"
      subResources:
      - "ecommerce-order-lines"
    ecommerce-order-lines:
      title: "Order Lines"
      description: "Each Order contains one or more Order Lines, which represent a\
        \ specific Product Variant that a Customer purchases."
      paths:
      - "/ecommerce/stores/{store_id}/orders/{order_id}/lines"
      - "/ecommerce/stores/{store_id}/orders/{order_id}/lines/{line_id}"
    ecommerce-products:
      title: "Products"
      description: "E-commerce items for sale in your store need to be created as\
        \ Products so you can add the items to a Cart or an Order. Each Product requires\
        \ at least one Product Variant."
      paths:
      - "/ecommerce/stores/{store_id}/products"
      - "/ecommerce/stores/{store_id}/products/{product_id}"
      subResources:
      - "ecommerce-product-variants"
      - "ecommerce-product-images"
    ecommerce-product-variants:
      title: "Product Variants"
      description: "A Product Variant represents a specific item for purchase, and\
        \ is contained within a parent Product. At least one Product Variant is required\
        \ for each Product."
      paths:
      - "/ecommerce/stores/{store_id}/products/{product_id}/variants"
      - "/ecommerce/stores/{store_id}/products/{product_id}/variants/{variant_id}"
    ecommerce-product-images:
      title: "Product Images"
      description: "A Product Image represents a specific product image."
      paths:
      - "/ecommerce/stores/{store_id}/products/{product_id}/images"
      - "/ecommerce/stores/{store_id}/products/{product_id}/images/{image_id}"
    ecommerce-carts:
      title: "Carts"
      description: "Use Carts to represent unfinished e-commerce transactions. This\
        \ can be used to create an Abandoned Cart workflow, or to save a consumer’\
        s shopping cart pending a successful Order."
      paths:
      - "/ecommerce/stores/{store_id}/carts"
      - "/ecommerce/stores/{store_id}/carts/{cart_id}"
      subResources:
      - "ecommerce-cart-lines"
    ecommerce-cart-lines:
      title: "Cart Lines"
      description: "Each Cart contains one or more Cart Lines, which represent a specific\
        \ Product Variant that a Customer has added to their shopping cart."
      paths:
      - "/ecommerce/stores/{store_id}/carts/{cart_id}/lines"
      - "/ecommerce/stores/{store_id}/carts/{cart_id}/lines/{line_id}"
    facebook-ads:
      title: "Facebook Ads"
      description: "Get information about Facebook Ads."
      paths:
      - "/facebook-ads"
      - "/facebook-ads/{outreach_id}"
    ping:
      title: "Ping"
      description: "A health check endpoint for Mailchimp API 3.0."
      paths:
      - "/ping"
    reporting:
      title: "Reporting"
      description: "Reporting for various campaign types."
      paths: []
      subResources:
      - "reporting-facebook-ads"
      - "reporting-google-ads"
      - "reporting-landing-pages"
      - "reporting-postcards"
      - "reporting-social-posts"
      - "reporting-surveys"
      - "reporting-websites"
    reporting-facebook-ads:
      title: "Facebook Ads"
      description: "Get information about Facebook Ad reports. "
      paths:
      - "/reporting/facebook-ads"
      - "/reporting/facebook-ads/{outreach_id}"
      - "/reporting/facebook-ads/{outreach_id}/ecommerce-product-activity"
    reporting-landing-pages:
      title: "Landing Pages"
      description: "Get information about Landing Page reports."
      paths:
      - "/reporting/landing-pages"
      - "/reporting/landing-pages/{outreach_id}"
    reporting-surveys:
      title: "Surveys"
      description: "Survey reports"
      paths:
      - "/reporting/surveys"
      - "/reporting/surveys/{outreach_id}"
      subResources:
      - "reporting-surveys-questions"
      - "reporting-surveys-responses"
    reporting-surveys-questions:
      title: "Survey Questions"
      description: "Survey question reports"
      paths:
      - "/reporting/surveys/{outreach_id}/questions"
      - "/reporting/surveys/{outreach_id}/questions/{question_id}"
      subResources:
      - "reporting-surveys-questions-answers"
    reporting-surveys-questions-answers:
      title: "Survey Question Answers"
      description: "Survey question answers"
      paths:
      - "/reporting/surveys/{outreach_id}/questions/{question_id}/answers"
    reporting-surveys-responses:
      title: "Survey Responses"
      description: "Survey response reports"
      paths:
      - "/reporting/surveys/{outreach_id}/responses"
      - "/reporting/surveys/{outreach_id}/responses/{response_id}"
    search-campaigns:
      title: "Search Campaigns"
      description: "Search all of an account's campaigns for the specified query terms."
      paths:
      - "/search-campaigns"
    search-members:
      title: "Search Members"
      description: "Search the account or a specific list for members that match the\
        \ specified query terms."
      paths:
      - "/search-members"
    verified-domains:
      x-hidden: false
      title: "Verified Domains"
      description: "Manage the domains on your account that can be used for sending\
        \ email campaigns."
      paths:
      - "/verified-domains"
      - "/verified-domains/{domain_name}"
      - "/verified-domains/{domain_name}/actions/verify"
      subresources: []
